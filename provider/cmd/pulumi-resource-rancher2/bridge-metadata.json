{
    "auto-aliasing": {
        "resources": {
            "rancher2_app": {
                "current": "rancher2:index/app:App",
                "majorVersion": 6
            },
            "rancher2_app_v2": {
                "current": "rancher2:index/appV2:AppV2",
                "majorVersion": 6
            },
            "rancher2_auth_config_activedirectory": {
                "current": "rancher2:index/authConfigActiveDirectory:AuthConfigActiveDirectory",
                "majorVersion": 6,
                "fields": {
                    "allowed_principal_ids": {
                        "maxItemsOne": false
                    },
                    "servers": {
                        "maxItemsOne": false
                    }
                }
            },
            "rancher2_auth_config_adfs": {
                "current": "rancher2:index/authConfigAdfs:AuthConfigAdfs",
                "majorVersion": 6,
                "fields": {
                    "allowed_principal_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "rancher2_auth_config_azuread": {
                "current": "rancher2:index/authConfigAzureAd:AuthConfigAzureAd",
                "majorVersion": 6,
                "fields": {
                    "allowed_principal_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "rancher2_auth_config_freeipa": {
                "current": "rancher2:index/authConfigFreeIpa:AuthConfigFreeIpa",
                "majorVersion": 6,
                "fields": {
                    "allowed_principal_ids": {
                        "maxItemsOne": false
                    },
                    "servers": {
                        "maxItemsOne": false
                    }
                }
            },
            "rancher2_auth_config_github": {
                "current": "rancher2:index/authConfigGithub:AuthConfigGithub",
                "majorVersion": 6,
                "fields": {
                    "allowed_principal_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "rancher2_auth_config_keycloak": {
                "current": "rancher2:index/authConfigKeycloak:AuthConfigKeycloak",
                "majorVersion": 6,
                "fields": {
                    "allowed_principal_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "rancher2_auth_config_okta": {
                "current": "rancher2:index/authConfigOkta:AuthConfigOkta",
                "majorVersion": 6,
                "fields": {
                    "allowed_principal_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "rancher2_auth_config_openldap": {
                "current": "rancher2:index/authConfigOpenLdap:AuthConfigOpenLdap",
                "majorVersion": 6,
                "fields": {
                    "allowed_principal_ids": {
                        "maxItemsOne": false
                    },
                    "servers": {
                        "maxItemsOne": false
                    }
                }
            },
            "rancher2_auth_config_ping": {
                "current": "rancher2:index/authConfigPing:AuthConfigPing",
                "majorVersion": 6,
                "fields": {
                    "allowed_principal_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "rancher2_bootstrap": {
                "current": "rancher2:index/bootstrap:Bootstrap",
                "majorVersion": 6
            },
            "rancher2_catalog": {
                "current": "rancher2:index/catalog:Catalog",
                "majorVersion": 6
            },
            "rancher2_catalog_v2": {
                "current": "rancher2:index/catalogV2:CatalogV2",
                "majorVersion": 6
            },
            "rancher2_certificate": {
                "current": "rancher2:index/certificate:Certificate",
                "majorVersion": 6
            },
            "rancher2_cloud_credential": {
                "current": "rancher2:index/cloudCredential:CloudCredential",
                "majorVersion": 6,
                "fields": {
                    "amazonec2_credential_config": {
                        "maxItemsOne": true
                    },
                    "azure_credential_config": {
                        "maxItemsOne": true
                    },
                    "digitalocean_credential_config": {
                        "maxItemsOne": true
                    },
                    "google_credential_config": {
                        "maxItemsOne": true
                    },
                    "harvester_credential_config": {
                        "maxItemsOne": true
                    },
                    "linode_credential_config": {
                        "maxItemsOne": true
                    },
                    "openstack_credential_config": {
                        "maxItemsOne": true
                    },
                    "s3_credential_config": {
                        "maxItemsOne": true
                    },
                    "vsphere_credential_config": {
                        "maxItemsOne": true
                    }
                }
            },
            "rancher2_cluster": {
                "current": "rancher2:index/cluster:Cluster",
                "majorVersion": 6,
                "fields": {
                    "agent_env_vars": {
                        "maxItemsOne": false
                    },
                    "aks_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "tags": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "aks_config_v2": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "authorized_ip_ranges": {
                                    "maxItemsOne": false
                                },
                                "node_pools": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "availability_zones": {
                                                "maxItemsOne": false
                                            },
                                            "taints": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "cluster_agent_deployment_customization": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "append_tolerations": {
                                    "maxItemsOne": false
                                },
                                "override_resource_requirements": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "cluster_auth_endpoint": {
                        "maxItemsOne": true
                    },
                    "cluster_monitoring_input": {
                        "maxItemsOne": true
                    },
                    "cluster_registration_token": {
                        "maxItemsOne": true
                    },
                    "cluster_template_answers": {
                        "maxItemsOne": true
                    },
                    "cluster_template_questions": {
                        "maxItemsOne": false
                    },
                    "eks_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "security_groups": {
                                    "maxItemsOne": false
                                },
                                "subnets": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "eks_config_v2": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "logging_types": {
                                    "maxItemsOne": false
                                },
                                "node_groups": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "launch_template": {
                                                "maxItemsOne": false
                                            },
                                            "spot_instance_types": {
                                                "maxItemsOne": false
                                            },
                                            "subnets": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "public_access_sources": {
                                    "maxItemsOne": false
                                },
                                "security_groups": {
                                    "maxItemsOne": false
                                },
                                "subnets": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "fleet_agent_deployment_customization": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "append_tolerations": {
                                    "maxItemsOne": false
                                },
                                "override_resource_requirements": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "gke_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "locations": {
                                    "maxItemsOne": false
                                },
                                "master_authorized_network_cidr_blocks": {
                                    "maxItemsOne": false
                                },
                                "oauth_scopes": {
                                    "maxItemsOne": false
                                },
                                "taints": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "gke_config_v2": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "cluster_addons": {
                                    "maxItemsOne": true
                                },
                                "ip_allocation_policy": {
                                    "maxItemsOne": true
                                },
                                "locations": {
                                    "maxItemsOne": false
                                },
                                "master_authorized_networks_config": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "cidr_blocks": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "node_pools": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "autoscaling": {
                                                "maxItemsOne": true
                                            },
                                            "config": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "oauth_scopes": {
                                                            "maxItemsOne": false
                                                        },
                                                        "tags": {
                                                            "maxItemsOne": false
                                                        },
                                                        "taints": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            },
                                            "management": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "private_cluster_config": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "k3s_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "upgrade_strategy": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "oke_config": {
                        "maxItemsOne": true
                    },
                    "rke2_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "upgrade_strategy": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "rke_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "addons_include": {
                                    "maxItemsOne": false
                                },
                                "authentication": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "sans": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "authorization": {
                                    "maxItemsOne": true
                                },
                                "bastion_host": {
                                    "maxItemsOne": true
                                },
                                "cloud_provider": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "aws_cloud_provider": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "global": {
                                                            "maxItemsOne": true
                                                        },
                                                        "service_override": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            },
                                            "azure_cloud_provider": {
                                                "maxItemsOne": true
                                            },
                                            "openstack_cloud_provider": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "block_storage": {
                                                            "maxItemsOne": true
                                                        },
                                                        "global": {
                                                            "maxItemsOne": true
                                                        },
                                                        "load_balancer": {
                                                            "maxItemsOne": true
                                                        },
                                                        "metadata": {
                                                            "maxItemsOne": true
                                                        },
                                                        "route": {
                                                            "maxItemsOne": true
                                                        }
                                                    }
                                                }
                                            },
                                            "vsphere_cloud_provider": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "disk": {
                                                            "maxItemsOne": true
                                                        },
                                                        "global": {
                                                            "maxItemsOne": true
                                                        },
                                                        "network": {
                                                            "maxItemsOne": true
                                                        },
                                                        "virtual_center": {
                                                            "maxItemsOne": false
                                                        },
                                                        "workspace": {
                                                            "maxItemsOne": true
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "dns": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "linear_autoscaler_params": {
                                                "maxItemsOne": true
                                            },
                                            "nodelocal": {
                                                "maxItemsOne": true
                                            },
                                            "reverse_cidrs": {
                                                "maxItemsOne": false
                                            },
                                            "tolerations": {
                                                "maxItemsOne": false
                                            },
                                            "update_strategy": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "rolling_update": {
                                                            "maxItemsOne": true
                                                        }
                                                    }
                                                }
                                            },
                                            "upstream_nameservers": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "ingress": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "tolerations": {
                                                "maxItemsOne": false
                                            },
                                            "update_strategy": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "rolling_update": {
                                                            "maxItemsOne": true
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "monitoring": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "tolerations": {
                                                "maxItemsOne": false
                                            },
                                            "update_strategy": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "rolling_update": {
                                                            "maxItemsOne": true
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "network": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "aci_network_provider": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "apic_hosts": {
                                                            "maxItemsOne": false
                                                        },
                                                        "kafka_brokers": {
                                                            "maxItemsOne": false
                                                        },
                                                        "l3out_external_networks": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            },
                                            "calico_network_provider": {
                                                "maxItemsOne": true
                                            },
                                            "canal_network_provider": {
                                                "maxItemsOne": true
                                            },
                                            "flannel_network_provider": {
                                                "maxItemsOne": true
                                            },
                                            "tolerations": {
                                                "maxItemsOne": false
                                            },
                                            "weave_network_provider": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "nodes": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "role": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "private_registries": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "ecr_credential_plugin": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "services": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "etcd": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "backup_config": {
                                                            "maxItemsOne": true,
                                                            "elem": {
                                                                "fields": {
                                                                    "s3_backup_config": {
                                                                        "maxItemsOne": true
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "external_urls": {
                                                            "maxItemsOne": false
                                                        },
                                                        "extra_binds": {
                                                            "maxItemsOne": false
                                                        },
                                                        "extra_env": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            },
                                            "kube_api": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "admission_configuration": {
                                                            "maxItemsOne": true,
                                                            "elem": {
                                                                "fields": {
                                                                    "plugins": {
                                                                        "maxItemsOne": false
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "audit_log": {
                                                            "maxItemsOne": true,
                                                            "elem": {
                                                                "fields": {
                                                                    "configuration": {
                                                                        "maxItemsOne": true
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "event_rate_limit": {
                                                            "maxItemsOne": true
                                                        },
                                                        "extra_binds": {
                                                            "maxItemsOne": false
                                                        },
                                                        "extra_env": {
                                                            "maxItemsOne": false
                                                        },
                                                        "secrets_encryption_config": {
                                                            "maxItemsOne": true
                                                        }
                                                    }
                                                }
                                            },
                                            "kube_controller": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "extra_binds": {
                                                            "maxItemsOne": false
                                                        },
                                                        "extra_env": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            },
                                            "kubelet": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "extra_binds": {
                                                            "maxItemsOne": false
                                                        },
                                                        "extra_env": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            },
                                            "kubeproxy": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "extra_binds": {
                                                            "maxItemsOne": false
                                                        },
                                                        "extra_env": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            },
                                            "scheduler": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "extra_binds": {
                                                            "maxItemsOne": false
                                                        },
                                                        "extra_env": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "upgrade_strategy": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "drain_input": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "rancher2_cluster_alert_group": {
                "current": "rancher2:index/clusterAlertGroup:ClusterAlertGroup",
                "majorVersion": 6,
                "fields": {
                    "recipients": {
                        "maxItemsOne": false
                    }
                }
            },
            "rancher2_cluster_alert_rule": {
                "current": "rancher2:index/clusterAlertRule:ClusterAlertRule",
                "majorVersion": 6,
                "fields": {
                    "event_rule": {
                        "maxItemsOne": true
                    },
                    "metric_rule": {
                        "maxItemsOne": true
                    },
                    "node_rule": {
                        "maxItemsOne": true
                    },
                    "system_service_rule": {
                        "maxItemsOne": true
                    }
                }
            },
            "rancher2_cluster_driver": {
                "current": "rancher2:index/clusterDriver:ClusterDriver",
                "majorVersion": 6,
                "fields": {
                    "whitelist_domains": {
                        "maxItemsOne": false
                    }
                }
            },
            "rancher2_cluster_role_template_binding": {
                "current": "rancher2:index/clusterRoleTemplateBinding:ClusterRoleTemplateBinding",
                "majorVersion": 6
            },
            "rancher2_cluster_sync": {
                "current": "rancher2:index/clusterSync:ClusterSync",
                "majorVersion": 6,
                "fields": {
                    "node_pool_ids": {
                        "maxItemsOne": false
                    },
                    "nodes": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "roles": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "rancher2_cluster_template": {
                "current": "rancher2:index/clusterTemplate:ClusterTemplate",
                "majorVersion": 6,
                "fields": {
                    "members": {
                        "maxItemsOne": false
                    },
                    "template_revisions": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "cluster_config": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "cluster_auth_endpoint": {
                                                "maxItemsOne": true
                                            },
                                            "rke_config": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "addons_include": {
                                                            "maxItemsOne": false
                                                        },
                                                        "authentication": {
                                                            "maxItemsOne": true,
                                                            "elem": {
                                                                "fields": {
                                                                    "sans": {
                                                                        "maxItemsOne": false
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "authorization": {
                                                            "maxItemsOne": true
                                                        },
                                                        "bastion_host": {
                                                            "maxItemsOne": true
                                                        },
                                                        "cloud_provider": {
                                                            "maxItemsOne": true,
                                                            "elem": {
                                                                "fields": {
                                                                    "aws_cloud_provider": {
                                                                        "maxItemsOne": true,
                                                                        "elem": {
                                                                            "fields": {
                                                                                "global": {
                                                                                    "maxItemsOne": true
                                                                                },
                                                                                "service_override": {
                                                                                    "maxItemsOne": false
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "azure_cloud_provider": {
                                                                        "maxItemsOne": true
                                                                    },
                                                                    "openstack_cloud_provider": {
                                                                        "maxItemsOne": true,
                                                                        "elem": {
                                                                            "fields": {
                                                                                "block_storage": {
                                                                                    "maxItemsOne": true
                                                                                },
                                                                                "global": {
                                                                                    "maxItemsOne": true
                                                                                },
                                                                                "load_balancer": {
                                                                                    "maxItemsOne": true
                                                                                },
                                                                                "metadata": {
                                                                                    "maxItemsOne": true
                                                                                },
                                                                                "route": {
                                                                                    "maxItemsOne": true
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "vsphere_cloud_provider": {
                                                                        "maxItemsOne": true,
                                                                        "elem": {
                                                                            "fields": {
                                                                                "disk": {
                                                                                    "maxItemsOne": true
                                                                                },
                                                                                "global": {
                                                                                    "maxItemsOne": true
                                                                                },
                                                                                "network": {
                                                                                    "maxItemsOne": true
                                                                                },
                                                                                "virtual_center": {
                                                                                    "maxItemsOne": false
                                                                                },
                                                                                "workspace": {
                                                                                    "maxItemsOne": true
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "dns": {
                                                            "maxItemsOne": true,
                                                            "elem": {
                                                                "fields": {
                                                                    "linear_autoscaler_params": {
                                                                        "maxItemsOne": true
                                                                    },
                                                                    "nodelocal": {
                                                                        "maxItemsOne": true
                                                                    },
                                                                    "reverse_cidrs": {
                                                                        "maxItemsOne": false
                                                                    },
                                                                    "tolerations": {
                                                                        "maxItemsOne": false
                                                                    },
                                                                    "update_strategy": {
                                                                        "maxItemsOne": true,
                                                                        "elem": {
                                                                            "fields": {
                                                                                "rolling_update": {
                                                                                    "maxItemsOne": true
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "upstream_nameservers": {
                                                                        "maxItemsOne": false
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "ingress": {
                                                            "maxItemsOne": true,
                                                            "elem": {
                                                                "fields": {
                                                                    "tolerations": {
                                                                        "maxItemsOne": false
                                                                    },
                                                                    "update_strategy": {
                                                                        "maxItemsOne": true,
                                                                        "elem": {
                                                                            "fields": {
                                                                                "rolling_update": {
                                                                                    "maxItemsOne": true
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "monitoring": {
                                                            "maxItemsOne": true,
                                                            "elem": {
                                                                "fields": {
                                                                    "tolerations": {
                                                                        "maxItemsOne": false
                                                                    },
                                                                    "update_strategy": {
                                                                        "maxItemsOne": true,
                                                                        "elem": {
                                                                            "fields": {
                                                                                "rolling_update": {
                                                                                    "maxItemsOne": true
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "network": {
                                                            "maxItemsOne": true,
                                                            "elem": {
                                                                "fields": {
                                                                    "aci_network_provider": {
                                                                        "maxItemsOne": true,
                                                                        "elem": {
                                                                            "fields": {
                                                                                "apic_hosts": {
                                                                                    "maxItemsOne": false
                                                                                },
                                                                                "kafka_brokers": {
                                                                                    "maxItemsOne": false
                                                                                },
                                                                                "l3out_external_networks": {
                                                                                    "maxItemsOne": false
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "calico_network_provider": {
                                                                        "maxItemsOne": true
                                                                    },
                                                                    "canal_network_provider": {
                                                                        "maxItemsOne": true
                                                                    },
                                                                    "flannel_network_provider": {
                                                                        "maxItemsOne": true
                                                                    },
                                                                    "tolerations": {
                                                                        "maxItemsOne": false
                                                                    },
                                                                    "weave_network_provider": {
                                                                        "maxItemsOne": true
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "nodes": {
                                                            "maxItemsOne": false,
                                                            "elem": {
                                                                "fields": {
                                                                    "role": {
                                                                        "maxItemsOne": false
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "private_registries": {
                                                            "maxItemsOne": false,
                                                            "elem": {
                                                                "fields": {
                                                                    "ecr_credential_plugin": {
                                                                        "maxItemsOne": true
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "services": {
                                                            "maxItemsOne": true,
                                                            "elem": {
                                                                "fields": {
                                                                    "etcd": {
                                                                        "maxItemsOne": true,
                                                                        "elem": {
                                                                            "fields": {
                                                                                "backup_config": {
                                                                                    "maxItemsOne": true,
                                                                                    "elem": {
                                                                                        "fields": {
                                                                                            "s3_backup_config": {
                                                                                                "maxItemsOne": true
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "external_urls": {
                                                                                    "maxItemsOne": false
                                                                                },
                                                                                "extra_binds": {
                                                                                    "maxItemsOne": false
                                                                                },
                                                                                "extra_env": {
                                                                                    "maxItemsOne": false
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "kube_api": {
                                                                        "maxItemsOne": true,
                                                                        "elem": {
                                                                            "fields": {
                                                                                "admission_configuration": {
                                                                                    "maxItemsOne": true,
                                                                                    "elem": {
                                                                                        "fields": {
                                                                                            "plugins": {
                                                                                                "maxItemsOne": false
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "audit_log": {
                                                                                    "maxItemsOne": true,
                                                                                    "elem": {
                                                                                        "fields": {
                                                                                            "configuration": {
                                                                                                "maxItemsOne": true
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "event_rate_limit": {
                                                                                    "maxItemsOne": true
                                                                                },
                                                                                "extra_binds": {
                                                                                    "maxItemsOne": false
                                                                                },
                                                                                "extra_env": {
                                                                                    "maxItemsOne": false
                                                                                },
                                                                                "secrets_encryption_config": {
                                                                                    "maxItemsOne": true
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "kube_controller": {
                                                                        "maxItemsOne": true,
                                                                        "elem": {
                                                                            "fields": {
                                                                                "extra_binds": {
                                                                                    "maxItemsOne": false
                                                                                },
                                                                                "extra_env": {
                                                                                    "maxItemsOne": false
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "kubelet": {
                                                                        "maxItemsOne": true,
                                                                        "elem": {
                                                                            "fields": {
                                                                                "extra_binds": {
                                                                                    "maxItemsOne": false
                                                                                },
                                                                                "extra_env": {
                                                                                    "maxItemsOne": false
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "kubeproxy": {
                                                                        "maxItemsOne": true,
                                                                        "elem": {
                                                                            "fields": {
                                                                                "extra_binds": {
                                                                                    "maxItemsOne": false
                                                                                },
                                                                                "extra_env": {
                                                                                    "maxItemsOne": false
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "scheduler": {
                                                                        "maxItemsOne": true,
                                                                        "elem": {
                                                                            "fields": {
                                                                                "extra_binds": {
                                                                                    "maxItemsOne": false
                                                                                },
                                                                                "extra_env": {
                                                                                    "maxItemsOne": false
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "upgrade_strategy": {
                                                            "maxItemsOne": true,
                                                            "elem": {
                                                                "fields": {
                                                                    "drain_input": {
                                                                        "maxItemsOne": true
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "questions": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "rancher2_cluster_v2": {
                "current": "rancher2:index/clusterV2:ClusterV2",
                "majorVersion": 6,
                "fields": {
                    "agent_env_vars": {
                        "maxItemsOne": false
                    },
                    "cluster_agent_deployment_customization": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "append_tolerations": {
                                    "maxItemsOne": false
                                },
                                "override_resource_requirements": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "cluster_registration_token": {
                        "maxItemsOne": true
                    },
                    "fleet_agent_deployment_customization": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "append_tolerations": {
                                    "maxItemsOne": false
                                },
                                "override_resource_requirements": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "local_auth_endpoint": {
                        "maxItemsOne": true
                    },
                    "rke_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "etcd": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "s3_config": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "etcd_snapshot_create": {
                                    "maxItemsOne": true
                                },
                                "etcd_snapshot_restore": {
                                    "maxItemsOne": true
                                },
                                "local_auth_endpoint": {
                                    "maxItemsOne": true
                                },
                                "machine_pool_defaults": {
                                    "maxItemsOne": false
                                },
                                "machine_pools": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "machine_config": {
                                                "maxItemsOne": true
                                            },
                                            "rolling_update": {
                                                "maxItemsOne": true
                                            },
                                            "taints": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "machine_selector_config": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "machine_label_selector": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "match_expressions": {
                                                            "maxItemsOne": false,
                                                            "elem": {
                                                                "fields": {
                                                                    "values": {
                                                                        "maxItemsOne": false
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "machine_selector_files": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "file_sources": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "configmap": {
                                                            "maxItemsOne": true,
                                                            "elem": {
                                                                "fields": {
                                                                    "items": {
                                                                        "maxItemsOne": false
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "secret": {
                                                            "maxItemsOne": true,
                                                            "elem": {
                                                                "fields": {
                                                                    "items": {
                                                                        "maxItemsOne": false
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "machine_label_selector": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "match_expressions": {
                                                            "maxItemsOne": false,
                                                            "elem": {
                                                                "fields": {
                                                                    "values": {
                                                                        "maxItemsOne": false
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "registries": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "configs": {
                                                "maxItemsOne": false
                                            },
                                            "mirrors": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "endpoints": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "rotate_certificates": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "services": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "upgrade_strategy": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "control_plane_drain_options": {
                                                "maxItemsOne": true
                                            },
                                            "worker_drain_options": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "rancher2_config_map_v2": {
                "current": "rancher2:index/configMapV2:ConfigMapV2",
                "majorVersion": 6
            },
            "rancher2_custom_user_token": {
                "current": "rancher2:index/customUserToken:CustomUserToken",
                "majorVersion": 6
            },
            "rancher2_etcd_backup": {
                "current": "rancher2:index/etcdBackup:EtcdBackup",
                "majorVersion": 6,
                "fields": {
                    "backup_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "s3_backup_config": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "rancher2_feature": {
                "current": "rancher2:index/feature:Feature",
                "majorVersion": 6
            },
            "rancher2_global_dns": {
                "current": "rancher2:index/globalDns:GlobalDns",
                "majorVersion": 6,
                "fields": {
                    "project_ids": {
                        "maxItemsOne": false
                    }
                }
            },
            "rancher2_global_dns_provider": {
                "current": "rancher2:index/globalDnsProvider:GlobalDnsProvider",
                "majorVersion": 6,
                "fields": {
                    "alidns_config": {
                        "maxItemsOne": true
                    },
                    "cloudflare_config": {
                        "maxItemsOne": true
                    },
                    "route53_config": {
                        "maxItemsOne": true
                    }
                }
            },
            "rancher2_global_role": {
                "current": "rancher2:index/globalRole:GlobalRole",
                "majorVersion": 6,
                "fields": {
                    "inherited_cluster_roles": {
                        "maxItemsOne": false
                    },
                    "rules": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "api_groups": {
                                    "maxItemsOne": false
                                },
                                "non_resource_urls": {
                                    "maxItemsOne": false
                                },
                                "resource_names": {
                                    "maxItemsOne": false
                                },
                                "resources": {
                                    "maxItemsOne": false
                                },
                                "verbs": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "rancher2_global_role_binding": {
                "current": "rancher2:index/globalRoleBinding:GlobalRoleBinding",
                "majorVersion": 6
            },
            "rancher2_machine_config_v2": {
                "current": "rancher2:index/machineConfigV2:MachineConfigV2",
                "majorVersion": 6,
                "fields": {
                    "amazonec2_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "open_port": {
                                    "maxItemsOne": false
                                },
                                "security_group": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "azure_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "open_port": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "digitalocean_config": {
                        "maxItemsOne": true
                    },
                    "harvester_config": {
                        "maxItemsOne": true
                    },
                    "linode_config": {
                        "maxItemsOne": true
                    },
                    "openstack_config": {
                        "maxItemsOne": true
                    },
                    "vsphere_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "cfgparam": {
                                    "maxItemsOne": false
                                },
                                "custom_attributes": {
                                    "maxItemsOne": false
                                },
                                "network": {
                                    "maxItemsOne": false
                                },
                                "tags": {
                                    "maxItemsOne": false
                                },
                                "vapp_property": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "rancher2_multi_cluster_app": {
                "current": "rancher2:index/multiClusterApp:MultiClusterApp",
                "majorVersion": 6,
                "fields": {
                    "answers": {
                        "maxItemsOne": false
                    },
                    "members": {
                        "maxItemsOne": false
                    },
                    "roles": {
                        "maxItemsOne": false
                    },
                    "targets": {
                        "maxItemsOne": false
                    },
                    "upgrade_strategy": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "rolling_update": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "rancher2_namespace": {
                "current": "rancher2:index/namespace:Namespace",
                "majorVersion": 6,
                "fields": {
                    "container_resource_limit": {
                        "maxItemsOne": true
                    },
                    "resource_quota": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "limit": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "rancher2_node_driver": {
                "current": "rancher2:index/nodeDriver:NodeDriver",
                "majorVersion": 6,
                "fields": {
                    "whitelist_domains": {
                        "maxItemsOne": false
                    }
                }
            },
            "rancher2_node_pool": {
                "current": "rancher2:index/nodePool:NodePool",
                "majorVersion": 6,
                "fields": {
                    "node_taints": {
                        "maxItemsOne": false
                    }
                }
            },
            "rancher2_node_template": {
                "current": "rancher2:index/nodeTemplate:NodeTemplate",
                "majorVersion": 6,
                "fields": {
                    "amazonec2_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "open_port": {
                                    "maxItemsOne": false
                                },
                                "security_group": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "azure_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "open_port": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "digitalocean_config": {
                        "maxItemsOne": true
                    },
                    "engine_insecure_registry": {
                        "maxItemsOne": false
                    },
                    "engine_registry_mirror": {
                        "maxItemsOne": false
                    },
                    "harvester_config": {
                        "maxItemsOne": true
                    },
                    "hetzner_config": {
                        "maxItemsOne": true
                    },
                    "linode_config": {
                        "maxItemsOne": true
                    },
                    "node_taints": {
                        "maxItemsOne": false
                    },
                    "opennebula_config": {
                        "maxItemsOne": true
                    },
                    "openstack_config": {
                        "maxItemsOne": true
                    },
                    "outscale_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "extra_tags_all": {
                                    "maxItemsOne": false
                                },
                                "extra_tags_instances": {
                                    "maxItemsOne": false
                                },
                                "security_group_ids": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "vsphere_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "cfgparam": {
                                    "maxItemsOne": false
                                },
                                "custom_attributes": {
                                    "maxItemsOne": false
                                },
                                "network": {
                                    "maxItemsOne": false
                                },
                                "tags": {
                                    "maxItemsOne": false
                                },
                                "vapp_property": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "rancher2_notifier": {
                "current": "rancher2:index/notifier:Notifier",
                "majorVersion": 6,
                "fields": {
                    "dingtalk_config": {
                        "maxItemsOne": true
                    },
                    "msteams_config": {
                        "maxItemsOne": true
                    },
                    "pagerduty_config": {
                        "maxItemsOne": true
                    },
                    "slack_config": {
                        "maxItemsOne": true
                    },
                    "smtp_config": {
                        "maxItemsOne": true
                    },
                    "webhook_config": {
                        "maxItemsOne": true
                    },
                    "wechat_config": {
                        "maxItemsOne": true
                    }
                }
            },
            "rancher2_pod_security_admission_configuration_template": {
                "current": "rancher2:index/podSecurityAdmissionConfigurationTemplate:PodSecurityAdmissionConfigurationTemplate",
                "majorVersion": 6,
                "fields": {
                    "defaults": {
                        "maxItemsOne": true
                    },
                    "exemptions": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "namespaces": {
                                    "maxItemsOne": false
                                },
                                "runtime_classes": {
                                    "maxItemsOne": false
                                },
                                "usernames": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "rancher2_pod_security_policy_template": {
                "current": "rancher2:index/podSecurityPolicyTemplate:PodSecurityPolicyTemplate",
                "majorVersion": 6,
                "fields": {
                    "allowed_capabilities": {
                        "maxItemsOne": false
                    },
                    "allowed_csi_driver": {
                        "maxItemsOne": false
                    },
                    "allowed_flex_volume": {
                        "maxItemsOne": false
                    },
                    "allowed_host_path": {
                        "maxItemsOne": false
                    },
                    "allowed_proc_mount_types": {
                        "maxItemsOne": false
                    },
                    "allowed_unsafe_sysctls": {
                        "maxItemsOne": false
                    },
                    "default_add_capabilities": {
                        "maxItemsOne": false
                    },
                    "forbidden_sysctls": {
                        "maxItemsOne": false
                    },
                    "fs_group": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "range": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "host_port": {
                        "maxItemsOne": false
                    },
                    "required_drop_capabilities": {
                        "maxItemsOne": false
                    },
                    "run_as_group": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "range": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "run_as_user": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "range": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "runtime_class": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "allowed_runtime_class_names": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "se_linux": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "se_linux_option": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "supplemental_group": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "range": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "volumes": {
                        "maxItemsOne": false
                    }
                }
            },
            "rancher2_project": {
                "current": "rancher2:index/project:Project",
                "majorVersion": 6,
                "fields": {
                    "container_resource_limit": {
                        "maxItemsOne": true
                    },
                    "project_monitoring_input": {
                        "maxItemsOne": true
                    },
                    "resource_quota": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "namespace_default_limit": {
                                    "maxItemsOne": true
                                },
                                "project_limit": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "rancher2_project_alert_group": {
                "current": "rancher2:index/projectAlertGroup:ProjectAlertGroup",
                "majorVersion": 6,
                "fields": {
                    "recipients": {
                        "maxItemsOne": false
                    }
                }
            },
            "rancher2_project_alert_rule": {
                "current": "rancher2:index/projectAlertRule:ProjectAlertRule",
                "majorVersion": 6,
                "fields": {
                    "metric_rule": {
                        "maxItemsOne": true
                    },
                    "pod_rule": {
                        "maxItemsOne": true
                    },
                    "workload_rule": {
                        "maxItemsOne": true
                    }
                }
            },
            "rancher2_project_role_template_binding": {
                "current": "rancher2:index/projectRoleTemplateBinding:ProjectRoleTemplateBinding",
                "majorVersion": 6
            },
            "rancher2_registry": {
                "current": "rancher2:index/registry:Registry",
                "majorVersion": 6,
                "fields": {
                    "registries": {
                        "maxItemsOne": false
                    }
                }
            },
            "rancher2_role_template": {
                "current": "rancher2:index/roleTemplate:RoleTemplate",
                "majorVersion": 6,
                "fields": {
                    "external_rules": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "api_groups": {
                                    "maxItemsOne": false
                                },
                                "non_resource_urls": {
                                    "maxItemsOne": false
                                },
                                "resource_names": {
                                    "maxItemsOne": false
                                },
                                "resources": {
                                    "maxItemsOne": false
                                },
                                "verbs": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "role_template_ids": {
                        "maxItemsOne": false
                    },
                    "rules": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "api_groups": {
                                    "maxItemsOne": false
                                },
                                "non_resource_urls": {
                                    "maxItemsOne": false
                                },
                                "resource_names": {
                                    "maxItemsOne": false
                                },
                                "resources": {
                                    "maxItemsOne": false
                                },
                                "verbs": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "rancher2_secret": {
                "current": "rancher2:index/secret:Secret",
                "majorVersion": 6
            },
            "rancher2_secret_v2": {
                "current": "rancher2:index/secretV2:SecretV2",
                "majorVersion": 6
            },
            "rancher2_setting": {
                "current": "rancher2:index/setting:Setting",
                "majorVersion": 6
            },
            "rancher2_storage_class_v2": {
                "current": "rancher2:index/storageClassV2:StorageClassV2",
                "majorVersion": 6,
                "fields": {
                    "mount_options": {
                        "maxItemsOne": false
                    }
                }
            },
            "rancher2_token": {
                "current": "rancher2:index/token:Token",
                "majorVersion": 6
            },
            "rancher2_user": {
                "current": "rancher2:index/user:User",
                "majorVersion": 6,
                "fields": {
                    "principal_ids": {
                        "maxItemsOne": false
                    }
                }
            }
        },
        "datasources": {
            "rancher2_app": {
                "current": "rancher2:index/getApp:getApp",
                "majorVersion": 6
            },
            "rancher2_catalog": {
                "current": "rancher2:index/getCatalog:getCatalog",
                "majorVersion": 6
            },
            "rancher2_catalog_v2": {
                "current": "rancher2:index/getCatalogV2:getCatalogV2",
                "majorVersion": 6
            },
            "rancher2_certificate": {
                "current": "rancher2:index/getCertificate:getCertificate",
                "majorVersion": 6
            },
            "rancher2_cloud_credential": {
                "current": "rancher2:index/getCloudCredential:getCloudCredential",
                "majorVersion": 6
            },
            "rancher2_cluster": {
                "current": "rancher2:index/getCluster:getCluster",
                "majorVersion": 6,
                "fields": {
                    "agent_env_vars": {
                        "maxItemsOne": false
                    },
                    "aks_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "tags": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "aks_config_v2": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "authorized_ip_ranges": {
                                    "maxItemsOne": false
                                },
                                "node_pools": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "availability_zones": {
                                                "maxItemsOne": false
                                            },
                                            "taints": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "cluster_auth_endpoint": {
                        "maxItemsOne": true
                    },
                    "cluster_monitoring_input": {
                        "maxItemsOne": true
                    },
                    "cluster_registration_token": {
                        "maxItemsOne": true
                    },
                    "cluster_template_answers": {
                        "maxItemsOne": true
                    },
                    "cluster_template_questions": {
                        "maxItemsOne": false
                    },
                    "eks_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "security_groups": {
                                    "maxItemsOne": false
                                },
                                "subnets": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "eks_config_v2": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "logging_types": {
                                    "maxItemsOne": false
                                },
                                "node_groups": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "launch_template": {
                                                "maxItemsOne": false
                                            },
                                            "spot_instance_types": {
                                                "maxItemsOne": false
                                            },
                                            "subnets": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "public_access_sources": {
                                    "maxItemsOne": false
                                },
                                "security_groups": {
                                    "maxItemsOne": false
                                },
                                "subnets": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "gke_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "locations": {
                                    "maxItemsOne": false
                                },
                                "master_authorized_network_cidr_blocks": {
                                    "maxItemsOne": false
                                },
                                "oauth_scopes": {
                                    "maxItemsOne": false
                                },
                                "taints": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "gke_config_v2": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "cluster_addons": {
                                    "maxItemsOne": true
                                },
                                "ip_allocation_policy": {
                                    "maxItemsOne": true
                                },
                                "locations": {
                                    "maxItemsOne": false
                                },
                                "master_authorized_networks_config": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "cidr_blocks": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "node_pools": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "autoscaling": {
                                                "maxItemsOne": true
                                            },
                                            "config": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "oauth_scopes": {
                                                            "maxItemsOne": false
                                                        },
                                                        "tags": {
                                                            "maxItemsOne": false
                                                        },
                                                        "taints": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            },
                                            "management": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "private_cluster_config": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "k3s_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "upgrade_strategy": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "oke_config": {
                        "maxItemsOne": true
                    },
                    "rke2_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "upgrade_strategy": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "rke_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "addons_include": {
                                    "maxItemsOne": false
                                },
                                "authentication": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "sans": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "authorization": {
                                    "maxItemsOne": true
                                },
                                "bastion_host": {
                                    "maxItemsOne": true
                                },
                                "cloud_provider": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "aws_cloud_provider": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "global": {
                                                            "maxItemsOne": true
                                                        },
                                                        "service_override": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            },
                                            "azure_cloud_provider": {
                                                "maxItemsOne": true
                                            },
                                            "openstack_cloud_provider": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "block_storage": {
                                                            "maxItemsOne": true
                                                        },
                                                        "global": {
                                                            "maxItemsOne": true
                                                        },
                                                        "load_balancer": {
                                                            "maxItemsOne": true
                                                        },
                                                        "metadata": {
                                                            "maxItemsOne": true
                                                        },
                                                        "route": {
                                                            "maxItemsOne": true
                                                        }
                                                    }
                                                }
                                            },
                                            "vsphere_cloud_provider": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "disk": {
                                                            "maxItemsOne": true
                                                        },
                                                        "global": {
                                                            "maxItemsOne": true
                                                        },
                                                        "network": {
                                                            "maxItemsOne": true
                                                        },
                                                        "virtual_center": {
                                                            "maxItemsOne": false
                                                        },
                                                        "workspace": {
                                                            "maxItemsOne": true
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "dns": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "linear_autoscaler_params": {
                                                "maxItemsOne": true
                                            },
                                            "nodelocal": {
                                                "maxItemsOne": true
                                            },
                                            "reverse_cidrs": {
                                                "maxItemsOne": false
                                            },
                                            "tolerations": {
                                                "maxItemsOne": false
                                            },
                                            "update_strategy": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "rolling_update": {
                                                            "maxItemsOne": true
                                                        }
                                                    }
                                                }
                                            },
                                            "upstream_nameservers": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "ingress": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "tolerations": {
                                                "maxItemsOne": false
                                            },
                                            "update_strategy": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "rolling_update": {
                                                            "maxItemsOne": true
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "monitoring": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "tolerations": {
                                                "maxItemsOne": false
                                            },
                                            "update_strategy": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "rolling_update": {
                                                            "maxItemsOne": true
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "network": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "aci_network_provider": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "apic_hosts": {
                                                            "maxItemsOne": false
                                                        },
                                                        "kafka_brokers": {
                                                            "maxItemsOne": false
                                                        },
                                                        "l3out_external_networks": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            },
                                            "calico_network_provider": {
                                                "maxItemsOne": true
                                            },
                                            "canal_network_provider": {
                                                "maxItemsOne": true
                                            },
                                            "flannel_network_provider": {
                                                "maxItemsOne": true
                                            },
                                            "tolerations": {
                                                "maxItemsOne": false
                                            },
                                            "weave_network_provider": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "nodes": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "role": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "private_registries": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "ecr_credential_plugin": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "services": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "etcd": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "backup_config": {
                                                            "maxItemsOne": true,
                                                            "elem": {
                                                                "fields": {
                                                                    "s3_backup_config": {
                                                                        "maxItemsOne": true
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "external_urls": {
                                                            "maxItemsOne": false
                                                        },
                                                        "extra_binds": {
                                                            "maxItemsOne": false
                                                        },
                                                        "extra_env": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            },
                                            "kube_api": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "admission_configuration": {
                                                            "maxItemsOne": true,
                                                            "elem": {
                                                                "fields": {
                                                                    "plugins": {
                                                                        "maxItemsOne": false
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "audit_log": {
                                                            "maxItemsOne": true,
                                                            "elem": {
                                                                "fields": {
                                                                    "configuration": {
                                                                        "maxItemsOne": true
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "event_rate_limit": {
                                                            "maxItemsOne": true
                                                        },
                                                        "extra_binds": {
                                                            "maxItemsOne": false
                                                        },
                                                        "extra_env": {
                                                            "maxItemsOne": false
                                                        },
                                                        "secrets_encryption_config": {
                                                            "maxItemsOne": true
                                                        }
                                                    }
                                                }
                                            },
                                            "kube_controller": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "extra_binds": {
                                                            "maxItemsOne": false
                                                        },
                                                        "extra_env": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            },
                                            "kubelet": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "extra_binds": {
                                                            "maxItemsOne": false
                                                        },
                                                        "extra_env": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            },
                                            "kubeproxy": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "extra_binds": {
                                                            "maxItemsOne": false
                                                        },
                                                        "extra_env": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            },
                                            "scheduler": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "extra_binds": {
                                                            "maxItemsOne": false
                                                        },
                                                        "extra_env": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "upgrade_strategy": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "drain_input": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "rancher2_cluster_alert_group": {
                "current": "rancher2:index/getClusterAlertGroup:getClusterAlertGroup",
                "majorVersion": 6,
                "fields": {
                    "recipients": {
                        "maxItemsOne": false
                    }
                }
            },
            "rancher2_cluster_alert_rule": {
                "current": "rancher2:index/getClusterAlertRule:getClusterAlertRule",
                "past": [
                    {
                        "name": "rancher2:index/getClusterAlterRule:getClusterAlterRule",
                        "inCodegen": true,
                        "majorVersion": 5
                    }
                ],
                "majorVersion": 6,
                "fields": {
                    "event_rule": {
                        "maxItemsOne": true
                    },
                    "metric_rule": {
                        "maxItemsOne": true
                    },
                    "node_rule": {
                        "maxItemsOne": true
                    },
                    "system_service_rule": {
                        "maxItemsOne": true
                    }
                }
            },
            "rancher2_cluster_driver": {
                "current": "rancher2:index/getClusterDriver:getClusterDriver",
                "majorVersion": 6,
                "fields": {
                    "whitelist_domains": {
                        "maxItemsOne": false
                    }
                }
            },
            "rancher2_cluster_role_template_binding": {
                "current": "rancher2:index/getClusterRoleTemplateBinding:getClusterRoleTemplateBinding",
                "majorVersion": 6
            },
            "rancher2_cluster_template": {
                "current": "rancher2:index/getClusterTemplate:getClusterTemplate",
                "majorVersion": 6,
                "fields": {
                    "members": {
                        "maxItemsOne": false
                    },
                    "template_revisions": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "cluster_config": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "cluster_auth_endpoint": {
                                                "maxItemsOne": true
                                            },
                                            "rke_config": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "addons_include": {
                                                            "maxItemsOne": false
                                                        },
                                                        "authentication": {
                                                            "maxItemsOne": true,
                                                            "elem": {
                                                                "fields": {
                                                                    "sans": {
                                                                        "maxItemsOne": false
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "authorization": {
                                                            "maxItemsOne": true
                                                        },
                                                        "bastion_host": {
                                                            "maxItemsOne": true
                                                        },
                                                        "cloud_provider": {
                                                            "maxItemsOne": true,
                                                            "elem": {
                                                                "fields": {
                                                                    "aws_cloud_provider": {
                                                                        "maxItemsOne": true,
                                                                        "elem": {
                                                                            "fields": {
                                                                                "global": {
                                                                                    "maxItemsOne": true
                                                                                },
                                                                                "service_override": {
                                                                                    "maxItemsOne": false
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "azure_cloud_provider": {
                                                                        "maxItemsOne": true
                                                                    },
                                                                    "openstack_cloud_provider": {
                                                                        "maxItemsOne": true,
                                                                        "elem": {
                                                                            "fields": {
                                                                                "block_storage": {
                                                                                    "maxItemsOne": true
                                                                                },
                                                                                "global": {
                                                                                    "maxItemsOne": true
                                                                                },
                                                                                "load_balancer": {
                                                                                    "maxItemsOne": true
                                                                                },
                                                                                "metadata": {
                                                                                    "maxItemsOne": true
                                                                                },
                                                                                "route": {
                                                                                    "maxItemsOne": true
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "vsphere_cloud_provider": {
                                                                        "maxItemsOne": true,
                                                                        "elem": {
                                                                            "fields": {
                                                                                "disk": {
                                                                                    "maxItemsOne": true
                                                                                },
                                                                                "global": {
                                                                                    "maxItemsOne": true
                                                                                },
                                                                                "network": {
                                                                                    "maxItemsOne": true
                                                                                },
                                                                                "virtual_center": {
                                                                                    "maxItemsOne": false
                                                                                },
                                                                                "workspace": {
                                                                                    "maxItemsOne": true
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "dns": {
                                                            "maxItemsOne": true,
                                                            "elem": {
                                                                "fields": {
                                                                    "linear_autoscaler_params": {
                                                                        "maxItemsOne": true
                                                                    },
                                                                    "nodelocal": {
                                                                        "maxItemsOne": true
                                                                    },
                                                                    "reverse_cidrs": {
                                                                        "maxItemsOne": false
                                                                    },
                                                                    "tolerations": {
                                                                        "maxItemsOne": false
                                                                    },
                                                                    "update_strategy": {
                                                                        "maxItemsOne": true,
                                                                        "elem": {
                                                                            "fields": {
                                                                                "rolling_update": {
                                                                                    "maxItemsOne": true
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "upstream_nameservers": {
                                                                        "maxItemsOne": false
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "ingress": {
                                                            "maxItemsOne": true,
                                                            "elem": {
                                                                "fields": {
                                                                    "tolerations": {
                                                                        "maxItemsOne": false
                                                                    },
                                                                    "update_strategy": {
                                                                        "maxItemsOne": true,
                                                                        "elem": {
                                                                            "fields": {
                                                                                "rolling_update": {
                                                                                    "maxItemsOne": true
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "monitoring": {
                                                            "maxItemsOne": true,
                                                            "elem": {
                                                                "fields": {
                                                                    "tolerations": {
                                                                        "maxItemsOne": false
                                                                    },
                                                                    "update_strategy": {
                                                                        "maxItemsOne": true,
                                                                        "elem": {
                                                                            "fields": {
                                                                                "rolling_update": {
                                                                                    "maxItemsOne": true
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "network": {
                                                            "maxItemsOne": true,
                                                            "elem": {
                                                                "fields": {
                                                                    "aci_network_provider": {
                                                                        "maxItemsOne": true,
                                                                        "elem": {
                                                                            "fields": {
                                                                                "apic_hosts": {
                                                                                    "maxItemsOne": false
                                                                                },
                                                                                "kafka_brokers": {
                                                                                    "maxItemsOne": false
                                                                                },
                                                                                "l3out_external_networks": {
                                                                                    "maxItemsOne": false
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "calico_network_provider": {
                                                                        "maxItemsOne": true
                                                                    },
                                                                    "canal_network_provider": {
                                                                        "maxItemsOne": true
                                                                    },
                                                                    "flannel_network_provider": {
                                                                        "maxItemsOne": true
                                                                    },
                                                                    "tolerations": {
                                                                        "maxItemsOne": false
                                                                    },
                                                                    "weave_network_provider": {
                                                                        "maxItemsOne": true
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "nodes": {
                                                            "maxItemsOne": false,
                                                            "elem": {
                                                                "fields": {
                                                                    "role": {
                                                                        "maxItemsOne": false
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "private_registries": {
                                                            "maxItemsOne": false,
                                                            "elem": {
                                                                "fields": {
                                                                    "ecr_credential_plugin": {
                                                                        "maxItemsOne": true
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "services": {
                                                            "maxItemsOne": true,
                                                            "elem": {
                                                                "fields": {
                                                                    "etcd": {
                                                                        "maxItemsOne": true,
                                                                        "elem": {
                                                                            "fields": {
                                                                                "backup_config": {
                                                                                    "maxItemsOne": true,
                                                                                    "elem": {
                                                                                        "fields": {
                                                                                            "s3_backup_config": {
                                                                                                "maxItemsOne": true
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "external_urls": {
                                                                                    "maxItemsOne": false
                                                                                },
                                                                                "extra_binds": {
                                                                                    "maxItemsOne": false
                                                                                },
                                                                                "extra_env": {
                                                                                    "maxItemsOne": false
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "kube_api": {
                                                                        "maxItemsOne": true,
                                                                        "elem": {
                                                                            "fields": {
                                                                                "admission_configuration": {
                                                                                    "maxItemsOne": true,
                                                                                    "elem": {
                                                                                        "fields": {
                                                                                            "plugins": {
                                                                                                "maxItemsOne": false
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "audit_log": {
                                                                                    "maxItemsOne": true,
                                                                                    "elem": {
                                                                                        "fields": {
                                                                                            "configuration": {
                                                                                                "maxItemsOne": true
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                },
                                                                                "event_rate_limit": {
                                                                                    "maxItemsOne": true
                                                                                },
                                                                                "extra_binds": {
                                                                                    "maxItemsOne": false
                                                                                },
                                                                                "extra_env": {
                                                                                    "maxItemsOne": false
                                                                                },
                                                                                "secrets_encryption_config": {
                                                                                    "maxItemsOne": true
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "kube_controller": {
                                                                        "maxItemsOne": true,
                                                                        "elem": {
                                                                            "fields": {
                                                                                "extra_binds": {
                                                                                    "maxItemsOne": false
                                                                                },
                                                                                "extra_env": {
                                                                                    "maxItemsOne": false
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "kubelet": {
                                                                        "maxItemsOne": true,
                                                                        "elem": {
                                                                            "fields": {
                                                                                "extra_binds": {
                                                                                    "maxItemsOne": false
                                                                                },
                                                                                "extra_env": {
                                                                                    "maxItemsOne": false
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "kubeproxy": {
                                                                        "maxItemsOne": true,
                                                                        "elem": {
                                                                            "fields": {
                                                                                "extra_binds": {
                                                                                    "maxItemsOne": false
                                                                                },
                                                                                "extra_env": {
                                                                                    "maxItemsOne": false
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "scheduler": {
                                                                        "maxItemsOne": true,
                                                                        "elem": {
                                                                            "fields": {
                                                                                "extra_binds": {
                                                                                    "maxItemsOne": false
                                                                                },
                                                                                "extra_env": {
                                                                                    "maxItemsOne": false
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "upgrade_strategy": {
                                                            "maxItemsOne": true,
                                                            "elem": {
                                                                "fields": {
                                                                    "drain_input": {
                                                                        "maxItemsOne": true
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "questions": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "rancher2_cluster_v2": {
                "current": "rancher2:index/getClusterV2:getClusterV2",
                "majorVersion": 6,
                "fields": {
                    "agent_env_vars": {
                        "maxItemsOne": false
                    },
                    "cluster_registration_token": {
                        "maxItemsOne": true
                    },
                    "rke_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "etcd": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "s3_config": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                },
                                "etcd_snapshot_create": {
                                    "maxItemsOne": true
                                },
                                "etcd_snapshot_restore": {
                                    "maxItemsOne": true
                                },
                                "local_auth_endpoint": {
                                    "maxItemsOne": true
                                },
                                "machine_pool_defaults": {
                                    "maxItemsOne": false
                                },
                                "machine_pools": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "machine_config": {
                                                "maxItemsOne": true
                                            },
                                            "rolling_update": {
                                                "maxItemsOne": true
                                            },
                                            "taints": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "machine_selector_config": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "machine_label_selector": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "match_expressions": {
                                                            "maxItemsOne": false,
                                                            "elem": {
                                                                "fields": {
                                                                    "values": {
                                                                        "maxItemsOne": false
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "machine_selector_files": {
                                    "maxItemsOne": false,
                                    "elem": {
                                        "fields": {
                                            "file_sources": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "configmap": {
                                                            "maxItemsOne": true,
                                                            "elem": {
                                                                "fields": {
                                                                    "items": {
                                                                        "maxItemsOne": false
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "secret": {
                                                            "maxItemsOne": true,
                                                            "elem": {
                                                                "fields": {
                                                                    "items": {
                                                                        "maxItemsOne": false
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "machine_label_selector": {
                                                "maxItemsOne": true,
                                                "elem": {
                                                    "fields": {
                                                        "match_expressions": {
                                                            "maxItemsOne": false,
                                                            "elem": {
                                                                "fields": {
                                                                    "values": {
                                                                        "maxItemsOne": false
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "registries": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "configs": {
                                                "maxItemsOne": false
                                            },
                                            "mirrors": {
                                                "maxItemsOne": false,
                                                "elem": {
                                                    "fields": {
                                                        "endpoints": {
                                                            "maxItemsOne": false
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "rotate_certificates": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "services": {
                                                "maxItemsOne": false
                                            }
                                        }
                                    }
                                },
                                "upgrade_strategy": {
                                    "maxItemsOne": true,
                                    "elem": {
                                        "fields": {
                                            "control_plane_drain_options": {
                                                "maxItemsOne": true
                                            },
                                            "worker_drain_options": {
                                                "maxItemsOne": true
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "rancher2_config_map_v2": {
                "current": "rancher2:index/getConfigMapV2:getConfigMapV2",
                "majorVersion": 6
            },
            "rancher2_etcd_backup": {
                "current": "rancher2:index/getEtcdBackup:getEtcdBackup",
                "majorVersion": 6,
                "fields": {
                    "backup_config": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "s3_backup_config": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "rancher2_global_dns_provider": {
                "current": "rancher2:index/getGlobalDnsProvider:getGlobalDnsProvider",
                "majorVersion": 6,
                "fields": {
                    "alidns_config": {
                        "maxItemsOne": true
                    },
                    "cloudflare_config": {
                        "maxItemsOne": true
                    },
                    "route53_config": {
                        "maxItemsOne": true
                    }
                }
            },
            "rancher2_global_role": {
                "current": "rancher2:index/getGlobalRole:getGlobalRole",
                "majorVersion": 6,
                "fields": {
                    "inherited_cluster_roles": {
                        "maxItemsOne": false
                    },
                    "rules": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "api_groups": {
                                    "maxItemsOne": false
                                },
                                "non_resource_urls": {
                                    "maxItemsOne": false
                                },
                                "resource_names": {
                                    "maxItemsOne": false
                                },
                                "resources": {
                                    "maxItemsOne": false
                                },
                                "verbs": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "rancher2_global_role_binding": {
                "current": "rancher2:index/getGlobalRoleBinding:getGlobalRoleBinding",
                "majorVersion": 6
            },
            "rancher2_multi_cluster_app": {
                "current": "rancher2:index/getMultiClusterApp:getMultiClusterApp",
                "majorVersion": 6,
                "fields": {
                    "answers": {
                        "maxItemsOne": false
                    },
                    "members": {
                        "maxItemsOne": false
                    },
                    "roles": {
                        "maxItemsOne": false
                    },
                    "targets": {
                        "maxItemsOne": false
                    },
                    "upgrade_strategy": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "rolling_update": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "rancher2_namespace": {
                "current": "rancher2:index/getNamespace:getNamespace",
                "majorVersion": 6,
                "fields": {
                    "container_resource_limit": {
                        "maxItemsOne": true
                    },
                    "resource_quota": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "limit": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "rancher2_node_driver": {
                "current": "rancher2:index/getNodeDriver:getNodeDriver",
                "majorVersion": 6,
                "fields": {
                    "whitelist_domains": {
                        "maxItemsOne": false
                    }
                }
            },
            "rancher2_node_pool": {
                "current": "rancher2:index/getNodePool:getNodePool",
                "majorVersion": 6,
                "fields": {
                    "node_taints": {
                        "maxItemsOne": false
                    }
                }
            },
            "rancher2_node_template": {
                "current": "rancher2:index/getNodeTemplate:getNodeTemplate",
                "majorVersion": 6,
                "fields": {
                    "engine_insecure_registry": {
                        "maxItemsOne": false
                    },
                    "engine_registry_mirror": {
                        "maxItemsOne": false
                    },
                    "node_taints": {
                        "maxItemsOne": false
                    }
                }
            },
            "rancher2_notifier": {
                "current": "rancher2:index/getNotifier:getNotifier",
                "majorVersion": 6,
                "fields": {
                    "dingtalk_config": {
                        "maxItemsOne": true
                    },
                    "msteams_config": {
                        "maxItemsOne": true
                    },
                    "pagerduty_config": {
                        "maxItemsOne": true
                    },
                    "slack_config": {
                        "maxItemsOne": true
                    },
                    "smtp_config": {
                        "maxItemsOne": true
                    },
                    "webhook_config": {
                        "maxItemsOne": true
                    },
                    "wechat_config": {
                        "maxItemsOne": true
                    }
                }
            },
            "rancher2_pod_security_admission_configuration_template": {
                "current": "rancher2:index/getPodSecurityAdmissionConfigurationTemplate:getPodSecurityAdmissionConfigurationTemplate",
                "majorVersion": 6,
                "fields": {
                    "defaults": {
                        "maxItemsOne": true
                    },
                    "exemptions": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "namespaces": {
                                    "maxItemsOne": false
                                },
                                "runtime_classes": {
                                    "maxItemsOne": false
                                },
                                "usernames": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "rancher2_pod_security_policy_template": {
                "current": "rancher2:index/getPodSecurityPolicyTemplate:getPodSecurityPolicyTemplate",
                "majorVersion": 6,
                "fields": {
                    "allowed_capabilities": {
                        "maxItemsOne": false
                    },
                    "allowed_csi_driver": {
                        "maxItemsOne": false
                    },
                    "allowed_flex_volume": {
                        "maxItemsOne": false
                    },
                    "allowed_host_path": {
                        "maxItemsOne": false
                    },
                    "allowed_proc_mount_types": {
                        "maxItemsOne": false
                    },
                    "allowed_unsafe_sysctls": {
                        "maxItemsOne": false
                    },
                    "default_add_capabilities": {
                        "maxItemsOne": false
                    },
                    "forbidden_sysctls": {
                        "maxItemsOne": false
                    },
                    "fs_group": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "range": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "host_port": {
                        "maxItemsOne": false
                    },
                    "required_drop_capabilities": {
                        "maxItemsOne": false
                    },
                    "run_as_group": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "range": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "run_as_user": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "range": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "runtime_class": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "allowed_runtime_class_names": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "se_linux": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "se_linux_option": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    },
                    "supplemental_group": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "range": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "volumes": {
                        "maxItemsOne": false
                    }
                }
            },
            "rancher2_principal": {
                "current": "rancher2:index/getPrincipal:getPrincipal",
                "majorVersion": 6
            },
            "rancher2_project": {
                "current": "rancher2:index/getProject:getProject",
                "majorVersion": 6,
                "fields": {
                    "container_resource_limit": {
                        "maxItemsOne": true
                    },
                    "resource_quota": {
                        "maxItemsOne": true,
                        "elem": {
                            "fields": {
                                "namespace_default_limit": {
                                    "maxItemsOne": true
                                },
                                "project_limit": {
                                    "maxItemsOne": true
                                }
                            }
                        }
                    }
                }
            },
            "rancher2_project_alert_group": {
                "current": "rancher2:index/getProjectAlertGroup:getProjectAlertGroup",
                "majorVersion": 6,
                "fields": {
                    "recipients": {
                        "maxItemsOne": false
                    }
                }
            },
            "rancher2_project_alert_rule": {
                "current": "rancher2:index/getProjectAlertRule:getProjectAlertRule",
                "majorVersion": 6,
                "fields": {
                    "metric_rule": {
                        "maxItemsOne": true
                    },
                    "pod_rule": {
                        "maxItemsOne": true
                    },
                    "workload_rule": {
                        "maxItemsOne": true
                    }
                }
            },
            "rancher2_project_role_template_binding": {
                "current": "rancher2:index/getProjectRoleTemplateBinding:getProjectRoleTemplateBinding",
                "majorVersion": 6
            },
            "rancher2_registry": {
                "current": "rancher2:index/getRegistry:getRegistry",
                "majorVersion": 6,
                "fields": {
                    "registries": {
                        "maxItemsOne": false
                    }
                }
            },
            "rancher2_role_template": {
                "current": "rancher2:index/getRoleTemplate:getRoleTemplate",
                "majorVersion": 6,
                "fields": {
                    "external_rules": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "api_groups": {
                                    "maxItemsOne": false
                                },
                                "non_resource_urls": {
                                    "maxItemsOne": false
                                },
                                "resource_names": {
                                    "maxItemsOne": false
                                },
                                "resources": {
                                    "maxItemsOne": false
                                },
                                "verbs": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    },
                    "role_template_ids": {
                        "maxItemsOne": false
                    },
                    "rules": {
                        "maxItemsOne": false,
                        "elem": {
                            "fields": {
                                "api_groups": {
                                    "maxItemsOne": false
                                },
                                "non_resource_urls": {
                                    "maxItemsOne": false
                                },
                                "resource_names": {
                                    "maxItemsOne": false
                                },
                                "resources": {
                                    "maxItemsOne": false
                                },
                                "verbs": {
                                    "maxItemsOne": false
                                }
                            }
                        }
                    }
                }
            },
            "rancher2_secret": {
                "current": "rancher2:index/getSecret:getSecret",
                "majorVersion": 6
            },
            "rancher2_secret_v2": {
                "current": "rancher2:index/getSecretV2:getSecretV2",
                "majorVersion": 6
            },
            "rancher2_setting": {
                "current": "rancher2:index/getSetting:getSetting",
                "majorVersion": 6
            },
            "rancher2_storage_class_v2": {
                "current": "rancher2:index/getStorageClassV2:getStorageClassV2",
                "majorVersion": 6,
                "fields": {
                    "mount_options": {
                        "maxItemsOne": false
                    }
                }
            },
            "rancher2_user": {
                "current": "rancher2:index/getUser:getUser",
                "majorVersion": 6,
                "fields": {
                    "principal_ids": {
                        "maxItemsOne": false
                    }
                }
            }
        }
    },
    "auto-settings": {},
    "renames": {
        "resources": {
            "rancher2:index/app:App": "rancher2_app",
            "rancher2:index/appV2:AppV2": "rancher2_app_v2",
            "rancher2:index/authConfigActiveDirectory:AuthConfigActiveDirectory": "rancher2_auth_config_activedirectory",
            "rancher2:index/authConfigAdfs:AuthConfigAdfs": "rancher2_auth_config_adfs",
            "rancher2:index/authConfigAzureAd:AuthConfigAzureAd": "rancher2_auth_config_azuread",
            "rancher2:index/authConfigFreeIpa:AuthConfigFreeIpa": "rancher2_auth_config_freeipa",
            "rancher2:index/authConfigGithub:AuthConfigGithub": "rancher2_auth_config_github",
            "rancher2:index/authConfigKeycloak:AuthConfigKeycloak": "rancher2_auth_config_keycloak",
            "rancher2:index/authConfigOkta:AuthConfigOkta": "rancher2_auth_config_okta",
            "rancher2:index/authConfigOpenLdap:AuthConfigOpenLdap": "rancher2_auth_config_openldap",
            "rancher2:index/authConfigPing:AuthConfigPing": "rancher2_auth_config_ping",
            "rancher2:index/bootstrap:Bootstrap": "rancher2_bootstrap",
            "rancher2:index/catalog:Catalog": "rancher2_catalog",
            "rancher2:index/catalogV2:CatalogV2": "rancher2_catalog_v2",
            "rancher2:index/certificate:Certificate": "rancher2_certificate",
            "rancher2:index/cloudCredential:CloudCredential": "rancher2_cloud_credential",
            "rancher2:index/cluster:Cluster": "rancher2_cluster",
            "rancher2:index/clusterAlertGroup:ClusterAlertGroup": "rancher2_cluster_alert_group",
            "rancher2:index/clusterAlertRule:ClusterAlertRule": "rancher2_cluster_alert_rule",
            "rancher2:index/clusterDriver:ClusterDriver": "rancher2_cluster_driver",
            "rancher2:index/clusterRoleTemplateBinding:ClusterRoleTemplateBinding": "rancher2_cluster_role_template_binding",
            "rancher2:index/clusterSync:ClusterSync": "rancher2_cluster_sync",
            "rancher2:index/clusterTemplate:ClusterTemplate": "rancher2_cluster_template",
            "rancher2:index/clusterV2:ClusterV2": "rancher2_cluster_v2",
            "rancher2:index/configMapV2:ConfigMapV2": "rancher2_config_map_v2",
            "rancher2:index/customUserToken:CustomUserToken": "rancher2_custom_user_token",
            "rancher2:index/etcdBackup:EtcdBackup": "rancher2_etcd_backup",
            "rancher2:index/feature:Feature": "rancher2_feature",
            "rancher2:index/globalDns:GlobalDns": "rancher2_global_dns",
            "rancher2:index/globalDnsProvider:GlobalDnsProvider": "rancher2_global_dns_provider",
            "rancher2:index/globalRole:GlobalRole": "rancher2_global_role",
            "rancher2:index/globalRoleBinding:GlobalRoleBinding": "rancher2_global_role_binding",
            "rancher2:index/machineConfigV2:MachineConfigV2": "rancher2_machine_config_v2",
            "rancher2:index/multiClusterApp:MultiClusterApp": "rancher2_multi_cluster_app",
            "rancher2:index/namespace:Namespace": "rancher2_namespace",
            "rancher2:index/nodeDriver:NodeDriver": "rancher2_node_driver",
            "rancher2:index/nodePool:NodePool": "rancher2_node_pool",
            "rancher2:index/nodeTemplate:NodeTemplate": "rancher2_node_template",
            "rancher2:index/notifier:Notifier": "rancher2_notifier",
            "rancher2:index/podSecurityPolicyTemplate:PodSecurityPolicyTemplate": "rancher2_pod_security_policy_template",
            "rancher2:index/project:Project": "rancher2_project",
            "rancher2:index/projectAlertGroup:ProjectAlertGroup": "rancher2_project_alert_group",
            "rancher2:index/projectAlertRule:ProjectAlertRule": "rancher2_project_alert_rule",
            "rancher2:index/projectRoleTemplateBinding:ProjectRoleTemplateBinding": "rancher2_project_role_template_binding",
            "rancher2:index/registry:Registry": "rancher2_registry",
            "rancher2:index/roleTemplate:RoleTemplate": "rancher2_role_template",
            "rancher2:index/secret:Secret": "rancher2_secret",
            "rancher2:index/secretV2:SecretV2": "rancher2_secret_v2",
            "rancher2:index/setting:Setting": "rancher2_setting",
            "rancher2:index/storageClassV2:StorageClassV2": "rancher2_storage_class_v2",
            "rancher2:index/token:Token": "rancher2_token",
            "rancher2:index/user:User": "rancher2_user"
        },
        "functions": {
            "rancher2:index/getApp:getApp": "rancher2_app",
            "rancher2:index/getCatalog:getCatalog": "rancher2_catalog",
            "rancher2:index/getCatalogV2:getCatalogV2": "rancher2_catalog_v2",
            "rancher2:index/getCertificate:getCertificate": "rancher2_certificate",
            "rancher2:index/getCloudCredential:getCloudCredential": "rancher2_cloud_credential",
            "rancher2:index/getCluster:getCluster": "rancher2_cluster",
            "rancher2:index/getClusterAlertGroup:getClusterAlertGroup": "rancher2_cluster_alert_group",
            "rancher2:index/getClusterAlertRule:getClusterAlertRule": "rancher2_cluster_alert_rule",
            "rancher2:index/getClusterDriver:getClusterDriver": "rancher2_cluster_driver",
            "rancher2:index/getClusterRoleTemplateBinding:getClusterRoleTemplateBinding": "rancher2_cluster_role_template_binding",
            "rancher2:index/getClusterTemplate:getClusterTemplate": "rancher2_cluster_template",
            "rancher2:index/getClusterV2:getClusterV2": "rancher2_cluster_v2",
            "rancher2:index/getConfigMapV2:getConfigMapV2": "rancher2_config_map_v2",
            "rancher2:index/getEtcdBackup:getEtcdBackup": "rancher2_etcd_backup",
            "rancher2:index/getGlobalDnsProvider:getGlobalDnsProvider": "rancher2_global_dns_provider",
            "rancher2:index/getGlobalRole:getGlobalRole": "rancher2_global_role",
            "rancher2:index/getGlobalRoleBinding:getGlobalRoleBinding": "rancher2_global_role_binding",
            "rancher2:index/getMultiClusterApp:getMultiClusterApp": "rancher2_multi_cluster_app",
            "rancher2:index/getNamespace:getNamespace": "rancher2_namespace",
            "rancher2:index/getNodeDriver:getNodeDriver": "rancher2_node_driver",
            "rancher2:index/getNodePool:getNodePool": "rancher2_node_pool",
            "rancher2:index/getNodeTemplate:getNodeTemplate": "rancher2_node_template",
            "rancher2:index/getNotifier:getNotifier": "rancher2_notifier",
            "rancher2:index/getPodSecurityPolicyTemplate:getPodSecurityPolicyTemplate": "rancher2_pod_security_policy_template",
            "rancher2:index/getPrincipal:getPrincipal": "rancher2_principal",
            "rancher2:index/getProject:getProject": "rancher2_project",
            "rancher2:index/getProjectAlertGroup:getProjectAlertGroup": "rancher2_project_alert_group",
            "rancher2:index/getProjectAlertRule:getProjectAlertRule": "rancher2_project_alert_rule",
            "rancher2:index/getProjectRoleTemplateBinding:getProjectRoleTemplateBinding": "rancher2_project_role_template_binding",
            "rancher2:index/getRegistry:getRegistry": "rancher2_registry",
            "rancher2:index/getRoleTemplate:getRoleTemplate": "rancher2_role_template",
            "rancher2:index/getSecret:getSecret": "rancher2_secret",
            "rancher2:index/getSecretV2:getSecretV2": "rancher2_secret_v2",
            "rancher2:index/getSetting:getSetting": "rancher2_setting",
            "rancher2:index/getStorageClassV2:getStorageClassV2": "rancher2_storage_class_v2",
            "rancher2:index/getUser:getUser": "rancher2_user"
        },
        "renamedProperties": {
            "rancher2:index/CloudCredentialAmazonec2CredentialConfig:CloudCredentialAmazonec2CredentialConfig": {
                "accessKey": "access_key",
                "defaultRegion": "default_region",
                "secretKey": "secret_key"
            },
            "rancher2:index/CloudCredentialAzureCredentialConfig:CloudCredentialAzureCredentialConfig": {
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "subscriptionId": "subscription_id",
                "tenantId": "tenant_id"
            },
            "rancher2:index/CloudCredentialDigitaloceanCredentialConfig:CloudCredentialDigitaloceanCredentialConfig": {
                "accessToken": "access_token"
            },
            "rancher2:index/CloudCredentialGoogleCredentialConfig:CloudCredentialGoogleCredentialConfig": {
                "authEncodedJson": "auth_encoded_json"
            },
            "rancher2:index/CloudCredentialHarvesterCredentialConfig:CloudCredentialHarvesterCredentialConfig": {
                "clusterId": "cluster_id",
                "clusterType": "cluster_type",
                "kubeconfigContent": "kubeconfig_content"
            },
            "rancher2:index/CloudCredentialS3CredentialConfig:CloudCredentialS3CredentialConfig": {
                "accessKey": "access_key",
                "defaultBucket": "default_bucket",
                "defaultEndpoint": "default_endpoint",
                "defaultEndpointCa": "default_endpoint_ca",
                "defaultFolder": "default_folder",
                "defaultRegion": "default_region",
                "defaultSkipSslVerify": "default_skip_ssl_verify",
                "secretKey": "secret_key"
            },
            "rancher2:index/CloudCredentialVsphereCredentialConfig:CloudCredentialVsphereCredentialConfig": {
                "vcenterPort": "vcenter_port"
            },
            "rancher2:index/ClusterAksConfig:ClusterAksConfig": {
                "aadServerAppSecret": "aad_server_app_secret",
                "aadTenantId": "aad_tenant_id",
                "addClientAppId": "add_client_app_id",
                "addServerAppId": "add_server_app_id",
                "adminUsername": "admin_username",
                "agentDnsPrefix": "agent_dns_prefix",
                "agentOsDiskSize": "agent_os_disk_size",
                "agentPoolName": "agent_pool_name",
                "agentStorageProfile": "agent_storage_profile",
                "agentVmSize": "agent_vm_size",
                "authBaseUrl": "auth_base_url",
                "baseUrl": "base_url",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "dnsServiceIp": "dns_service_ip",
                "dockerBridgeCidr": "docker_bridge_cidr",
                "enableHttpApplicationRouting": "enable_http_application_routing",
                "enableMonitoring": "enable_monitoring",
                "kubernetesVersion": "kubernetes_version",
                "loadBalancerSku": "load_balancer_sku",
                "logAnalyticsWorkspace": "log_analytics_workspace",
                "logAnalyticsWorkspaceResourceGroup": "log_analytics_workspace_resource_group",
                "masterDnsPrefix": "master_dns_prefix",
                "maxPods": "max_pods",
                "networkPlugin": "network_plugin",
                "networkPolicy": "network_policy",
                "podCidr": "pod_cidr",
                "resourceGroup": "resource_group",
                "serviceCidr": "service_cidr",
                "sshPublicKeyContents": "ssh_public_key_contents",
                "subscriptionId": "subscription_id",
                "tenantId": "tenant_id",
                "virtualNetwork": "virtual_network",
                "virtualNetworkResourceGroup": "virtual_network_resource_group"
            },
            "rancher2:index/ClusterAksConfigV2:ClusterAksConfigV2": {
                "authBaseUrl": "auth_base_url",
                "authorizedIpRanges": "authorized_ip_ranges",
                "baseUrl": "base_url",
                "cloudCredentialId": "cloud_credential_id",
                "dnsPrefix": "dns_prefix",
                "httpApplicationRouting": "http_application_routing",
                "kubernetesVersion": "kubernetes_version",
                "linuxAdminUsername": "linux_admin_username",
                "linuxSshPublicKey": "linux_ssh_public_key",
                "loadBalancerSku": "load_balancer_sku",
                "logAnalyticsWorkspaceGroup": "log_analytics_workspace_group",
                "logAnalyticsWorkspaceName": "log_analytics_workspace_name",
                "networkDnsServiceIp": "network_dns_service_ip",
                "networkDockerBridgeCidr": "network_docker_bridge_cidr",
                "networkPlugin": "network_plugin",
                "networkPodCidr": "network_pod_cidr",
                "networkPolicy": "network_policy",
                "networkServiceCidr": "network_service_cidr",
                "nodePools": "node_pools",
                "privateCluster": "private_cluster",
                "resourceGroup": "resource_group",
                "resourceLocation": "resource_location",
                "virtualNetwork": "virtual_network",
                "virtualNetworkResourceGroup": "virtual_network_resource_group"
            },
            "rancher2:index/ClusterAksConfigV2NodePool:ClusterAksConfigV2NodePool": {
                "availabilityZones": "availability_zones",
                "enableAutoScaling": "enable_auto_scaling",
                "maxCount": "max_count",
                "maxPods": "max_pods",
                "maxSurge": "max_surge",
                "minCount": "min_count",
                "orchestratorVersion": "orchestrator_version",
                "osDiskSizeGb": "os_disk_size_gb",
                "osDiskType": "os_disk_type",
                "osType": "os_type",
                "vmSize": "vm_size"
            },
            "rancher2:index/ClusterAlertGroupRecipient:ClusterAlertGroupRecipient": {
                "defaultRecipient": "default_recipient",
                "notifierId": "notifier_id",
                "notifierType": "notifier_type"
            },
            "rancher2:index/ClusterAlertRuleEventRule:ClusterAlertRuleEventRule": {
                "eventType": "event_type",
                "resourceKind": "resource_kind"
            },
            "rancher2:index/ClusterAlertRuleMetricRule:ClusterAlertRuleMetricRule": {
                "thresholdValue": "threshold_value"
            },
            "rancher2:index/ClusterAlertRuleNodeRule:ClusterAlertRuleNodeRule": {
                "cpuThreshold": "cpu_threshold",
                "memThreshold": "mem_threshold",
                "nodeId": "node_id"
            },
            "rancher2:index/ClusterClusterAgentDeploymentCustomization:ClusterClusterAgentDeploymentCustomization": {
                "appendTolerations": "append_tolerations",
                "overrideAffinity": "override_affinity",
                "overrideResourceRequirements": "override_resource_requirements"
            },
            "rancher2:index/ClusterClusterAgentDeploymentCustomizationOverrideResourceRequirement:ClusterClusterAgentDeploymentCustomizationOverrideResourceRequirement": {
                "cpuLimit": "cpu_limit",
                "cpuRequest": "cpu_request",
                "memoryLimit": "memory_limit",
                "memoryRequest": "memory_request"
            },
            "rancher2:index/ClusterClusterAuthEndpoint:ClusterClusterAuthEndpoint": {
                "caCerts": "ca_certs"
            },
            "rancher2:index/ClusterClusterRegistrationToken:ClusterClusterRegistrationToken": {
                "clusterId": "cluster_id",
                "insecureCommand": "insecure_command",
                "insecureNodeCommand": "insecure_node_command",
                "insecureWindowsNodeCommand": "insecure_windows_node_command",
                "manifestUrl": "manifest_url",
                "nodeCommand": "node_command",
                "windowsNodeCommand": "windows_node_command"
            },
            "rancher2:index/ClusterClusterTemplateAnswers:ClusterClusterTemplateAnswers": {
                "clusterId": "cluster_id",
                "projectId": "project_id"
            },
            "rancher2:index/ClusterEksConfig:ClusterEksConfig": {
                "accessKey": "access_key",
                "associateWorkerNodePublicIp": "associate_worker_node_public_ip",
                "desiredNodes": "desired_nodes",
                "ebsEncryption": "ebs_encryption",
                "instanceType": "instance_type",
                "keyPairName": "key_pair_name",
                "kubernetesVersion": "kubernetes_version",
                "maximumNodes": "maximum_nodes",
                "minimumNodes": "minimum_nodes",
                "nodeVolumeSize": "node_volume_size",
                "secretKey": "secret_key",
                "securityGroups": "security_groups",
                "serviceRole": "service_role",
                "sessionToken": "session_token",
                "userData": "user_data",
                "virtualNetwork": "virtual_network"
            },
            "rancher2:index/ClusterEksConfigV2:ClusterEksConfigV2": {
                "cloudCredentialId": "cloud_credential_id",
                "kmsKey": "kms_key",
                "kubernetesVersion": "kubernetes_version",
                "loggingTypes": "logging_types",
                "nodeGroups": "node_groups",
                "privateAccess": "private_access",
                "publicAccess": "public_access",
                "publicAccessSources": "public_access_sources",
                "secretsEncryption": "secrets_encryption",
                "securityGroups": "security_groups",
                "serviceRole": "service_role"
            },
            "rancher2:index/ClusterEksConfigV2NodeGroup:ClusterEksConfigV2NodeGroup": {
                "desiredSize": "desired_size",
                "diskSize": "disk_size",
                "ec2SshKey": "ec2_ssh_key",
                "imageId": "image_id",
                "instanceType": "instance_type",
                "launchTemplates": "launch_template",
                "maxSize": "max_size",
                "minSize": "min_size",
                "nodeRole": "node_role",
                "requestSpotInstances": "request_spot_instances",
                "resourceTags": "resource_tags",
                "spotInstanceTypes": "spot_instance_types",
                "userData": "user_data"
            },
            "rancher2:index/ClusterFleetAgentDeploymentCustomization:ClusterFleetAgentDeploymentCustomization": {
                "appendTolerations": "append_tolerations",
                "overrideAffinity": "override_affinity",
                "overrideResourceRequirements": "override_resource_requirements"
            },
            "rancher2:index/ClusterFleetAgentDeploymentCustomizationOverrideResourceRequirement:ClusterFleetAgentDeploymentCustomizationOverrideResourceRequirement": {
                "cpuLimit": "cpu_limit",
                "cpuRequest": "cpu_request",
                "memoryLimit": "memory_limit",
                "memoryRequest": "memory_request"
            },
            "rancher2:index/ClusterGkeConfig:ClusterGkeConfig": {
                "clusterIpv4Cidr": "cluster_ipv4_cidr",
                "diskSizeGb": "disk_size_gb",
                "diskType": "disk_type",
                "enableAlphaFeature": "enable_alpha_feature",
                "enableAutoRepair": "enable_auto_repair",
                "enableAutoUpgrade": "enable_auto_upgrade",
                "enableHorizontalPodAutoscaling": "enable_horizontal_pod_autoscaling",
                "enableHttpLoadBalancing": "enable_http_load_balancing",
                "enableKubernetesDashboard": "enable_kubernetes_dashboard",
                "enableLegacyAbac": "enable_legacy_abac",
                "enableMasterAuthorizedNetwork": "enable_master_authorized_network",
                "enableNetworkPolicyConfig": "enable_network_policy_config",
                "enableNodepoolAutoscaling": "enable_nodepool_autoscaling",
                "enablePrivateEndpoint": "enable_private_endpoint",
                "enablePrivateNodes": "enable_private_nodes",
                "enableStackdriverLogging": "enable_stackdriver_logging",
                "enableStackdriverMonitoring": "enable_stackdriver_monitoring",
                "imageType": "image_type",
                "ipPolicyClusterIpv4CidrBlock": "ip_policy_cluster_ipv4_cidr_block",
                "ipPolicyClusterSecondaryRangeName": "ip_policy_cluster_secondary_range_name",
                "ipPolicyCreateSubnetwork": "ip_policy_create_subnetwork",
                "ipPolicyNodeIpv4CidrBlock": "ip_policy_node_ipv4_cidr_block",
                "ipPolicyServicesIpv4CidrBlock": "ip_policy_services_ipv4_cidr_block",
                "ipPolicyServicesSecondaryRangeName": "ip_policy_services_secondary_range_name",
                "ipPolicySubnetworkName": "ip_policy_subnetwork_name",
                "issueClientCertificate": "issue_client_certificate",
                "kubernetesDashboard": "kubernetes_dashboard",
                "localSsdCount": "local_ssd_count",
                "machineType": "machine_type",
                "maintenanceWindow": "maintenance_window",
                "masterAuthorizedNetworkCidrBlocks": "master_authorized_network_cidr_blocks",
                "masterIpv4CidrBlock": "master_ipv4_cidr_block",
                "masterVersion": "master_version",
                "maxNodeCount": "max_node_count",
                "minNodeCount": "min_node_count",
                "nodeCount": "node_count",
                "nodePool": "node_pool",
                "nodeVersion": "node_version",
                "oauthScopes": "oauth_scopes",
                "projectId": "project_id",
                "resourceLabels": "resource_labels",
                "serviceAccount": "service_account",
                "subNetwork": "sub_network",
                "useIpAliases": "use_ip_aliases"
            },
            "rancher2:index/ClusterGkeConfigV2:ClusterGkeConfigV2": {
                "clusterAddons": "cluster_addons",
                "clusterIpv4CidrBlock": "cluster_ipv4_cidr_block",
                "enableKubernetesAlpha": "enable_kubernetes_alpha",
                "googleCredentialSecret": "google_credential_secret",
                "ipAllocationPolicy": "ip_allocation_policy",
                "kubernetesVersion": "kubernetes_version",
                "loggingService": "logging_service",
                "maintenanceWindow": "maintenance_window",
                "masterAuthorizedNetworksConfig": "master_authorized_networks_config",
                "monitoringService": "monitoring_service",
                "networkPolicyEnabled": "network_policy_enabled",
                "nodePools": "node_pools",
                "privateClusterConfig": "private_cluster_config",
                "projectId": "project_id"
            },
            "rancher2:index/ClusterGkeConfigV2ClusterAddons:ClusterGkeConfigV2ClusterAddons": {
                "horizontalPodAutoscaling": "horizontal_pod_autoscaling",
                "httpLoadBalancing": "http_load_balancing",
                "networkPolicyConfig": "network_policy_config"
            },
            "rancher2:index/ClusterGkeConfigV2IpAllocationPolicy:ClusterGkeConfigV2IpAllocationPolicy": {
                "clusterIpv4CidrBlock": "cluster_ipv4_cidr_block",
                "clusterSecondaryRangeName": "cluster_secondary_range_name",
                "createSubnetwork": "create_subnetwork",
                "nodeIpv4CidrBlock": "node_ipv4_cidr_block",
                "servicesIpv4CidrBlock": "services_ipv4_cidr_block",
                "servicesSecondaryRangeName": "services_secondary_range_name",
                "subnetworkName": "subnetwork_name",
                "useIpAliases": "use_ip_aliases"
            },
            "rancher2:index/ClusterGkeConfigV2MasterAuthorizedNetworksConfig:ClusterGkeConfigV2MasterAuthorizedNetworksConfig": {
                "cidrBlocks": "cidr_blocks"
            },
            "rancher2:index/ClusterGkeConfigV2MasterAuthorizedNetworksConfigCidrBlock:ClusterGkeConfigV2MasterAuthorizedNetworksConfigCidrBlock": {
                "cidrBlock": "cidr_block",
                "displayName": "display_name"
            },
            "rancher2:index/ClusterGkeConfigV2NodePool:ClusterGkeConfigV2NodePool": {
                "initialNodeCount": "initial_node_count",
                "maxPodsConstraint": "max_pods_constraint"
            },
            "rancher2:index/ClusterGkeConfigV2NodePoolAutoscaling:ClusterGkeConfigV2NodePoolAutoscaling": {
                "maxNodeCount": "max_node_count",
                "minNodeCount": "min_node_count"
            },
            "rancher2:index/ClusterGkeConfigV2NodePoolConfig:ClusterGkeConfigV2NodePoolConfig": {
                "diskSizeGb": "disk_size_gb",
                "diskType": "disk_type",
                "imageType": "image_type",
                "localSsdCount": "local_ssd_count",
                "machineType": "machine_type",
                "oauthScopes": "oauth_scopes"
            },
            "rancher2:index/ClusterGkeConfigV2NodePoolManagement:ClusterGkeConfigV2NodePoolManagement": {
                "autoRepair": "auto_repair",
                "autoUpgrade": "auto_upgrade"
            },
            "rancher2:index/ClusterGkeConfigV2PrivateClusterConfig:ClusterGkeConfigV2PrivateClusterConfig": {
                "enablePrivateEndpoint": "enable_private_endpoint",
                "enablePrivateNodes": "enable_private_nodes",
                "masterIpv4CidrBlock": "master_ipv4_cidr_block"
            },
            "rancher2:index/ClusterK3sConfig:ClusterK3sConfig": {
                "upgradeStrategy": "upgrade_strategy"
            },
            "rancher2:index/ClusterK3sConfigUpgradeStrategy:ClusterK3sConfigUpgradeStrategy": {
                "drainServerNodes": "drain_server_nodes",
                "drainWorkerNodes": "drain_worker_nodes",
                "serverConcurrency": "server_concurrency",
                "workerConcurrency": "worker_concurrency"
            },
            "rancher2:index/ClusterOkeConfig:ClusterOkeConfig": {
                "compartmentId": "compartment_id",
                "customBootVolumeSize": "custom_boot_volume_size",
                "enableKubernetesDashboard": "enable_kubernetes_dashboard",
                "enablePrivateControlPlane": "enable_private_control_plane",
                "enablePrivateNodes": "enable_private_nodes",
                "flexOcpus": "flex_ocpus",
                "kmsKeyId": "kms_key_id",
                "kubernetesVersion": "kubernetes_version",
                "limitNodeCount": "limit_node_count",
                "loadBalancerSubnetName1": "load_balancer_subnet_name_1",
                "loadBalancerSubnetName2": "load_balancer_subnet_name_2",
                "nodeImage": "node_image",
                "nodePoolDnsDomainName": "node_pool_dns_domain_name",
                "nodePoolSubnetName": "node_pool_subnet_name",
                "nodePublicKeyContents": "node_public_key_contents",
                "nodeShape": "node_shape",
                "podCidr": "pod_cidr",
                "privateKeyContents": "private_key_contents",
                "privateKeyPassphrase": "private_key_passphrase",
                "quantityOfNodeSubnets": "quantity_of_node_subnets",
                "quantityPerSubnet": "quantity_per_subnet",
                "serviceCidr": "service_cidr",
                "serviceDnsDomainName": "service_dns_domain_name",
                "skipVcnDelete": "skip_vcn_delete",
                "tenancyId": "tenancy_id",
                "userOcid": "user_ocid",
                "vcnCompartmentId": "vcn_compartment_id",
                "vcnName": "vcn_name",
                "workerNodeIngressCidr": "worker_node_ingress_cidr"
            },
            "rancher2:index/ClusterRke2Config:ClusterRke2Config": {
                "upgradeStrategy": "upgrade_strategy"
            },
            "rancher2:index/ClusterRke2ConfigUpgradeStrategy:ClusterRke2ConfigUpgradeStrategy": {
                "drainServerNodes": "drain_server_nodes",
                "drainWorkerNodes": "drain_worker_nodes",
                "serverConcurrency": "server_concurrency",
                "workerConcurrency": "worker_concurrency"
            },
            "rancher2:index/ClusterRkeConfig:ClusterRkeConfig": {
                "addonJobTimeout": "addon_job_timeout",
                "addonsIncludes": "addons_include",
                "bastionHost": "bastion_host",
                "cloudProvider": "cloud_provider",
                "enableCriDockerd": "enable_cri_dockerd",
                "ignoreDockerVersion": "ignore_docker_version",
                "kubernetesVersion": "kubernetes_version",
                "prefixPath": "prefix_path",
                "privateRegistries": "private_registries",
                "sshAgentAuth": "ssh_agent_auth",
                "sshCertPath": "ssh_cert_path",
                "sshKeyPath": "ssh_key_path",
                "upgradeStrategy": "upgrade_strategy",
                "winPrefixPath": "win_prefix_path"
            },
            "rancher2:index/ClusterRkeConfigBastionHost:ClusterRkeConfigBastionHost": {
                "sshAgentAuth": "ssh_agent_auth",
                "sshKey": "ssh_key",
                "sshKeyPath": "ssh_key_path"
            },
            "rancher2:index/ClusterRkeConfigCloudProvider:ClusterRkeConfigCloudProvider": {
                "awsCloudProvider": "aws_cloud_provider",
                "azureCloudProvider": "azure_cloud_provider",
                "customCloudProvider": "custom_cloud_provider",
                "openstackCloudProvider": "openstack_cloud_provider",
                "vsphereCloudProvider": "vsphere_cloud_provider"
            },
            "rancher2:index/ClusterRkeConfigCloudProviderAwsCloudProvider:ClusterRkeConfigCloudProviderAwsCloudProvider": {
                "serviceOverrides": "service_override"
            },
            "rancher2:index/ClusterRkeConfigCloudProviderAwsCloudProviderGlobal:ClusterRkeConfigCloudProviderAwsCloudProviderGlobal": {
                "disableSecurityGroupIngress": "disable_security_group_ingress",
                "disableStrictZoneCheck": "disable_strict_zone_check",
                "elbSecurityGroup": "elb_security_group",
                "kubernetesClusterId": "kubernetes_cluster_id",
                "kubernetesClusterTag": "kubernetes_cluster_tag",
                "roleArn": "role_arn",
                "routeTableId": "route_table_id",
                "subnetId": "subnet_id"
            },
            "rancher2:index/ClusterRkeConfigCloudProviderAwsCloudProviderServiceOverride:ClusterRkeConfigCloudProviderAwsCloudProviderServiceOverride": {
                "signingMethod": "signing_method",
                "signingName": "signing_name",
                "signingRegion": "signing_region"
            },
            "rancher2:index/ClusterRkeConfigCloudProviderAzureCloudProvider:ClusterRkeConfigCloudProviderAzureCloudProvider": {
                "aadClientCertPassword": "aad_client_cert_password",
                "aadClientCertPath": "aad_client_cert_path",
                "aadClientId": "aad_client_id",
                "aadClientSecret": "aad_client_secret",
                "cloudProviderBackoff": "cloud_provider_backoff",
                "cloudProviderBackoffDuration": "cloud_provider_backoff_duration",
                "cloudProviderBackoffExponent": "cloud_provider_backoff_exponent",
                "cloudProviderBackoffJitter": "cloud_provider_backoff_jitter",
                "cloudProviderBackoffRetries": "cloud_provider_backoff_retries",
                "cloudProviderRateLimit": "cloud_provider_rate_limit",
                "cloudProviderRateLimitBucket": "cloud_provider_rate_limit_bucket",
                "cloudProviderRateLimitQps": "cloud_provider_rate_limit_qps",
                "loadBalancerSku": "load_balancer_sku",
                "maximumLoadBalancerRuleCount": "maximum_load_balancer_rule_count",
                "primaryAvailabilitySetName": "primary_availability_set_name",
                "primaryScaleSetName": "primary_scale_set_name",
                "resourceGroup": "resource_group",
                "routeTableName": "route_table_name",
                "securityGroupName": "security_group_name",
                "subnetName": "subnet_name",
                "subscriptionId": "subscription_id",
                "tenantId": "tenant_id",
                "useInstanceMetadata": "use_instance_metadata",
                "useManagedIdentityExtension": "use_managed_identity_extension",
                "vmType": "vm_type",
                "vnetName": "vnet_name",
                "vnetResourceGroup": "vnet_resource_group"
            },
            "rancher2:index/ClusterRkeConfigCloudProviderOpenstackCloudProvider:ClusterRkeConfigCloudProviderOpenstackCloudProvider": {
                "blockStorage": "block_storage",
                "loadBalancer": "load_balancer"
            },
            "rancher2:index/ClusterRkeConfigCloudProviderOpenstackCloudProviderBlockStorage:ClusterRkeConfigCloudProviderOpenstackCloudProviderBlockStorage": {
                "bsVersion": "bs_version",
                "ignoreVolumeAz": "ignore_volume_az",
                "trustDevicePath": "trust_device_path"
            },
            "rancher2:index/ClusterRkeConfigCloudProviderOpenstackCloudProviderGlobal:ClusterRkeConfigCloudProviderOpenstackCloudProviderGlobal": {
                "authUrl": "auth_url",
                "caFile": "ca_file",
                "domainId": "domain_id",
                "domainName": "domain_name",
                "tenantId": "tenant_id",
                "tenantName": "tenant_name",
                "trustId": "trust_id"
            },
            "rancher2:index/ClusterRkeConfigCloudProviderOpenstackCloudProviderLoadBalancer:ClusterRkeConfigCloudProviderOpenstackCloudProviderLoadBalancer": {
                "createMonitor": "create_monitor",
                "floatingNetworkId": "floating_network_id",
                "lbMethod": "lb_method",
                "lbProvider": "lb_provider",
                "lbVersion": "lb_version",
                "manageSecurityGroups": "manage_security_groups",
                "monitorDelay": "monitor_delay",
                "monitorMaxRetries": "monitor_max_retries",
                "monitorTimeout": "monitor_timeout",
                "subnetId": "subnet_id",
                "useOctavia": "use_octavia"
            },
            "rancher2:index/ClusterRkeConfigCloudProviderOpenstackCloudProviderMetadata:ClusterRkeConfigCloudProviderOpenstackCloudProviderMetadata": {
                "requestTimeout": "request_timeout",
                "searchOrder": "search_order"
            },
            "rancher2:index/ClusterRkeConfigCloudProviderOpenstackCloudProviderRoute:ClusterRkeConfigCloudProviderOpenstackCloudProviderRoute": {
                "routerId": "router_id"
            },
            "rancher2:index/ClusterRkeConfigCloudProviderVsphereCloudProvider:ClusterRkeConfigCloudProviderVsphereCloudProvider": {
                "virtualCenters": "virtual_center"
            },
            "rancher2:index/ClusterRkeConfigCloudProviderVsphereCloudProviderDisk:ClusterRkeConfigCloudProviderVsphereCloudProviderDisk": {
                "scsiControllerType": "scsi_controller_type"
            },
            "rancher2:index/ClusterRkeConfigCloudProviderVsphereCloudProviderGlobal:ClusterRkeConfigCloudProviderVsphereCloudProviderGlobal": {
                "gracefulShutdownTimeout": "graceful_shutdown_timeout",
                "insecureFlag": "insecure_flag",
                "soapRoundtripCount": "soap_roundtrip_count"
            },
            "rancher2:index/ClusterRkeConfigCloudProviderVsphereCloudProviderNetwork:ClusterRkeConfigCloudProviderVsphereCloudProviderNetwork": {
                "publicNetwork": "public_network"
            },
            "rancher2:index/ClusterRkeConfigCloudProviderVsphereCloudProviderVirtualCenter:ClusterRkeConfigCloudProviderVsphereCloudProviderVirtualCenter": {
                "soapRoundtripCount": "soap_roundtrip_count"
            },
            "rancher2:index/ClusterRkeConfigCloudProviderVsphereCloudProviderWorkspace:ClusterRkeConfigCloudProviderVsphereCloudProviderWorkspace": {
                "defaultDatastore": "default_datastore",
                "resourcepoolPath": "resourcepool_path"
            },
            "rancher2:index/ClusterRkeConfigDns:ClusterRkeConfigDns": {
                "linearAutoscalerParams": "linear_autoscaler_params",
                "nodeSelector": "node_selector",
                "reverseCidrs": "reverse_cidrs",
                "updateStrategy": "update_strategy",
                "upstreamNameservers": "upstream_nameservers"
            },
            "rancher2:index/ClusterRkeConfigDnsLinearAutoscalerParams:ClusterRkeConfigDnsLinearAutoscalerParams": {
                "coresPerReplica": "cores_per_replica",
                "nodesPerReplica": "nodes_per_replica",
                "preventSinglePointFailure": "prevent_single_point_failure"
            },
            "rancher2:index/ClusterRkeConfigDnsNodelocal:ClusterRkeConfigDnsNodelocal": {
                "ipAddress": "ip_address",
                "nodeSelector": "node_selector"
            },
            "rancher2:index/ClusterRkeConfigDnsUpdateStrategy:ClusterRkeConfigDnsUpdateStrategy": {
                "rollingUpdate": "rolling_update"
            },
            "rancher2:index/ClusterRkeConfigDnsUpdateStrategyRollingUpdate:ClusterRkeConfigDnsUpdateStrategyRollingUpdate": {
                "maxSurge": "max_surge",
                "maxUnavailable": "max_unavailable"
            },
            "rancher2:index/ClusterRkeConfigIngress:ClusterRkeConfigIngress": {
                "defaultBackend": "default_backend",
                "dnsPolicy": "dns_policy",
                "extraArgs": "extra_args",
                "httpPort": "http_port",
                "httpsPort": "https_port",
                "networkMode": "network_mode",
                "nodeSelector": "node_selector",
                "updateStrategy": "update_strategy"
            },
            "rancher2:index/ClusterRkeConfigIngressUpdateStrategy:ClusterRkeConfigIngressUpdateStrategy": {
                "rollingUpdate": "rolling_update"
            },
            "rancher2:index/ClusterRkeConfigIngressUpdateStrategyRollingUpdate:ClusterRkeConfigIngressUpdateStrategyRollingUpdate": {
                "maxUnavailable": "max_unavailable"
            },
            "rancher2:index/ClusterRkeConfigMonitoring:ClusterRkeConfigMonitoring": {
                "nodeSelector": "node_selector",
                "updateStrategy": "update_strategy"
            },
            "rancher2:index/ClusterRkeConfigMonitoringUpdateStrategy:ClusterRkeConfigMonitoringUpdateStrategy": {
                "rollingUpdate": "rolling_update"
            },
            "rancher2:index/ClusterRkeConfigMonitoringUpdateStrategyRollingUpdate:ClusterRkeConfigMonitoringUpdateStrategyRollingUpdate": {
                "maxSurge": "max_surge",
                "maxUnavailable": "max_unavailable"
            },
            "rancher2:index/ClusterRkeConfigNetwork:ClusterRkeConfigNetwork": {
                "aciNetworkProvider": "aci_network_provider",
                "calicoNetworkProvider": "calico_network_provider",
                "canalNetworkProvider": "canal_network_provider",
                "flannelNetworkProvider": "flannel_network_provider",
                "weaveNetworkProvider": "weave_network_provider"
            },
            "rancher2:index/ClusterRkeConfigNetworkAciNetworkProvider:ClusterRkeConfigNetworkAciNetworkProvider": {
                "apicHosts": "apic_hosts",
                "apicRefreshTickerAdjust": "apic_refresh_ticker_adjust",
                "apicRefreshTime": "apic_refresh_time",
                "apicSubscriptionDelay": "apic_subscription_delay",
                "apicUserCrt": "apic_user_crt",
                "apicUserKey": "apic_user_key",
                "apicUserName": "apic_user_name",
                "controllerLogLevel": "controller_log_level",
                "disablePeriodicSnatGlobalInfoSync": "disable_periodic_snat_global_info_sync",
                "disableWaitForNetwork": "disable_wait_for_network",
                "dropLogEnable": "drop_log_enable",
                "durationWaitForNetwork": "duration_wait_for_network",
                "enableEndpointSlice": "enable_endpoint_slice",
                "encapType": "encap_type",
                "epRegistry": "ep_registry",
                "externDynamic": "extern_dynamic",
                "externStatic": "extern_static",
                "gbpPodSubnet": "gbp_pod_subnet",
                "hostAgentLogLevel": "host_agent_log_level",
                "imagePullPolicy": "image_pull_policy",
                "imagePullSecret": "image_pull_secret",
                "infraVlan": "infra_vlan",
                "installIstio": "install_istio",
                "istioProfile": "istio_profile",
                "kafkaBrokers": "kafka_brokers",
                "kafkaClientCrt": "kafka_client_crt",
                "kafkaClientKey": "kafka_client_key",
                "kubeApiVlan": "kube_api_vlan",
                "l3outExternalNetworks": "l3out_external_networks",
                "maxNodesSvcGraph": "max_nodes_svc_graph",
                "mcastRangeEnd": "mcast_range_end",
                "mcastRangeStart": "mcast_range_start",
                "mtuHeadRoom": "mtu_head_room",
                "multusDisable": "multus_disable",
                "noPriorityClass": "no_priority_class",
                "nodePodIfEnable": "node_pod_if_enable",
                "nodeSubnet": "node_subnet",
                "nodeSvcSubnet": "node_svc_subnet",
                "opflexClientSsl": "opflex_client_ssl",
                "opflexDeviceDeleteTimeout": "opflex_device_delete_timeout",
                "opflexLogLevel": "opflex_log_level",
                "opflexMode": "opflex_mode",
                "opflexServerPort": "opflex_server_port",
                "overlayVrfName": "overlay_vrf_name",
                "ovsMemoryLimit": "ovs_memory_limit",
                "pbrTrackingNonSnat": "pbr_tracking_non_snat",
                "podSubnetChunkSize": "pod_subnet_chunk_size",
                "runGbpContainer": "run_gbp_container",
                "runOpflexServerContainer": "run_opflex_server_container",
                "serviceMonitorInterval": "service_monitor_interval",
                "serviceVlan": "service_vlan",
                "snatContractScope": "snat_contract_scope",
                "snatNamespace": "snat_namespace",
                "snatPortRangeEnd": "snat_port_range_end",
                "snatPortRangeStart": "snat_port_range_start",
                "snatPortsPerNode": "snat_ports_per_node",
                "sriovEnable": "sriov_enable",
                "subnetDomainName": "subnet_domain_name",
                "systemId": "system_id",
                "useAciAnywhereCrd": "use_aci_anywhere_crd",
                "useAciCniPriorityClass": "use_aci_cni_priority_class",
                "useClusterRole": "use_cluster_role",
                "useHostNetnsVolume": "use_host_netns_volume",
                "useOpflexServerVolume": "use_opflex_server_volume",
                "usePrivilegedContainer": "use_privileged_container",
                "vmmController": "vmm_controller",
                "vmmDomain": "vmm_domain",
                "vrfName": "vrf_name",
                "vrfTenant": "vrf_tenant"
            },
            "rancher2:index/ClusterRkeConfigNetworkCalicoNetworkProvider:ClusterRkeConfigNetworkCalicoNetworkProvider": {
                "cloudProvider": "cloud_provider"
            },
            "rancher2:index/ClusterRkeConfigNode:ClusterRkeConfigNode": {
                "dockerSocket": "docker_socket",
                "hostnameOverride": "hostname_override",
                "internalAddress": "internal_address",
                "nodeId": "node_id",
                "roles": "role",
                "sshAgentAuth": "ssh_agent_auth",
                "sshKey": "ssh_key",
                "sshKeyPath": "ssh_key_path"
            },
            "rancher2:index/ClusterRkeConfigPrivateRegistry:ClusterRkeConfigPrivateRegistry": {
                "ecrCredentialPlugin": "ecr_credential_plugin",
                "isDefault": "is_default"
            },
            "rancher2:index/ClusterRkeConfigPrivateRegistryEcrCredentialPlugin:ClusterRkeConfigPrivateRegistryEcrCredentialPlugin": {
                "awsAccessKeyId": "aws_access_key_id",
                "awsSecretAccessKey": "aws_secret_access_key",
                "awsSessionToken": "aws_session_token"
            },
            "rancher2:index/ClusterRkeConfigServices:ClusterRkeConfigServices": {
                "kubeApi": "kube_api",
                "kubeController": "kube_controller"
            },
            "rancher2:index/ClusterRkeConfigServicesEtcd:ClusterRkeConfigServicesEtcd": {
                "backupConfig": "backup_config",
                "caCert": "ca_cert",
                "externalUrls": "external_urls",
                "extraArgs": "extra_args",
                "extraBinds": "extra_binds",
                "extraEnvs": "extra_env"
            },
            "rancher2:index/ClusterRkeConfigServicesEtcdBackupConfig:ClusterRkeConfigServicesEtcdBackupConfig": {
                "intervalHours": "interval_hours",
                "s3BackupConfig": "s3_backup_config",
                "safeTimestamp": "safe_timestamp"
            },
            "rancher2:index/ClusterRkeConfigServicesEtcdBackupConfigS3BackupConfig:ClusterRkeConfigServicesEtcdBackupConfigS3BackupConfig": {
                "accessKey": "access_key",
                "bucketName": "bucket_name",
                "customCa": "custom_ca",
                "secretKey": "secret_key"
            },
            "rancher2:index/ClusterRkeConfigServicesKubeApi:ClusterRkeConfigServicesKubeApi": {
                "admissionConfiguration": "admission_configuration",
                "alwaysPullImages": "always_pull_images",
                "auditLog": "audit_log",
                "eventRateLimit": "event_rate_limit",
                "extraArgs": "extra_args",
                "extraBinds": "extra_binds",
                "extraEnvs": "extra_env",
                "podSecurityPolicy": "pod_security_policy",
                "secretsEncryptionConfig": "secrets_encryption_config",
                "serviceClusterIpRange": "service_cluster_ip_range",
                "serviceNodePortRange": "service_node_port_range"
            },
            "rancher2:index/ClusterRkeConfigServicesKubeApiAdmissionConfiguration:ClusterRkeConfigServicesKubeApiAdmissionConfiguration": {
                "apiVersion": "api_version"
            },
            "rancher2:index/ClusterRkeConfigServicesKubeApiAuditLogConfiguration:ClusterRkeConfigServicesKubeApiAuditLogConfiguration": {
                "maxAge": "max_age",
                "maxBackup": "max_backup",
                "maxSize": "max_size"
            },
            "rancher2:index/ClusterRkeConfigServicesKubeApiSecretsEncryptionConfig:ClusterRkeConfigServicesKubeApiSecretsEncryptionConfig": {
                "customConfig": "custom_config"
            },
            "rancher2:index/ClusterRkeConfigServicesKubeController:ClusterRkeConfigServicesKubeController": {
                "clusterCidr": "cluster_cidr",
                "extraArgs": "extra_args",
                "extraBinds": "extra_binds",
                "extraEnvs": "extra_env",
                "serviceClusterIpRange": "service_cluster_ip_range"
            },
            "rancher2:index/ClusterRkeConfigServicesKubelet:ClusterRkeConfigServicesKubelet": {
                "clusterDnsServer": "cluster_dns_server",
                "clusterDomain": "cluster_domain",
                "extraArgs": "extra_args",
                "extraBinds": "extra_binds",
                "extraEnvs": "extra_env",
                "failSwapOn": "fail_swap_on",
                "generateServingCertificate": "generate_serving_certificate",
                "infraContainerImage": "infra_container_image"
            },
            "rancher2:index/ClusterRkeConfigServicesKubeproxy:ClusterRkeConfigServicesKubeproxy": {
                "extraArgs": "extra_args",
                "extraBinds": "extra_binds",
                "extraEnvs": "extra_env"
            },
            "rancher2:index/ClusterRkeConfigServicesScheduler:ClusterRkeConfigServicesScheduler": {
                "extraArgs": "extra_args",
                "extraBinds": "extra_binds",
                "extraEnvs": "extra_env"
            },
            "rancher2:index/ClusterRkeConfigUpgradeStrategy:ClusterRkeConfigUpgradeStrategy": {
                "drainInput": "drain_input",
                "maxUnavailableControlplane": "max_unavailable_controlplane",
                "maxUnavailableWorker": "max_unavailable_worker"
            },
            "rancher2:index/ClusterRkeConfigUpgradeStrategyDrainInput:ClusterRkeConfigUpgradeStrategyDrainInput": {
                "deleteLocalData": "delete_local_data",
                "gracePeriod": "grace_period",
                "ignoreDaemonSets": "ignore_daemon_sets"
            },
            "rancher2:index/ClusterSyncNode:ClusterSyncNode": {
                "clusterId": "cluster_id",
                "externalIpAddress": "external_ip_address",
                "ipAddress": "ip_address",
                "nodePoolId": "node_pool_id",
                "nodeTemplateId": "node_template_id",
                "providerId": "provider_id",
                "requestedHostname": "requested_hostname",
                "sshUser": "ssh_user",
                "systemInfo": "system_info"
            },
            "rancher2:index/ClusterTemplateMember:ClusterTemplateMember": {
                "accessType": "access_type",
                "groupPrincipalId": "group_principal_id",
                "userPrincipalId": "user_principal_id"
            },
            "rancher2:index/ClusterTemplateTemplateRevision:ClusterTemplateTemplateRevision": {
                "clusterConfig": "cluster_config",
                "clusterTemplateId": "cluster_template_id"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfig:ClusterTemplateTemplateRevisionClusterConfig": {
                "clusterAuthEndpoint": "cluster_auth_endpoint",
                "defaultClusterRoleForProjectMembers": "default_cluster_role_for_project_members",
                "defaultPodSecurityAdmissionConfigurationTemplateName": "default_pod_security_admission_configuration_template_name",
                "defaultPodSecurityPolicyTemplateId": "default_pod_security_policy_template_id",
                "desiredAgentImage": "desired_agent_image",
                "desiredAuthImage": "desired_auth_image",
                "dockerRootDir": "docker_root_dir",
                "enableClusterAlerting": "enable_cluster_alerting",
                "enableClusterMonitoring": "enable_cluster_monitoring",
                "enableNetworkPolicy": "enable_network_policy",
                "rkeConfig": "rke_config",
                "windowsPreferedCluster": "windows_prefered_cluster"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigClusterAuthEndpoint:ClusterTemplateTemplateRevisionClusterConfigClusterAuthEndpoint": {
                "caCerts": "ca_certs"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfig:ClusterTemplateTemplateRevisionClusterConfigRkeConfig": {
                "addonJobTimeout": "addon_job_timeout",
                "addonsIncludes": "addons_include",
                "bastionHost": "bastion_host",
                "cloudProvider": "cloud_provider",
                "enableCriDockerd": "enable_cri_dockerd",
                "ignoreDockerVersion": "ignore_docker_version",
                "kubernetesVersion": "kubernetes_version",
                "prefixPath": "prefix_path",
                "privateRegistries": "private_registries",
                "sshAgentAuth": "ssh_agent_auth",
                "sshCertPath": "ssh_cert_path",
                "sshKeyPath": "ssh_key_path",
                "upgradeStrategy": "upgrade_strategy",
                "winPrefixPath": "win_prefix_path"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigBastionHost:ClusterTemplateTemplateRevisionClusterConfigRkeConfigBastionHost": {
                "sshAgentAuth": "ssh_agent_auth",
                "sshKey": "ssh_key",
                "sshKeyPath": "ssh_key_path"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProvider:ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProvider": {
                "awsCloudProvider": "aws_cloud_provider",
                "azureCloudProvider": "azure_cloud_provider",
                "customCloudProvider": "custom_cloud_provider",
                "openstackCloudProvider": "openstack_cloud_provider",
                "vsphereCloudProvider": "vsphere_cloud_provider"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderAwsCloudProvider:ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderAwsCloudProvider": {
                "serviceOverrides": "service_override"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderAwsCloudProviderGlobal:ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderAwsCloudProviderGlobal": {
                "disableSecurityGroupIngress": "disable_security_group_ingress",
                "disableStrictZoneCheck": "disable_strict_zone_check",
                "elbSecurityGroup": "elb_security_group",
                "kubernetesClusterId": "kubernetes_cluster_id",
                "kubernetesClusterTag": "kubernetes_cluster_tag",
                "roleArn": "role_arn",
                "routeTableId": "route_table_id",
                "subnetId": "subnet_id"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderAwsCloudProviderServiceOverride:ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderAwsCloudProviderServiceOverride": {
                "signingMethod": "signing_method",
                "signingName": "signing_name",
                "signingRegion": "signing_region"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderAzureCloudProvider:ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderAzureCloudProvider": {
                "aadClientCertPassword": "aad_client_cert_password",
                "aadClientCertPath": "aad_client_cert_path",
                "aadClientId": "aad_client_id",
                "aadClientSecret": "aad_client_secret",
                "cloudProviderBackoff": "cloud_provider_backoff",
                "cloudProviderBackoffDuration": "cloud_provider_backoff_duration",
                "cloudProviderBackoffExponent": "cloud_provider_backoff_exponent",
                "cloudProviderBackoffJitter": "cloud_provider_backoff_jitter",
                "cloudProviderBackoffRetries": "cloud_provider_backoff_retries",
                "cloudProviderRateLimit": "cloud_provider_rate_limit",
                "cloudProviderRateLimitBucket": "cloud_provider_rate_limit_bucket",
                "cloudProviderRateLimitQps": "cloud_provider_rate_limit_qps",
                "loadBalancerSku": "load_balancer_sku",
                "maximumLoadBalancerRuleCount": "maximum_load_balancer_rule_count",
                "primaryAvailabilitySetName": "primary_availability_set_name",
                "primaryScaleSetName": "primary_scale_set_name",
                "resourceGroup": "resource_group",
                "routeTableName": "route_table_name",
                "securityGroupName": "security_group_name",
                "subnetName": "subnet_name",
                "subscriptionId": "subscription_id",
                "tenantId": "tenant_id",
                "useInstanceMetadata": "use_instance_metadata",
                "useManagedIdentityExtension": "use_managed_identity_extension",
                "vmType": "vm_type",
                "vnetName": "vnet_name",
                "vnetResourceGroup": "vnet_resource_group"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderOpenstackCloudProvider:ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderOpenstackCloudProvider": {
                "blockStorage": "block_storage",
                "loadBalancer": "load_balancer"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderOpenstackCloudProviderBlockStorage:ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderOpenstackCloudProviderBlockStorage": {
                "bsVersion": "bs_version",
                "ignoreVolumeAz": "ignore_volume_az",
                "trustDevicePath": "trust_device_path"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderOpenstackCloudProviderGlobal:ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderOpenstackCloudProviderGlobal": {
                "authUrl": "auth_url",
                "caFile": "ca_file",
                "domainId": "domain_id",
                "domainName": "domain_name",
                "tenantId": "tenant_id",
                "tenantName": "tenant_name",
                "trustId": "trust_id"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderOpenstackCloudProviderLoadBalancer:ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderOpenstackCloudProviderLoadBalancer": {
                "createMonitor": "create_monitor",
                "floatingNetworkId": "floating_network_id",
                "lbMethod": "lb_method",
                "lbProvider": "lb_provider",
                "lbVersion": "lb_version",
                "manageSecurityGroups": "manage_security_groups",
                "monitorDelay": "monitor_delay",
                "monitorMaxRetries": "monitor_max_retries",
                "monitorTimeout": "monitor_timeout",
                "subnetId": "subnet_id",
                "useOctavia": "use_octavia"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderOpenstackCloudProviderMetadata:ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderOpenstackCloudProviderMetadata": {
                "requestTimeout": "request_timeout",
                "searchOrder": "search_order"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderOpenstackCloudProviderRoute:ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderOpenstackCloudProviderRoute": {
                "routerId": "router_id"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProvider:ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProvider": {
                "virtualCenters": "virtual_center"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProviderDisk:ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProviderDisk": {
                "scsiControllerType": "scsi_controller_type"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProviderGlobal:ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProviderGlobal": {
                "gracefulShutdownTimeout": "graceful_shutdown_timeout",
                "insecureFlag": "insecure_flag",
                "soapRoundtripCount": "soap_roundtrip_count"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProviderNetwork:ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProviderNetwork": {
                "publicNetwork": "public_network"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProviderVirtualCenter:ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProviderVirtualCenter": {
                "soapRoundtripCount": "soap_roundtrip_count"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProviderWorkspace:ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProviderWorkspace": {
                "defaultDatastore": "default_datastore",
                "resourcepoolPath": "resourcepool_path"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigDns:ClusterTemplateTemplateRevisionClusterConfigRkeConfigDns": {
                "linearAutoscalerParams": "linear_autoscaler_params",
                "nodeSelector": "node_selector",
                "reverseCidrs": "reverse_cidrs",
                "updateStrategy": "update_strategy",
                "upstreamNameservers": "upstream_nameservers"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigDnsLinearAutoscalerParams:ClusterTemplateTemplateRevisionClusterConfigRkeConfigDnsLinearAutoscalerParams": {
                "coresPerReplica": "cores_per_replica",
                "nodesPerReplica": "nodes_per_replica",
                "preventSinglePointFailure": "prevent_single_point_failure"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigDnsNodelocal:ClusterTemplateTemplateRevisionClusterConfigRkeConfigDnsNodelocal": {
                "ipAddress": "ip_address",
                "nodeSelector": "node_selector"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigDnsUpdateStrategy:ClusterTemplateTemplateRevisionClusterConfigRkeConfigDnsUpdateStrategy": {
                "rollingUpdate": "rolling_update"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigDnsUpdateStrategyRollingUpdate:ClusterTemplateTemplateRevisionClusterConfigRkeConfigDnsUpdateStrategyRollingUpdate": {
                "maxSurge": "max_surge",
                "maxUnavailable": "max_unavailable"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigIngress:ClusterTemplateTemplateRevisionClusterConfigRkeConfigIngress": {
                "defaultBackend": "default_backend",
                "dnsPolicy": "dns_policy",
                "extraArgs": "extra_args",
                "httpPort": "http_port",
                "httpsPort": "https_port",
                "networkMode": "network_mode",
                "nodeSelector": "node_selector",
                "updateStrategy": "update_strategy"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigIngressUpdateStrategy:ClusterTemplateTemplateRevisionClusterConfigRkeConfigIngressUpdateStrategy": {
                "rollingUpdate": "rolling_update"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigIngressUpdateStrategyRollingUpdate:ClusterTemplateTemplateRevisionClusterConfigRkeConfigIngressUpdateStrategyRollingUpdate": {
                "maxUnavailable": "max_unavailable"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigMonitoring:ClusterTemplateTemplateRevisionClusterConfigRkeConfigMonitoring": {
                "nodeSelector": "node_selector",
                "updateStrategy": "update_strategy"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigMonitoringUpdateStrategy:ClusterTemplateTemplateRevisionClusterConfigRkeConfigMonitoringUpdateStrategy": {
                "rollingUpdate": "rolling_update"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigMonitoringUpdateStrategyRollingUpdate:ClusterTemplateTemplateRevisionClusterConfigRkeConfigMonitoringUpdateStrategyRollingUpdate": {
                "maxSurge": "max_surge",
                "maxUnavailable": "max_unavailable"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigNetwork:ClusterTemplateTemplateRevisionClusterConfigRkeConfigNetwork": {
                "aciNetworkProvider": "aci_network_provider",
                "calicoNetworkProvider": "calico_network_provider",
                "canalNetworkProvider": "canal_network_provider",
                "flannelNetworkProvider": "flannel_network_provider",
                "weaveNetworkProvider": "weave_network_provider"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigNetworkAciNetworkProvider:ClusterTemplateTemplateRevisionClusterConfigRkeConfigNetworkAciNetworkProvider": {
                "apicHosts": "apic_hosts",
                "apicRefreshTickerAdjust": "apic_refresh_ticker_adjust",
                "apicRefreshTime": "apic_refresh_time",
                "apicSubscriptionDelay": "apic_subscription_delay",
                "apicUserCrt": "apic_user_crt",
                "apicUserKey": "apic_user_key",
                "apicUserName": "apic_user_name",
                "controllerLogLevel": "controller_log_level",
                "disablePeriodicSnatGlobalInfoSync": "disable_periodic_snat_global_info_sync",
                "disableWaitForNetwork": "disable_wait_for_network",
                "dropLogEnable": "drop_log_enable",
                "durationWaitForNetwork": "duration_wait_for_network",
                "enableEndpointSlice": "enable_endpoint_slice",
                "encapType": "encap_type",
                "epRegistry": "ep_registry",
                "externDynamic": "extern_dynamic",
                "externStatic": "extern_static",
                "gbpPodSubnet": "gbp_pod_subnet",
                "hostAgentLogLevel": "host_agent_log_level",
                "imagePullPolicy": "image_pull_policy",
                "imagePullSecret": "image_pull_secret",
                "infraVlan": "infra_vlan",
                "installIstio": "install_istio",
                "istioProfile": "istio_profile",
                "kafkaBrokers": "kafka_brokers",
                "kafkaClientCrt": "kafka_client_crt",
                "kafkaClientKey": "kafka_client_key",
                "kubeApiVlan": "kube_api_vlan",
                "l3outExternalNetworks": "l3out_external_networks",
                "maxNodesSvcGraph": "max_nodes_svc_graph",
                "mcastRangeEnd": "mcast_range_end",
                "mcastRangeStart": "mcast_range_start",
                "mtuHeadRoom": "mtu_head_room",
                "multusDisable": "multus_disable",
                "noPriorityClass": "no_priority_class",
                "nodePodIfEnable": "node_pod_if_enable",
                "nodeSubnet": "node_subnet",
                "nodeSvcSubnet": "node_svc_subnet",
                "opflexClientSsl": "opflex_client_ssl",
                "opflexDeviceDeleteTimeout": "opflex_device_delete_timeout",
                "opflexLogLevel": "opflex_log_level",
                "opflexMode": "opflex_mode",
                "opflexServerPort": "opflex_server_port",
                "overlayVrfName": "overlay_vrf_name",
                "ovsMemoryLimit": "ovs_memory_limit",
                "pbrTrackingNonSnat": "pbr_tracking_non_snat",
                "podSubnetChunkSize": "pod_subnet_chunk_size",
                "runGbpContainer": "run_gbp_container",
                "runOpflexServerContainer": "run_opflex_server_container",
                "serviceMonitorInterval": "service_monitor_interval",
                "serviceVlan": "service_vlan",
                "snatContractScope": "snat_contract_scope",
                "snatNamespace": "snat_namespace",
                "snatPortRangeEnd": "snat_port_range_end",
                "snatPortRangeStart": "snat_port_range_start",
                "snatPortsPerNode": "snat_ports_per_node",
                "sriovEnable": "sriov_enable",
                "subnetDomainName": "subnet_domain_name",
                "systemId": "system_id",
                "useAciAnywhereCrd": "use_aci_anywhere_crd",
                "useAciCniPriorityClass": "use_aci_cni_priority_class",
                "useClusterRole": "use_cluster_role",
                "useHostNetnsVolume": "use_host_netns_volume",
                "useOpflexServerVolume": "use_opflex_server_volume",
                "usePrivilegedContainer": "use_privileged_container",
                "vmmController": "vmm_controller",
                "vmmDomain": "vmm_domain",
                "vrfName": "vrf_name",
                "vrfTenant": "vrf_tenant"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigNetworkCalicoNetworkProvider:ClusterTemplateTemplateRevisionClusterConfigRkeConfigNetworkCalicoNetworkProvider": {
                "cloudProvider": "cloud_provider"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigNode:ClusterTemplateTemplateRevisionClusterConfigRkeConfigNode": {
                "dockerSocket": "docker_socket",
                "hostnameOverride": "hostname_override",
                "internalAddress": "internal_address",
                "nodeId": "node_id",
                "roles": "role",
                "sshAgentAuth": "ssh_agent_auth",
                "sshKey": "ssh_key",
                "sshKeyPath": "ssh_key_path"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigPrivateRegistry:ClusterTemplateTemplateRevisionClusterConfigRkeConfigPrivateRegistry": {
                "ecrCredentialPlugin": "ecr_credential_plugin",
                "isDefault": "is_default"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigPrivateRegistryEcrCredentialPlugin:ClusterTemplateTemplateRevisionClusterConfigRkeConfigPrivateRegistryEcrCredentialPlugin": {
                "awsAccessKeyId": "aws_access_key_id",
                "awsSecretAccessKey": "aws_secret_access_key",
                "awsSessionToken": "aws_session_token"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigServices:ClusterTemplateTemplateRevisionClusterConfigRkeConfigServices": {
                "kubeApi": "kube_api",
                "kubeController": "kube_controller"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesEtcd:ClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesEtcd": {
                "backupConfig": "backup_config",
                "caCert": "ca_cert",
                "externalUrls": "external_urls",
                "extraArgs": "extra_args",
                "extraBinds": "extra_binds",
                "extraEnvs": "extra_env"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesEtcdBackupConfig:ClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesEtcdBackupConfig": {
                "intervalHours": "interval_hours",
                "s3BackupConfig": "s3_backup_config",
                "safeTimestamp": "safe_timestamp"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesEtcdBackupConfigS3BackupConfig:ClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesEtcdBackupConfigS3BackupConfig": {
                "accessKey": "access_key",
                "bucketName": "bucket_name",
                "customCa": "custom_ca",
                "secretKey": "secret_key"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesKubeApi:ClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesKubeApi": {
                "admissionConfiguration": "admission_configuration",
                "alwaysPullImages": "always_pull_images",
                "auditLog": "audit_log",
                "eventRateLimit": "event_rate_limit",
                "extraArgs": "extra_args",
                "extraBinds": "extra_binds",
                "extraEnvs": "extra_env",
                "podSecurityPolicy": "pod_security_policy",
                "secretsEncryptionConfig": "secrets_encryption_config",
                "serviceClusterIpRange": "service_cluster_ip_range",
                "serviceNodePortRange": "service_node_port_range"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesKubeApiAdmissionConfiguration:ClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesKubeApiAdmissionConfiguration": {
                "apiVersion": "api_version"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesKubeApiAuditLogConfiguration:ClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesKubeApiAuditLogConfiguration": {
                "maxAge": "max_age",
                "maxBackup": "max_backup",
                "maxSize": "max_size"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesKubeApiSecretsEncryptionConfig:ClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesKubeApiSecretsEncryptionConfig": {
                "customConfig": "custom_config"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesKubeController:ClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesKubeController": {
                "clusterCidr": "cluster_cidr",
                "extraArgs": "extra_args",
                "extraBinds": "extra_binds",
                "extraEnvs": "extra_env",
                "serviceClusterIpRange": "service_cluster_ip_range"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesKubelet:ClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesKubelet": {
                "clusterDnsServer": "cluster_dns_server",
                "clusterDomain": "cluster_domain",
                "extraArgs": "extra_args",
                "extraBinds": "extra_binds",
                "extraEnvs": "extra_env",
                "failSwapOn": "fail_swap_on",
                "generateServingCertificate": "generate_serving_certificate",
                "infraContainerImage": "infra_container_image"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesKubeproxy:ClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesKubeproxy": {
                "extraArgs": "extra_args",
                "extraBinds": "extra_binds",
                "extraEnvs": "extra_env"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesScheduler:ClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesScheduler": {
                "extraArgs": "extra_args",
                "extraBinds": "extra_binds",
                "extraEnvs": "extra_env"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigUpgradeStrategy:ClusterTemplateTemplateRevisionClusterConfigRkeConfigUpgradeStrategy": {
                "drainInput": "drain_input",
                "maxUnavailableControlplane": "max_unavailable_controlplane",
                "maxUnavailableWorker": "max_unavailable_worker"
            },
            "rancher2:index/ClusterTemplateTemplateRevisionClusterConfigRkeConfigUpgradeStrategyDrainInput:ClusterTemplateTemplateRevisionClusterConfigRkeConfigUpgradeStrategyDrainInput": {
                "deleteLocalData": "delete_local_data",
                "gracePeriod": "grace_period",
                "ignoreDaemonSets": "ignore_daemon_sets"
            },
            "rancher2:index/ClusterV2ClusterAgentDeploymentCustomization:ClusterV2ClusterAgentDeploymentCustomization": {
                "appendTolerations": "append_tolerations",
                "overrideAffinity": "override_affinity",
                "overrideResourceRequirements": "override_resource_requirements"
            },
            "rancher2:index/ClusterV2ClusterAgentDeploymentCustomizationOverrideResourceRequirement:ClusterV2ClusterAgentDeploymentCustomizationOverrideResourceRequirement": {
                "cpuLimit": "cpu_limit",
                "cpuRequest": "cpu_request",
                "memoryLimit": "memory_limit",
                "memoryRequest": "memory_request"
            },
            "rancher2:index/ClusterV2ClusterRegistrationToken:ClusterV2ClusterRegistrationToken": {
                "clusterId": "cluster_id",
                "insecureCommand": "insecure_command",
                "insecureNodeCommand": "insecure_node_command",
                "insecureWindowsNodeCommand": "insecure_windows_node_command",
                "manifestUrl": "manifest_url",
                "nodeCommand": "node_command",
                "windowsNodeCommand": "windows_node_command"
            },
            "rancher2:index/ClusterV2FleetAgentDeploymentCustomization:ClusterV2FleetAgentDeploymentCustomization": {
                "appendTolerations": "append_tolerations",
                "overrideAffinity": "override_affinity",
                "overrideResourceRequirements": "override_resource_requirements"
            },
            "rancher2:index/ClusterV2FleetAgentDeploymentCustomizationOverrideResourceRequirement:ClusterV2FleetAgentDeploymentCustomizationOverrideResourceRequirement": {
                "cpuLimit": "cpu_limit",
                "cpuRequest": "cpu_request",
                "memoryLimit": "memory_limit",
                "memoryRequest": "memory_request"
            },
            "rancher2:index/ClusterV2LocalAuthEndpoint:ClusterV2LocalAuthEndpoint": {
                "caCerts": "ca_certs"
            },
            "rancher2:index/ClusterV2RkeConfig:ClusterV2RkeConfig": {
                "additionalManifest": "additional_manifest",
                "chartValues": "chart_values",
                "etcdSnapshotCreate": "etcd_snapshot_create",
                "etcdSnapshotRestore": "etcd_snapshot_restore",
                "localAuthEndpoint": "local_auth_endpoint",
                "machineGlobalConfig": "machine_global_config",
                "machinePoolDefaults": "machine_pool_defaults",
                "machinePools": "machine_pools",
                "machineSelectorConfigs": "machine_selector_config",
                "machineSelectorFiles": "machine_selector_files",
                "rotateCertificates": "rotate_certificates",
                "upgradeStrategy": "upgrade_strategy"
            },
            "rancher2:index/ClusterV2RkeConfigEtcd:ClusterV2RkeConfigEtcd": {
                "disableSnapshots": "disable_snapshots",
                "s3Config": "s3_config",
                "snapshotRetention": "snapshot_retention",
                "snapshotScheduleCron": "snapshot_schedule_cron"
            },
            "rancher2:index/ClusterV2RkeConfigEtcdS3Config:ClusterV2RkeConfigEtcdS3Config": {
                "cloudCredentialName": "cloud_credential_name",
                "endpointCa": "endpoint_ca",
                "skipSslVerify": "skip_ssl_verify"
            },
            "rancher2:index/ClusterV2RkeConfigEtcdSnapshotRestore:ClusterV2RkeConfigEtcdSnapshotRestore": {
                "restoreRkeConfig": "restore_rke_config"
            },
            "rancher2:index/ClusterV2RkeConfigLocalAuthEndpoint:ClusterV2RkeConfigLocalAuthEndpoint": {
                "caCerts": "ca_certs"
            },
            "rancher2:index/ClusterV2RkeConfigMachinePool:ClusterV2RkeConfigMachinePool": {
                "cloudCredentialSecretName": "cloud_credential_secret_name",
                "controlPlaneRole": "control_plane_role",
                "drainBeforeDelete": "drain_before_delete",
                "etcdRole": "etcd_role",
                "hostnameLengthLimit": "hostname_length_limit",
                "machineConfig": "machine_config",
                "machineLabels": "machine_labels",
                "maxUnhealthy": "max_unhealthy",
                "nodeDrainTimeout": "node_drain_timeout",
                "nodeStartupTimeoutSeconds": "node_startup_timeout_seconds",
                "rollingUpdate": "rolling_update",
                "unhealthyNodeTimeoutSeconds": "unhealthy_node_timeout_seconds",
                "unhealthyRange": "unhealthy_range",
                "workerRole": "worker_role"
            },
            "rancher2:index/ClusterV2RkeConfigMachinePoolDefault:ClusterV2RkeConfigMachinePoolDefault": {
                "hostnameLengthLimit": "hostname_length_limit"
            },
            "rancher2:index/ClusterV2RkeConfigMachinePoolMachineConfig:ClusterV2RkeConfigMachinePoolMachineConfig": {
                "apiVersion": "api_version"
            },
            "rancher2:index/ClusterV2RkeConfigMachinePoolRollingUpdate:ClusterV2RkeConfigMachinePoolRollingUpdate": {
                "maxSurge": "max_surge",
                "maxUnavailable": "max_unavailable"
            },
            "rancher2:index/ClusterV2RkeConfigMachineSelectorConfig:ClusterV2RkeConfigMachineSelectorConfig": {
                "machineLabelSelector": "machine_label_selector"
            },
            "rancher2:index/ClusterV2RkeConfigMachineSelectorConfigMachineLabelSelector:ClusterV2RkeConfigMachineSelectorConfigMachineLabelSelector": {
                "matchExpressions": "match_expressions",
                "matchLabels": "match_labels"
            },
            "rancher2:index/ClusterV2RkeConfigMachineSelectorFile:ClusterV2RkeConfigMachineSelectorFile": {
                "fileSources": "file_sources",
                "machineLabelSelector": "machine_label_selector"
            },
            "rancher2:index/ClusterV2RkeConfigMachineSelectorFileFileSourceConfigmap:ClusterV2RkeConfigMachineSelectorFileFileSourceConfigmap": {
                "defaultPermissions": "default_permissions"
            },
            "rancher2:index/ClusterV2RkeConfigMachineSelectorFileFileSourceSecret:ClusterV2RkeConfigMachineSelectorFileFileSourceSecret": {
                "defaultPermissions": "default_permissions"
            },
            "rancher2:index/ClusterV2RkeConfigMachineSelectorFileMachineLabelSelector:ClusterV2RkeConfigMachineSelectorFileMachineLabelSelector": {
                "matchExpressions": "match_expressions",
                "matchLabels": "match_labels"
            },
            "rancher2:index/ClusterV2RkeConfigRegistriesConfig:ClusterV2RkeConfigRegistriesConfig": {
                "authConfigSecretName": "auth_config_secret_name",
                "caBundle": "ca_bundle",
                "tlsSecretName": "tls_secret_name"
            },
            "rancher2:index/ClusterV2RkeConfigUpgradeStrategy:ClusterV2RkeConfigUpgradeStrategy": {
                "controlPlaneConcurrency": "control_plane_concurrency",
                "controlPlaneDrainOptions": "control_plane_drain_options",
                "workerConcurrency": "worker_concurrency",
                "workerDrainOptions": "worker_drain_options"
            },
            "rancher2:index/ClusterV2RkeConfigUpgradeStrategyControlPlaneDrainOptions:ClusterV2RkeConfigUpgradeStrategyControlPlaneDrainOptions": {
                "deleteEmptyDirData": "delete_empty_dir_data",
                "disableEviction": "disable_eviction",
                "gracePeriod": "grace_period",
                "ignoreDaemonSets": "ignore_daemon_sets",
                "ignoreErrors": "ignore_errors",
                "skipWaitForDeleteTimeoutSeconds": "skip_wait_for_delete_timeout_seconds"
            },
            "rancher2:index/ClusterV2RkeConfigUpgradeStrategyWorkerDrainOptions:ClusterV2RkeConfigUpgradeStrategyWorkerDrainOptions": {
                "deleteEmptyDirData": "delete_empty_dir_data",
                "disableEviction": "disable_eviction",
                "gracePeriod": "grace_period",
                "ignoreDaemonSets": "ignore_daemon_sets",
                "ignoreErrors": "ignore_errors",
                "skipWaitForDeleteTimeoutSeconds": "skip_wait_for_delete_timeout_seconds"
            },
            "rancher2:index/EtcdBackupBackupConfig:EtcdBackupBackupConfig": {
                "intervalHours": "interval_hours",
                "s3BackupConfig": "s3_backup_config",
                "safeTimestamp": "safe_timestamp"
            },
            "rancher2:index/EtcdBackupBackupConfigS3BackupConfig:EtcdBackupBackupConfigS3BackupConfig": {
                "accessKey": "access_key",
                "bucketName": "bucket_name",
                "customCa": "custom_ca",
                "secretKey": "secret_key"
            },
            "rancher2:index/GlobalDnsProviderAlidnsConfig:GlobalDnsProviderAlidnsConfig": {
                "accessKey": "access_key",
                "secretKey": "secret_key"
            },
            "rancher2:index/GlobalDnsProviderCloudflareConfig:GlobalDnsProviderCloudflareConfig": {
                "apiEmail": "api_email",
                "apiKey": "api_key",
                "proxySetting": "proxy_setting"
            },
            "rancher2:index/GlobalDnsProviderRoute53Config:GlobalDnsProviderRoute53Config": {
                "accessKey": "access_key",
                "credentialsPath": "credentials_path",
                "roleArn": "role_arn",
                "secretKey": "secret_key",
                "zoneType": "zone_type"
            },
            "rancher2:index/GlobalRoleRule:GlobalRoleRule": {
                "apiGroups": "api_groups",
                "nonResourceUrls": "non_resource_urls",
                "resourceNames": "resource_names"
            },
            "rancher2:index/MachineConfigV2Amazonec2Config:MachineConfigV2Amazonec2Config": {
                "accessKey": "access_key",
                "blockDurationMinutes": "block_duration_minutes",
                "deviceName": "device_name",
                "encryptEbsVolume": "encrypt_ebs_volume",
                "httpEndpoint": "http_endpoint",
                "httpTokens": "http_tokens",
                "iamInstanceProfile": "iam_instance_profile",
                "insecureTransport": "insecure_transport",
                "instanceType": "instance_type",
                "kmsKey": "kms_key",
                "openPorts": "open_port",
                "privateAddressOnly": "private_address_only",
                "requestSpotInstance": "request_spot_instance",
                "rootSize": "root_size",
                "secretKey": "secret_key",
                "securityGroupReadonly": "security_group_readonly",
                "securityGroups": "security_group",
                "sessionToken": "session_token",
                "spotPrice": "spot_price",
                "sshKeyContents": "ssh_key_contents",
                "sshUser": "ssh_user",
                "subnetId": "subnet_id",
                "useEbsOptimizedInstance": "use_ebs_optimized_instance",
                "usePrivateAddress": "use_private_address",
                "volumeType": "volume_type",
                "vpcId": "vpc_id"
            },
            "rancher2:index/MachineConfigV2AzureConfig:MachineConfigV2AzureConfig": {
                "acceleratedNetworking": "accelerated_networking",
                "availabilitySet": "availability_set",
                "availabilityZone": "availability_zone",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "customData": "custom_data",
                "diskSize": "disk_size",
                "dockerPort": "docker_port",
                "faultDomainCount": "fault_domain_count",
                "managedDisks": "managed_disks",
                "noPublicIp": "no_public_ip",
                "openPorts": "open_port",
                "privateAddressOnly": "private_address_only",
                "privateIpAddress": "private_ip_address",
                "resourceGroup": "resource_group",
                "sshUser": "ssh_user",
                "staticPublicIp": "static_public_ip",
                "storageType": "storage_type",
                "subnetPrefix": "subnet_prefix",
                "subscriptionId": "subscription_id",
                "tenantId": "tenant_id",
                "updateDomainCount": "update_domain_count",
                "usePrivateIp": "use_private_ip",
                "usePublicIpStandardSku": "use_public_ip_standard_sku"
            },
            "rancher2:index/MachineConfigV2DigitaloceanConfig:MachineConfigV2DigitaloceanConfig": {
                "accessToken": "access_token",
                "privateNetworking": "private_networking",
                "sshKeyContents": "ssh_key_contents",
                "sshKeyFingerprint": "ssh_key_fingerprint",
                "sshPort": "ssh_port",
                "sshUser": "ssh_user"
            },
            "rancher2:index/MachineConfigV2HarvesterConfig:MachineConfigV2HarvesterConfig": {
                "cpuCount": "cpu_count",
                "diskBus": "disk_bus",
                "diskInfo": "disk_info",
                "diskSize": "disk_size",
                "imageName": "image_name",
                "memorySize": "memory_size",
                "networkData": "network_data",
                "networkInfo": "network_info",
                "networkModel": "network_model",
                "networkName": "network_name",
                "sshPassword": "ssh_password",
                "sshUser": "ssh_user",
                "userData": "user_data",
                "vmAffinity": "vm_affinity",
                "vmNamespace": "vm_namespace"
            },
            "rancher2:index/MachineConfigV2LinodeConfig:MachineConfigV2LinodeConfig": {
                "authorizedUsers": "authorized_users",
                "createPrivateIp": "create_private_ip",
                "dockerPort": "docker_port",
                "instanceType": "instance_type",
                "rootPass": "root_pass",
                "sshPort": "ssh_port",
                "sshUser": "ssh_user",
                "stackscriptData": "stackscript_data",
                "swapSize": "swap_size",
                "uaPrefix": "ua_prefix"
            },
            "rancher2:index/MachineConfigV2OpenstackConfig:MachineConfigV2OpenstackConfig": {
                "activeTimeout": "active_timeout",
                "applicationCredentialId": "application_credential_id",
                "applicationCredentialName": "application_credential_name",
                "applicationCredentialSecret": "application_credential_secret",
                "authUrl": "auth_url",
                "availabilityZone": "availability_zone",
                "bootFromVolume": "boot_from_volume",
                "configDrive": "config_drive",
                "domainId": "domain_id",
                "domainName": "domain_name",
                "endpointType": "endpoint_type",
                "flavorId": "flavor_id",
                "flavorName": "flavor_name",
                "floatingIpPool": "floating_ip_pool",
                "imageId": "image_id",
                "imageName": "image_name",
                "ipVersion": "ip_version",
                "keypairName": "keypair_name",
                "netId": "net_id",
                "netName": "net_name",
                "novaNetwork": "nova_network",
                "privateKeyFile": "private_key_file",
                "secGroups": "sec_groups",
                "sshPort": "ssh_port",
                "sshUser": "ssh_user",
                "tenantDomainId": "tenant_domain_id",
                "tenantDomainName": "tenant_domain_name",
                "tenantId": "tenant_id",
                "tenantName": "tenant_name",
                "userDataFile": "user_data_file",
                "userDomainId": "user_domain_id",
                "userDomainName": "user_domain_name",
                "volumeDevicePath": "volume_device_path",
                "volumeId": "volume_id",
                "volumeName": "volume_name",
                "volumeSize": "volume_size",
                "volumeType": "volume_type"
            },
            "rancher2:index/MachineConfigV2VsphereConfig:MachineConfigV2VsphereConfig": {
                "boot2dockerUrl": "boot2docker_url",
                "cfgparams": "cfgparam",
                "cloneFrom": "clone_from",
                "cloudConfig": "cloud_config",
                "contentLibrary": "content_library",
                "cpuCount": "cpu_count",
                "creationType": "creation_type",
                "customAttributes": "custom_attributes",
                "datastoreCluster": "datastore_cluster",
                "diskSize": "disk_size",
                "gracefulShutdownTimeout": "graceful_shutdown_timeout",
                "memorySize": "memory_size",
                "networks": "network",
                "sshPassword": "ssh_password",
                "sshPort": "ssh_port",
                "sshUser": "ssh_user",
                "sshUserGroup": "ssh_user_group",
                "vappIpAllocationPolicy": "vapp_ip_allocation_policy",
                "vappIpProtocol": "vapp_ip_protocol",
                "vappProperties": "vapp_property",
                "vappTransport": "vapp_transport",
                "vcenterPort": "vcenter_port"
            },
            "rancher2:index/MultiClusterAppAnswer:MultiClusterAppAnswer": {
                "clusterId": "cluster_id",
                "projectId": "project_id"
            },
            "rancher2:index/MultiClusterAppMember:MultiClusterAppMember": {
                "accessType": "access_type",
                "groupPrincipalId": "group_principal_id",
                "userPrincipalId": "user_principal_id"
            },
            "rancher2:index/MultiClusterAppTarget:MultiClusterAppTarget": {
                "appId": "app_id",
                "healthState": "health_state",
                "projectId": "project_id"
            },
            "rancher2:index/MultiClusterAppUpgradeStrategy:MultiClusterAppUpgradeStrategy": {
                "rollingUpdate": "rolling_update"
            },
            "rancher2:index/MultiClusterAppUpgradeStrategyRollingUpdate:MultiClusterAppUpgradeStrategyRollingUpdate": {
                "batchSize": "batch_size"
            },
            "rancher2:index/NamespaceContainerResourceLimit:NamespaceContainerResourceLimit": {
                "limitsCpu": "limits_cpu",
                "limitsMemory": "limits_memory",
                "requestsCpu": "requests_cpu",
                "requestsMemory": "requests_memory"
            },
            "rancher2:index/NamespaceResourceQuotaLimit:NamespaceResourceQuotaLimit": {
                "configMaps": "config_maps",
                "limitsCpu": "limits_cpu",
                "limitsMemory": "limits_memory",
                "persistentVolumeClaims": "persistent_volume_claims",
                "replicationControllers": "replication_controllers",
                "requestsCpu": "requests_cpu",
                "requestsMemory": "requests_memory",
                "requestsStorage": "requests_storage",
                "servicesLoadBalancers": "services_load_balancers",
                "servicesNodePorts": "services_node_ports"
            },
            "rancher2:index/NodePoolNodeTaint:NodePoolNodeTaint": {
                "timeAdded": "time_added"
            },
            "rancher2:index/NodeTemplateAmazonec2Config:NodeTemplateAmazonec2Config": {
                "accessKey": "access_key",
                "blockDurationMinutes": "block_duration_minutes",
                "deviceName": "device_name",
                "encryptEbsVolume": "encrypt_ebs_volume",
                "httpEndpoint": "http_endpoint",
                "httpTokens": "http_tokens",
                "iamInstanceProfile": "iam_instance_profile",
                "insecureTransport": "insecure_transport",
                "instanceType": "instance_type",
                "kmsKey": "kms_key",
                "openPorts": "open_port",
                "privateAddressOnly": "private_address_only",
                "requestSpotInstance": "request_spot_instance",
                "rootSize": "root_size",
                "secretKey": "secret_key",
                "securityGroupReadonly": "security_group_readonly",
                "securityGroups": "security_group",
                "sessionToken": "session_token",
                "spotPrice": "spot_price",
                "sshKeypath": "ssh_keypath",
                "sshUser": "ssh_user",
                "subnetId": "subnet_id",
                "useEbsOptimizedInstance": "use_ebs_optimized_instance",
                "usePrivateAddress": "use_private_address",
                "volumeType": "volume_type",
                "vpcId": "vpc_id"
            },
            "rancher2:index/NodeTemplateAzureConfig:NodeTemplateAzureConfig": {
                "acceleratedNetworking": "accelerated_networking",
                "availabilitySet": "availability_set",
                "availabilityZone": "availability_zone",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "customData": "custom_data",
                "diskSize": "disk_size",
                "dockerPort": "docker_port",
                "faultDomainCount": "fault_domain_count",
                "managedDisks": "managed_disks",
                "noPublicIp": "no_public_ip",
                "openPorts": "open_port",
                "privateIpAddress": "private_ip_address",
                "resourceGroup": "resource_group",
                "sshUser": "ssh_user",
                "staticPublicIp": "static_public_ip",
                "storageType": "storage_type",
                "subnetPrefix": "subnet_prefix",
                "subscriptionId": "subscription_id",
                "updateDomainCount": "update_domain_count",
                "usePrivateIp": "use_private_ip",
                "usePublicIpStandardSku": "use_public_ip_standard_sku"
            },
            "rancher2:index/NodeTemplateDigitaloceanConfig:NodeTemplateDigitaloceanConfig": {
                "accessToken": "access_token",
                "privateNetworking": "private_networking",
                "sshKeyFingerprint": "ssh_key_fingerprint",
                "sshKeyPath": "ssh_key_path",
                "sshPort": "ssh_port",
                "sshUser": "ssh_user"
            },
            "rancher2:index/NodeTemplateHarvesterConfig:NodeTemplateHarvesterConfig": {
                "cpuCount": "cpu_count",
                "diskBus": "disk_bus",
                "diskInfo": "disk_info",
                "diskSize": "disk_size",
                "imageName": "image_name",
                "memorySize": "memory_size",
                "networkData": "network_data",
                "networkInfo": "network_info",
                "networkModel": "network_model",
                "networkName": "network_name",
                "sshPassword": "ssh_password",
                "sshUser": "ssh_user",
                "userData": "user_data",
                "vmAffinity": "vm_affinity",
                "vmNamespace": "vm_namespace"
            },
            "rancher2:index/NodeTemplateHetznerConfig:NodeTemplateHetznerConfig": {
                "apiToken": "api_token",
                "serverLabels": "server_labels",
                "serverLocation": "server_location",
                "serverType": "server_type",
                "usePrivateNetwork": "use_private_network"
            },
            "rancher2:index/NodeTemplateLinodeConfig:NodeTemplateLinodeConfig": {
                "authorizedUsers": "authorized_users",
                "createPrivateIp": "create_private_ip",
                "dockerPort": "docker_port",
                "instanceType": "instance_type",
                "rootPass": "root_pass",
                "sshPort": "ssh_port",
                "sshUser": "ssh_user",
                "stackscriptData": "stackscript_data",
                "swapSize": "swap_size",
                "uaPrefix": "ua_prefix"
            },
            "rancher2:index/NodeTemplateNodeTaint:NodeTemplateNodeTaint": {
                "timeAdded": "time_added"
            },
            "rancher2:index/NodeTemplateOpennebulaConfig:NodeTemplateOpennebulaConfig": {
                "b2dSize": "b2d_size",
                "devPrefix": "dev_prefix",
                "disableVnc": "disable_vnc",
                "diskResize": "disk_resize",
                "imageId": "image_id",
                "imageName": "image_name",
                "imageOwner": "image_owner",
                "networkId": "network_id",
                "networkName": "network_name",
                "networkOwner": "network_owner",
                "sshUser": "ssh_user",
                "templateId": "template_id",
                "templateName": "template_name",
                "xmlRpcUrl": "xml_rpc_url"
            },
            "rancher2:index/NodeTemplateOpenstackConfig:NodeTemplateOpenstackConfig": {
                "activeTimeout": "active_timeout",
                "applicationCredentialId": "application_credential_id",
                "applicationCredentialName": "application_credential_name",
                "applicationCredentialSecret": "application_credential_secret",
                "authUrl": "auth_url",
                "availabilityZone": "availability_zone",
                "bootFromVolume": "boot_from_volume",
                "configDrive": "config_drive",
                "domainId": "domain_id",
                "domainName": "domain_name",
                "endpointType": "endpoint_type",
                "flavorId": "flavor_id",
                "flavorName": "flavor_name",
                "floatingIpPool": "floating_ip_pool",
                "imageId": "image_id",
                "imageName": "image_name",
                "ipVersion": "ip_version",
                "keypairName": "keypair_name",
                "netId": "net_id",
                "netName": "net_name",
                "novaNetwork": "nova_network",
                "privateKeyFile": "private_key_file",
                "secGroups": "sec_groups",
                "sshPort": "ssh_port",
                "sshUser": "ssh_user",
                "tenantId": "tenant_id",
                "tenantName": "tenant_name",
                "userDataFile": "user_data_file",
                "volumeDevicePath": "volume_device_path",
                "volumeId": "volume_id",
                "volumeName": "volume_name",
                "volumeSize": "volume_size",
                "volumeType": "volume_type"
            },
            "rancher2:index/NodeTemplateOutscaleConfig:NodeTemplateOutscaleConfig": {
                "accessKey": "access_key",
                "extraTagsAlls": "extra_tags_all",
                "extraTagsInstances": "extra_tags_instances",
                "instanceType": "instance_type",
                "rootDiskIops": "root_disk_iops",
                "rootDiskSize": "root_disk_size",
                "rootDiskType": "root_disk_type",
                "secretKey": "secret_key",
                "securityGroupIds": "security_group_ids",
                "sourceOmi": "source_omi"
            },
            "rancher2:index/NodeTemplateVsphereConfig:NodeTemplateVsphereConfig": {
                "boot2dockerUrl": "boot2docker_url",
                "cfgparams": "cfgparam",
                "cloneFrom": "clone_from",
                "cloudConfig": "cloud_config",
                "contentLibrary": "content_library",
                "cpuCount": "cpu_count",
                "creationType": "creation_type",
                "customAttributes": "custom_attributes",
                "datastoreCluster": "datastore_cluster",
                "diskSize": "disk_size",
                "gracefulShutdownTimeout": "graceful_shutdown_timeout",
                "memorySize": "memory_size",
                "networks": "network",
                "sshPassword": "ssh_password",
                "sshPort": "ssh_port",
                "sshUser": "ssh_user",
                "sshUserGroup": "ssh_user_group",
                "vappIpAllocationPolicy": "vapp_ip_allocation_policy",
                "vappIpProtocol": "vapp_ip_protocol",
                "vappProperties": "vapp_property",
                "vappTransport": "vapp_transport",
                "vcenterPort": "vcenter_port"
            },
            "rancher2:index/NotifierDingtalkConfig:NotifierDingtalkConfig": {
                "proxyUrl": "proxy_url"
            },
            "rancher2:index/NotifierMsteamsConfig:NotifierMsteamsConfig": {
                "proxyUrl": "proxy_url"
            },
            "rancher2:index/NotifierPagerdutyConfig:NotifierPagerdutyConfig": {
                "proxyUrl": "proxy_url",
                "serviceKey": "service_key"
            },
            "rancher2:index/NotifierSlackConfig:NotifierSlackConfig": {
                "defaultRecipient": "default_recipient",
                "proxyUrl": "proxy_url"
            },
            "rancher2:index/NotifierSmtpConfig:NotifierSmtpConfig": {
                "defaultRecipient": "default_recipient"
            },
            "rancher2:index/NotifierWebhookConfig:NotifierWebhookConfig": {
                "proxyUrl": "proxy_url"
            },
            "rancher2:index/NotifierWechatConfig:NotifierWechatConfig": {
                "defaultRecipient": "default_recipient",
                "proxyUrl": "proxy_url",
                "recipientType": "recipient_type"
            },
            "rancher2:index/PodSecurityPolicyTemplateAllowedHostPath:PodSecurityPolicyTemplateAllowedHostPath": {
                "pathPrefix": "path_prefix",
                "readOnly": "read_only"
            },
            "rancher2:index/PodSecurityPolicyTemplateFsGroup:PodSecurityPolicyTemplateFsGroup": {
                "ranges": "range"
            },
            "rancher2:index/PodSecurityPolicyTemplateRunAsGroup:PodSecurityPolicyTemplateRunAsGroup": {
                "ranges": "range"
            },
            "rancher2:index/PodSecurityPolicyTemplateRunAsUser:PodSecurityPolicyTemplateRunAsUser": {
                "ranges": "range"
            },
            "rancher2:index/PodSecurityPolicyTemplateRuntimeClass:PodSecurityPolicyTemplateRuntimeClass": {
                "allowedRuntimeClassNames": "allowed_runtime_class_names",
                "defaultRuntimeClassName": "default_runtime_class_name"
            },
            "rancher2:index/PodSecurityPolicyTemplateSeLinux:PodSecurityPolicyTemplateSeLinux": {
                "seLinuxOption": "se_linux_option"
            },
            "rancher2:index/PodSecurityPolicyTemplateSupplementalGroup:PodSecurityPolicyTemplateSupplementalGroup": {
                "ranges": "range"
            },
            "rancher2:index/ProjectAlertGroupRecipient:ProjectAlertGroupRecipient": {
                "defaultRecipient": "default_recipient",
                "notifierId": "notifier_id",
                "notifierType": "notifier_type"
            },
            "rancher2:index/ProjectAlertRuleMetricRule:ProjectAlertRuleMetricRule": {
                "thresholdValue": "threshold_value"
            },
            "rancher2:index/ProjectAlertRulePodRule:ProjectAlertRulePodRule": {
                "podId": "pod_id",
                "restartIntervalSeconds": "restart_interval_seconds",
                "restartTimes": "restart_times"
            },
            "rancher2:index/ProjectAlertRuleWorkloadRule:ProjectAlertRuleWorkloadRule": {
                "availablePercentage": "available_percentage",
                "workloadId": "workload_id"
            },
            "rancher2:index/ProjectContainerResourceLimit:ProjectContainerResourceLimit": {
                "limitsCpu": "limits_cpu",
                "limitsMemory": "limits_memory",
                "requestsCpu": "requests_cpu",
                "requestsMemory": "requests_memory"
            },
            "rancher2:index/ProjectResourceQuota:ProjectResourceQuota": {
                "namespaceDefaultLimit": "namespace_default_limit",
                "projectLimit": "project_limit"
            },
            "rancher2:index/ProjectResourceQuotaNamespaceDefaultLimit:ProjectResourceQuotaNamespaceDefaultLimit": {
                "configMaps": "config_maps",
                "limitsCpu": "limits_cpu",
                "limitsMemory": "limits_memory",
                "persistentVolumeClaims": "persistent_volume_claims",
                "replicationControllers": "replication_controllers",
                "requestsCpu": "requests_cpu",
                "requestsMemory": "requests_memory",
                "requestsStorage": "requests_storage",
                "servicesLoadBalancers": "services_load_balancers",
                "servicesNodePorts": "services_node_ports"
            },
            "rancher2:index/ProjectResourceQuotaProjectLimit:ProjectResourceQuotaProjectLimit": {
                "configMaps": "config_maps",
                "limitsCpu": "limits_cpu",
                "limitsMemory": "limits_memory",
                "persistentVolumeClaims": "persistent_volume_claims",
                "replicationControllers": "replication_controllers",
                "requestsCpu": "requests_cpu",
                "requestsMemory": "requests_memory",
                "requestsStorage": "requests_storage",
                "servicesLoadBalancers": "services_load_balancers",
                "servicesNodePorts": "services_node_ports"
            },
            "rancher2:index/RoleTemplateRule:RoleTemplateRule": {
                "apiGroups": "api_groups",
                "nonResourceUrls": "non_resource_urls",
                "resourceNames": "resource_names"
            },
            "rancher2:index/app:App": {
                "catalogName": "catalog_name",
                "externalId": "external_id",
                "forceUpgrade": "force_upgrade",
                "projectId": "project_id",
                "revisionId": "revision_id",
                "targetNamespace": "target_namespace",
                "templateName": "template_name",
                "templateVersion": "template_version",
                "valuesYaml": "values_yaml"
            },
            "rancher2:index/appV2:AppV2": {
                "chartName": "chart_name",
                "chartVersion": "chart_version",
                "cleanupOnFail": "cleanup_on_fail",
                "clusterId": "cluster_id",
                "clusterName": "cluster_name",
                "deploymentValues": "deployment_values",
                "disableHooks": "disable_hooks",
                "disableOpenApiValidation": "disable_open_api_validation",
                "forceUpgrade": "force_upgrade",
                "projectId": "project_id",
                "repoName": "repo_name",
                "systemDefaultRegistry": "system_default_registry"
            },
            "rancher2:index/authConfigActiveDirectory:AuthConfigActiveDirectory": {
                "accessMode": "access_mode",
                "allowedPrincipalIds": "allowed_principal_ids",
                "connectionTimeout": "connection_timeout",
                "defaultLoginDomain": "default_login_domain",
                "groupDnAttribute": "group_dn_attribute",
                "groupMemberMappingAttribute": "group_member_mapping_attribute",
                "groupMemberUserAttribute": "group_member_user_attribute",
                "groupNameAttribute": "group_name_attribute",
                "groupObjectClass": "group_object_class",
                "groupSearchAttribute": "group_search_attribute",
                "groupSearchBase": "group_search_base",
                "groupSearchFilter": "group_search_filter",
                "nestedGroupMembershipEnabled": "nested_group_membership_enabled",
                "serviceAccountPassword": "service_account_password",
                "serviceAccountUsername": "service_account_username",
                "startTls": "start_tls",
                "testPassword": "test_password",
                "testUsername": "test_username",
                "userDisabledBitMask": "user_disabled_bit_mask",
                "userEnabledAttribute": "user_enabled_attribute",
                "userLoginAttribute": "user_login_attribute",
                "userNameAttribute": "user_name_attribute",
                "userObjectClass": "user_object_class",
                "userSearchAttribute": "user_search_attribute",
                "userSearchBase": "user_search_base",
                "userSearchFilter": "user_search_filter"
            },
            "rancher2:index/authConfigAdfs:AuthConfigAdfs": {
                "accessMode": "access_mode",
                "allowedPrincipalIds": "allowed_principal_ids",
                "displayNameField": "display_name_field",
                "groupsField": "groups_field",
                "idpMetadataContent": "idp_metadata_content",
                "rancherApiHost": "rancher_api_host",
                "spCert": "sp_cert",
                "spKey": "sp_key",
                "uidField": "uid_field",
                "userNameField": "user_name_field"
            },
            "rancher2:index/authConfigAzureAd:AuthConfigAzureAd": {
                "accessMode": "access_mode",
                "allowedPrincipalIds": "allowed_principal_ids",
                "applicationId": "application_id",
                "applicationSecret": "application_secret",
                "authEndpoint": "auth_endpoint",
                "graphEndpoint": "graph_endpoint",
                "rancherUrl": "rancher_url",
                "tenantId": "tenant_id",
                "tokenEndpoint": "token_endpoint"
            },
            "rancher2:index/authConfigFreeIpa:AuthConfigFreeIpa": {
                "accessMode": "access_mode",
                "allowedPrincipalIds": "allowed_principal_ids",
                "connectionTimeout": "connection_timeout",
                "groupDnAttribute": "group_dn_attribute",
                "groupMemberMappingAttribute": "group_member_mapping_attribute",
                "groupMemberUserAttribute": "group_member_user_attribute",
                "groupNameAttribute": "group_name_attribute",
                "groupObjectClass": "group_object_class",
                "groupSearchAttribute": "group_search_attribute",
                "groupSearchBase": "group_search_base",
                "groupSearchFilter": "group_search_filter",
                "nestedGroupMembershipEnabled": "nested_group_membership_enabled",
                "serviceAccountDistinguishedName": "service_account_distinguished_name",
                "serviceAccountPassword": "service_account_password",
                "startTls": "start_tls",
                "testPassword": "test_password",
                "testUsername": "test_username",
                "userDisabledBitMask": "user_disabled_bit_mask",
                "userEnabledAttribute": "user_enabled_attribute",
                "userLoginAttribute": "user_login_attribute",
                "userMemberAttribute": "user_member_attribute",
                "userNameAttribute": "user_name_attribute",
                "userObjectClass": "user_object_class",
                "userSearchAttribute": "user_search_attribute",
                "userSearchBase": "user_search_base",
                "userSearchFilter": "user_search_filter"
            },
            "rancher2:index/authConfigGithub:AuthConfigGithub": {
                "accessMode": "access_mode",
                "allowedPrincipalIds": "allowed_principal_ids",
                "clientId": "client_id",
                "clientSecret": "client_secret"
            },
            "rancher2:index/authConfigKeycloak:AuthConfigKeycloak": {
                "accessMode": "access_mode",
                "allowedPrincipalIds": "allowed_principal_ids",
                "displayNameField": "display_name_field",
                "entityId": "entity_id",
                "groupsField": "groups_field",
                "idpMetadataContent": "idp_metadata_content",
                "rancherApiHost": "rancher_api_host",
                "spCert": "sp_cert",
                "spKey": "sp_key",
                "uidField": "uid_field",
                "userNameField": "user_name_field"
            },
            "rancher2:index/authConfigOkta:AuthConfigOkta": {
                "accessMode": "access_mode",
                "allowedPrincipalIds": "allowed_principal_ids",
                "displayNameField": "display_name_field",
                "groupsField": "groups_field",
                "idpMetadataContent": "idp_metadata_content",
                "rancherApiHost": "rancher_api_host",
                "spCert": "sp_cert",
                "spKey": "sp_key",
                "uidField": "uid_field",
                "userNameField": "user_name_field"
            },
            "rancher2:index/authConfigOpenLdap:AuthConfigOpenLdap": {
                "accessMode": "access_mode",
                "allowedPrincipalIds": "allowed_principal_ids",
                "connectionTimeout": "connection_timeout",
                "groupDnAttribute": "group_dn_attribute",
                "groupMemberMappingAttribute": "group_member_mapping_attribute",
                "groupMemberUserAttribute": "group_member_user_attribute",
                "groupNameAttribute": "group_name_attribute",
                "groupObjectClass": "group_object_class",
                "groupSearchAttribute": "group_search_attribute",
                "groupSearchBase": "group_search_base",
                "groupSearchFilter": "group_search_filter",
                "nestedGroupMembershipEnabled": "nested_group_membership_enabled",
                "serviceAccountDistinguishedName": "service_account_distinguished_name",
                "serviceAccountPassword": "service_account_password",
                "startTls": "start_tls",
                "testPassword": "test_password",
                "testUsername": "test_username",
                "userDisabledBitMask": "user_disabled_bit_mask",
                "userEnabledAttribute": "user_enabled_attribute",
                "userLoginAttribute": "user_login_attribute",
                "userMemberAttribute": "user_member_attribute",
                "userNameAttribute": "user_name_attribute",
                "userObjectClass": "user_object_class",
                "userSearchAttribute": "user_search_attribute",
                "userSearchBase": "user_search_base",
                "userSearchFilter": "user_search_filter"
            },
            "rancher2:index/authConfigPing:AuthConfigPing": {
                "accessMode": "access_mode",
                "allowedPrincipalIds": "allowed_principal_ids",
                "displayNameField": "display_name_field",
                "entityIdField": "entity_id_field",
                "groupsField": "groups_field",
                "idpMetadataContent": "idp_metadata_content",
                "rancherApiHost": "rancher_api_host",
                "spCert": "sp_cert",
                "spKey": "sp_key",
                "uidField": "uid_field",
                "userNameField": "user_name_field"
            },
            "rancher2:index/bootstrap:Bootstrap": {
                "currentPassword": "current_password",
                "initialPassword": "initial_password",
                "tempToken": "temp_token",
                "tempTokenId": "temp_token_id",
                "tokenId": "token_id",
                "tokenTtl": "token_ttl",
                "tokenUpdate": "token_update",
                "uiDefaultLanding": "ui_default_landing"
            },
            "rancher2:index/catalog:Catalog": {
                "clusterId": "cluster_id",
                "projectId": "project_id"
            },
            "rancher2:index/catalogV2:CatalogV2": {
                "caBundle": "ca_bundle",
                "clusterId": "cluster_id",
                "gitBranch": "git_branch",
                "gitRepo": "git_repo",
                "resourceVersion": "resource_version",
                "secretName": "secret_name",
                "secretNamespace": "secret_namespace",
                "serviceAccount": "service_account",
                "serviceAccountNamespace": "service_account_namespace"
            },
            "rancher2:index/certificate:Certificate": {
                "namespaceId": "namespace_id",
                "projectId": "project_id"
            },
            "rancher2:index/cloudCredential:CloudCredential": {
                "amazonec2CredentialConfig": "amazonec2_credential_config",
                "azureCredentialConfig": "azure_credential_config",
                "digitaloceanCredentialConfig": "digitalocean_credential_config",
                "googleCredentialConfig": "google_credential_config",
                "harvesterCredentialConfig": "harvester_credential_config",
                "linodeCredentialConfig": "linode_credential_config",
                "openstackCredentialConfig": "openstack_credential_config",
                "s3CredentialConfig": "s3_credential_config",
                "vsphereCredentialConfig": "vsphere_credential_config"
            },
            "rancher2:index/cluster:Cluster": {
                "agentEnvVars": "agent_env_vars",
                "aksConfig": "aks_config",
                "aksConfigV2": "aks_config_v2",
                "caCert": "ca_cert",
                "clusterAgentDeploymentCustomizations": "cluster_agent_deployment_customization",
                "clusterAuthEndpoint": "cluster_auth_endpoint",
                "clusterMonitoringInput": "cluster_monitoring_input",
                "clusterRegistrationToken": "cluster_registration_token",
                "clusterTemplateAnswers": "cluster_template_answers",
                "clusterTemplateId": "cluster_template_id",
                "clusterTemplateQuestions": "cluster_template_questions",
                "clusterTemplateRevisionId": "cluster_template_revision_id",
                "defaultPodSecurityAdmissionConfigurationTemplateName": "default_pod_security_admission_configuration_template_name",
                "defaultPodSecurityPolicyTemplateId": "default_pod_security_policy_template_id",
                "defaultProjectId": "default_project_id",
                "desiredAgentImage": "desired_agent_image",
                "desiredAuthImage": "desired_auth_image",
                "dockerRootDir": "docker_root_dir",
                "eksConfig": "eks_config",
                "eksConfigV2": "eks_config_v2",
                "enableClusterAlerting": "enable_cluster_alerting",
                "enableClusterIstio": "enable_cluster_istio",
                "enableClusterMonitoring": "enable_cluster_monitoring",
                "enableNetworkPolicy": "enable_network_policy",
                "fleetAgentDeploymentCustomizations": "fleet_agent_deployment_customization",
                "fleetWorkspaceName": "fleet_workspace_name",
                "gkeConfig": "gke_config",
                "gkeConfigV2": "gke_config_v2",
                "istioEnabled": "istio_enabled",
                "k3sConfig": "k3s_config",
                "kubeConfig": "kube_config",
                "okeConfig": "oke_config",
                "rke2Config": "rke2_config",
                "rkeConfig": "rke_config",
                "systemProjectId": "system_project_id",
                "windowsPreferedCluster": "windows_prefered_cluster"
            },
            "rancher2:index/clusterAlertGroup:ClusterAlertGroup": {
                "clusterId": "cluster_id",
                "groupIntervalSeconds": "group_interval_seconds",
                "groupWaitSeconds": "group_wait_seconds",
                "repeatIntervalSeconds": "repeat_interval_seconds"
            },
            "rancher2:index/clusterAlertRule:ClusterAlertRule": {
                "clusterId": "cluster_id",
                "eventRule": "event_rule",
                "groupId": "group_id",
                "groupIntervalSeconds": "group_interval_seconds",
                "groupWaitSeconds": "group_wait_seconds",
                "metricRule": "metric_rule",
                "nodeRule": "node_rule",
                "repeatIntervalSeconds": "repeat_interval_seconds",
                "systemServiceRule": "system_service_rule"
            },
            "rancher2:index/clusterDriver:ClusterDriver": {
                "actualUrl": "actual_url",
                "uiUrl": "ui_url",
                "whitelistDomains": "whitelist_domains"
            },
            "rancher2:index/clusterRoleTemplateBinding:ClusterRoleTemplateBinding": {
                "clusterId": "cluster_id",
                "groupId": "group_id",
                "groupPrincipalId": "group_principal_id",
                "roleTemplateId": "role_template_id",
                "userId": "user_id",
                "userPrincipalId": "user_principal_id"
            },
            "rancher2:index/clusterSync:ClusterSync": {
                "clusterId": "cluster_id",
                "defaultProjectId": "default_project_id",
                "kubeConfig": "kube_config",
                "nodePoolIds": "node_pool_ids",
                "stateConfirm": "state_confirm",
                "systemProjectId": "system_project_id",
                "waitAlerting": "wait_alerting",
                "waitCatalogs": "wait_catalogs",
                "waitMonitoring": "wait_monitoring"
            },
            "rancher2:index/clusterTemplate:ClusterTemplate": {
                "defaultRevisionId": "default_revision_id",
                "templateRevisions": "template_revisions"
            },
            "rancher2:index/clusterV2:ClusterV2": {
                "agentEnvVars": "agent_env_vars",
                "cloudCredentialSecretName": "cloud_credential_secret_name",
                "clusterAgentDeploymentCustomizations": "cluster_agent_deployment_customization",
                "clusterRegistrationToken": "cluster_registration_token",
                "clusterV1Id": "cluster_v1_id",
                "defaultClusterRoleForProjectMembers": "default_cluster_role_for_project_members",
                "defaultPodSecurityAdmissionConfigurationTemplateName": "default_pod_security_admission_configuration_template_name",
                "defaultPodSecurityPolicyTemplateName": "default_pod_security_policy_template_name",
                "enableNetworkPolicy": "enable_network_policy",
                "fleetAgentDeploymentCustomizations": "fleet_agent_deployment_customization",
                "fleetNamespace": "fleet_namespace",
                "kubeConfig": "kube_config",
                "kubernetesVersion": "kubernetes_version",
                "localAuthEndpoint": "local_auth_endpoint",
                "resourceVersion": "resource_version",
                "rkeConfig": "rke_config"
            },
            "rancher2:index/configMapV2:ConfigMapV2": {
                "clusterId": "cluster_id",
                "resourceVersion": "resource_version"
            },
            "rancher2:index/customUserToken:CustomUserToken": {
                "accessKey": "access_key",
                "clusterId": "cluster_id",
                "secretKey": "secret_key",
                "tempToken": "temp_token",
                "tempTokenId": "temp_token_id",
                "userId": "user_id"
            },
            "rancher2:index/etcdBackup:EtcdBackup": {
                "backupConfig": "backup_config",
                "clusterId": "cluster_id",
                "namespaceId": "namespace_id"
            },
            "rancher2:index/getApp:getApp": {
                "catalogName": "catalog_name",
                "externalId": "external_id",
                "projectId": "project_id",
                "revisionId": "revision_id",
                "targetNamespace": "target_namespace",
                "templateName": "template_name",
                "templateVersion": "template_version",
                "valuesYaml": "values_yaml"
            },
            "rancher2:index/getCatalog:getCatalog": {
                "clusterId": "cluster_id",
                "projectId": "project_id"
            },
            "rancher2:index/getCatalogV2:getCatalogV2": {
                "caBundle": "ca_bundle",
                "clusterId": "cluster_id",
                "gitBranch": "git_branch",
                "gitRepo": "git_repo",
                "resourceVersion": "resource_version",
                "secretName": "secret_name",
                "secretNamespace": "secret_namespace",
                "serviceAccount": "service_account",
                "serviceAccountNamespace": "service_account_namespace"
            },
            "rancher2:index/getCertificate:getCertificate": {
                "namespaceId": "namespace_id",
                "projectId": "project_id"
            },
            "rancher2:index/getCluster:getCluster": {
                "agentEnvVars": "agent_env_vars",
                "aksConfig": "aks_config",
                "aksConfigV2": "aks_config_v2",
                "caCert": "ca_cert",
                "clusterAuthEndpoint": "cluster_auth_endpoint",
                "clusterMonitoringInput": "cluster_monitoring_input",
                "clusterRegistrationToken": "cluster_registration_token",
                "clusterTemplateAnswers": "cluster_template_answers",
                "clusterTemplateId": "cluster_template_id",
                "clusterTemplateQuestions": "cluster_template_questions",
                "clusterTemplateRevisionId": "cluster_template_revision_id",
                "defaultPodSecurityAdmissionConfigurationTemplateName": "default_pod_security_admission_configuration_template_name",
                "defaultPodSecurityPolicyTemplateId": "default_pod_security_policy_template_id",
                "defaultProjectId": "default_project_id",
                "eksConfig": "eks_config",
                "eksConfigV2": "eks_config_v2",
                "enableClusterAlerting": "enable_cluster_alerting",
                "enableClusterMonitoring": "enable_cluster_monitoring",
                "enableNetworkPolicy": "enable_network_policy",
                "fleetWorkspaceName": "fleet_workspace_name",
                "gkeConfig": "gke_config",
                "gkeConfigV2": "gke_config_v2",
                "k3sConfig": "k3s_config",
                "kubeConfig": "kube_config",
                "okeConfig": "oke_config",
                "rke2Config": "rke2_config",
                "rkeConfig": "rke_config",
                "systemProjectId": "system_project_id"
            },
            "rancher2:index/getClusterAksConfig:getClusterAksConfig": {
                "aadServerAppSecret": "aad_server_app_secret",
                "aadTenantId": "aad_tenant_id",
                "addClientAppId": "add_client_app_id",
                "addServerAppId": "add_server_app_id",
                "adminUsername": "admin_username",
                "agentDnsPrefix": "agent_dns_prefix",
                "agentOsDiskSize": "agent_os_disk_size",
                "agentPoolName": "agent_pool_name",
                "agentStorageProfile": "agent_storage_profile",
                "agentVmSize": "agent_vm_size",
                "authBaseUrl": "auth_base_url",
                "baseUrl": "base_url",
                "clientId": "client_id",
                "clientSecret": "client_secret",
                "dnsServiceIp": "dns_service_ip",
                "dockerBridgeCidr": "docker_bridge_cidr",
                "enableHttpApplicationRouting": "enable_http_application_routing",
                "enableMonitoring": "enable_monitoring",
                "kubernetesVersion": "kubernetes_version",
                "loadBalancerSku": "load_balancer_sku",
                "logAnalyticsWorkspace": "log_analytics_workspace",
                "logAnalyticsWorkspaceResourceGroup": "log_analytics_workspace_resource_group",
                "masterDnsPrefix": "master_dns_prefix",
                "maxPods": "max_pods",
                "networkPlugin": "network_plugin",
                "networkPolicy": "network_policy",
                "podCidr": "pod_cidr",
                "resourceGroup": "resource_group",
                "serviceCidr": "service_cidr",
                "sshPublicKeyContents": "ssh_public_key_contents",
                "subscriptionId": "subscription_id",
                "tenantId": "tenant_id",
                "virtualNetwork": "virtual_network",
                "virtualNetworkResourceGroup": "virtual_network_resource_group"
            },
            "rancher2:index/getClusterAksConfigV2:getClusterAksConfigV2": {
                "authBaseUrl": "auth_base_url",
                "authorizedIpRanges": "authorized_ip_ranges",
                "baseUrl": "base_url",
                "cloudCredentialId": "cloud_credential_id",
                "dnsPrefix": "dns_prefix",
                "httpApplicationRouting": "http_application_routing",
                "kubernetesVersion": "kubernetes_version",
                "linuxAdminUsername": "linux_admin_username",
                "linuxSshPublicKey": "linux_ssh_public_key",
                "loadBalancerSku": "load_balancer_sku",
                "logAnalyticsWorkspaceGroup": "log_analytics_workspace_group",
                "logAnalyticsWorkspaceName": "log_analytics_workspace_name",
                "networkDnsServiceIp": "network_dns_service_ip",
                "networkDockerBridgeCidr": "network_docker_bridge_cidr",
                "networkPlugin": "network_plugin",
                "networkPodCidr": "network_pod_cidr",
                "networkPolicy": "network_policy",
                "networkServiceCidr": "network_service_cidr",
                "nodePools": "node_pools",
                "privateCluster": "private_cluster",
                "resourceGroup": "resource_group",
                "resourceLocation": "resource_location",
                "virtualNetwork": "virtual_network",
                "virtualNetworkResourceGroup": "virtual_network_resource_group"
            },
            "rancher2:index/getClusterAksConfigV2NodePool:getClusterAksConfigV2NodePool": {
                "availabilityZones": "availability_zones",
                "enableAutoScaling": "enable_auto_scaling",
                "maxCount": "max_count",
                "maxPods": "max_pods",
                "maxSurge": "max_surge",
                "minCount": "min_count",
                "orchestratorVersion": "orchestrator_version",
                "osDiskSizeGb": "os_disk_size_gb",
                "osDiskType": "os_disk_type",
                "osType": "os_type",
                "vmSize": "vm_size"
            },
            "rancher2:index/getClusterAlertGroup:getClusterAlertGroup": {
                "clusterId": "cluster_id",
                "groupIntervalSeconds": "group_interval_seconds",
                "groupWaitSeconds": "group_wait_seconds",
                "repeatIntervalSeconds": "repeat_interval_seconds"
            },
            "rancher2:index/getClusterAlertGroupRecipient:getClusterAlertGroupRecipient": {
                "defaultRecipient": "default_recipient",
                "notifierId": "notifier_id",
                "notifierType": "notifier_type"
            },
            "rancher2:index/getClusterAlertRule:getClusterAlertRule": {
                "clusterId": "cluster_id",
                "eventRule": "event_rule",
                "groupId": "group_id",
                "groupIntervalSeconds": "group_interval_seconds",
                "groupWaitSeconds": "group_wait_seconds",
                "metricRule": "metric_rule",
                "nodeRule": "node_rule",
                "repeatIntervalSeconds": "repeat_interval_seconds",
                "systemServiceRule": "system_service_rule"
            },
            "rancher2:index/getClusterAlertRuleEventRule:getClusterAlertRuleEventRule": {
                "eventType": "event_type",
                "resourceKind": "resource_kind"
            },
            "rancher2:index/getClusterAlertRuleMetricRule:getClusterAlertRuleMetricRule": {
                "thresholdValue": "threshold_value"
            },
            "rancher2:index/getClusterAlertRuleNodeRule:getClusterAlertRuleNodeRule": {
                "cpuThreshold": "cpu_threshold",
                "memThreshold": "mem_threshold",
                "nodeId": "node_id"
            },
            "rancher2:index/getClusterClusterAuthEndpoint:getClusterClusterAuthEndpoint": {
                "caCerts": "ca_certs"
            },
            "rancher2:index/getClusterClusterRegistrationToken:getClusterClusterRegistrationToken": {
                "clusterId": "cluster_id",
                "insecureCommand": "insecure_command",
                "insecureNodeCommand": "insecure_node_command",
                "insecureWindowsNodeCommand": "insecure_windows_node_command",
                "manifestUrl": "manifest_url",
                "nodeCommand": "node_command",
                "windowsNodeCommand": "windows_node_command"
            },
            "rancher2:index/getClusterClusterTemplateAnswers:getClusterClusterTemplateAnswers": {
                "clusterId": "cluster_id",
                "projectId": "project_id"
            },
            "rancher2:index/getClusterDriver:getClusterDriver": {
                "actualUrl": "actual_url",
                "uiUrl": "ui_url",
                "whitelistDomains": "whitelist_domains"
            },
            "rancher2:index/getClusterEksConfig:getClusterEksConfig": {
                "accessKey": "access_key",
                "associateWorkerNodePublicIp": "associate_worker_node_public_ip",
                "desiredNodes": "desired_nodes",
                "ebsEncryption": "ebs_encryption",
                "instanceType": "instance_type",
                "keyPairName": "key_pair_name",
                "kubernetesVersion": "kubernetes_version",
                "maximumNodes": "maximum_nodes",
                "minimumNodes": "minimum_nodes",
                "nodeVolumeSize": "node_volume_size",
                "secretKey": "secret_key",
                "securityGroups": "security_groups",
                "serviceRole": "service_role",
                "sessionToken": "session_token",
                "userData": "user_data",
                "virtualNetwork": "virtual_network"
            },
            "rancher2:index/getClusterEksConfigV2:getClusterEksConfigV2": {
                "cloudCredentialId": "cloud_credential_id",
                "kmsKey": "kms_key",
                "kubernetesVersion": "kubernetes_version",
                "loggingTypes": "logging_types",
                "nodeGroups": "node_groups",
                "privateAccess": "private_access",
                "publicAccess": "public_access",
                "publicAccessSources": "public_access_sources",
                "secretsEncryption": "secrets_encryption",
                "securityGroups": "security_groups",
                "serviceRole": "service_role"
            },
            "rancher2:index/getClusterEksConfigV2NodeGroup:getClusterEksConfigV2NodeGroup": {
                "desiredSize": "desired_size",
                "diskSize": "disk_size",
                "ec2SshKey": "ec2_ssh_key",
                "imageId": "image_id",
                "instanceType": "instance_type",
                "launchTemplates": "launch_template",
                "maxSize": "max_size",
                "minSize": "min_size",
                "nodeRole": "node_role",
                "requestSpotInstances": "request_spot_instances",
                "resourceTags": "resource_tags",
                "spotInstanceTypes": "spot_instance_types",
                "userData": "user_data"
            },
            "rancher2:index/getClusterGkeConfig:getClusterGkeConfig": {
                "clusterIpv4Cidr": "cluster_ipv4_cidr",
                "diskSizeGb": "disk_size_gb",
                "diskType": "disk_type",
                "enableAlphaFeature": "enable_alpha_feature",
                "enableAutoRepair": "enable_auto_repair",
                "enableAutoUpgrade": "enable_auto_upgrade",
                "enableHorizontalPodAutoscaling": "enable_horizontal_pod_autoscaling",
                "enableHttpLoadBalancing": "enable_http_load_balancing",
                "enableKubernetesDashboard": "enable_kubernetes_dashboard",
                "enableLegacyAbac": "enable_legacy_abac",
                "enableMasterAuthorizedNetwork": "enable_master_authorized_network",
                "enableNetworkPolicyConfig": "enable_network_policy_config",
                "enableNodepoolAutoscaling": "enable_nodepool_autoscaling",
                "enablePrivateEndpoint": "enable_private_endpoint",
                "enablePrivateNodes": "enable_private_nodes",
                "enableStackdriverLogging": "enable_stackdriver_logging",
                "enableStackdriverMonitoring": "enable_stackdriver_monitoring",
                "imageType": "image_type",
                "ipPolicyClusterIpv4CidrBlock": "ip_policy_cluster_ipv4_cidr_block",
                "ipPolicyClusterSecondaryRangeName": "ip_policy_cluster_secondary_range_name",
                "ipPolicyCreateSubnetwork": "ip_policy_create_subnetwork",
                "ipPolicyNodeIpv4CidrBlock": "ip_policy_node_ipv4_cidr_block",
                "ipPolicyServicesIpv4CidrBlock": "ip_policy_services_ipv4_cidr_block",
                "ipPolicyServicesSecondaryRangeName": "ip_policy_services_secondary_range_name",
                "ipPolicySubnetworkName": "ip_policy_subnetwork_name",
                "issueClientCertificate": "issue_client_certificate",
                "kubernetesDashboard": "kubernetes_dashboard",
                "localSsdCount": "local_ssd_count",
                "machineType": "machine_type",
                "maintenanceWindow": "maintenance_window",
                "masterAuthorizedNetworkCidrBlocks": "master_authorized_network_cidr_blocks",
                "masterIpv4CidrBlock": "master_ipv4_cidr_block",
                "masterVersion": "master_version",
                "maxNodeCount": "max_node_count",
                "minNodeCount": "min_node_count",
                "nodeCount": "node_count",
                "nodePool": "node_pool",
                "nodeVersion": "node_version",
                "oauthScopes": "oauth_scopes",
                "projectId": "project_id",
                "resourceLabels": "resource_labels",
                "serviceAccount": "service_account",
                "subNetwork": "sub_network",
                "useIpAliases": "use_ip_aliases"
            },
            "rancher2:index/getClusterGkeConfigV2:getClusterGkeConfigV2": {
                "clusterAddons": "cluster_addons",
                "clusterIpv4CidrBlock": "cluster_ipv4_cidr_block",
                "enableKubernetesAlpha": "enable_kubernetes_alpha",
                "googleCredentialSecret": "google_credential_secret",
                "ipAllocationPolicy": "ip_allocation_policy",
                "kubernetesVersion": "kubernetes_version",
                "loggingService": "logging_service",
                "maintenanceWindow": "maintenance_window",
                "masterAuthorizedNetworksConfig": "master_authorized_networks_config",
                "monitoringService": "monitoring_service",
                "networkPolicyEnabled": "network_policy_enabled",
                "nodePools": "node_pools",
                "privateClusterConfig": "private_cluster_config",
                "projectId": "project_id"
            },
            "rancher2:index/getClusterGkeConfigV2ClusterAddons:getClusterGkeConfigV2ClusterAddons": {
                "horizontalPodAutoscaling": "horizontal_pod_autoscaling",
                "httpLoadBalancing": "http_load_balancing",
                "networkPolicyConfig": "network_policy_config"
            },
            "rancher2:index/getClusterGkeConfigV2IpAllocationPolicy:getClusterGkeConfigV2IpAllocationPolicy": {
                "clusterIpv4CidrBlock": "cluster_ipv4_cidr_block",
                "clusterSecondaryRangeName": "cluster_secondary_range_name",
                "createSubnetwork": "create_subnetwork",
                "nodeIpv4CidrBlock": "node_ipv4_cidr_block",
                "servicesIpv4CidrBlock": "services_ipv4_cidr_block",
                "servicesSecondaryRangeName": "services_secondary_range_name",
                "subnetworkName": "subnetwork_name",
                "useIpAliases": "use_ip_aliases"
            },
            "rancher2:index/getClusterGkeConfigV2MasterAuthorizedNetworksConfig:getClusterGkeConfigV2MasterAuthorizedNetworksConfig": {
                "cidrBlocks": "cidr_blocks"
            },
            "rancher2:index/getClusterGkeConfigV2MasterAuthorizedNetworksConfigCidrBlock:getClusterGkeConfigV2MasterAuthorizedNetworksConfigCidrBlock": {
                "cidrBlock": "cidr_block",
                "displayName": "display_name"
            },
            "rancher2:index/getClusterGkeConfigV2NodePool:getClusterGkeConfigV2NodePool": {
                "initialNodeCount": "initial_node_count",
                "maxPodsConstraint": "max_pods_constraint"
            },
            "rancher2:index/getClusterGkeConfigV2NodePoolAutoscaling:getClusterGkeConfigV2NodePoolAutoscaling": {
                "maxNodeCount": "max_node_count",
                "minNodeCount": "min_node_count"
            },
            "rancher2:index/getClusterGkeConfigV2NodePoolConfig:getClusterGkeConfigV2NodePoolConfig": {
                "diskSizeGb": "disk_size_gb",
                "diskType": "disk_type",
                "imageType": "image_type",
                "localSsdCount": "local_ssd_count",
                "machineType": "machine_type",
                "oauthScopes": "oauth_scopes"
            },
            "rancher2:index/getClusterGkeConfigV2NodePoolManagement:getClusterGkeConfigV2NodePoolManagement": {
                "autoRepair": "auto_repair",
                "autoUpgrade": "auto_upgrade"
            },
            "rancher2:index/getClusterGkeConfigV2PrivateClusterConfig:getClusterGkeConfigV2PrivateClusterConfig": {
                "enablePrivateEndpoint": "enable_private_endpoint",
                "enablePrivateNodes": "enable_private_nodes",
                "masterIpv4CidrBlock": "master_ipv4_cidr_block"
            },
            "rancher2:index/getClusterK3sConfig:getClusterK3sConfig": {
                "upgradeStrategy": "upgrade_strategy"
            },
            "rancher2:index/getClusterK3sConfigUpgradeStrategy:getClusterK3sConfigUpgradeStrategy": {
                "drainServerNodes": "drain_server_nodes",
                "drainWorkerNodes": "drain_worker_nodes",
                "serverConcurrency": "server_concurrency",
                "workerConcurrency": "worker_concurrency"
            },
            "rancher2:index/getClusterOkeConfig:getClusterOkeConfig": {
                "compartmentId": "compartment_id",
                "customBootVolumeSize": "custom_boot_volume_size",
                "enableKubernetesDashboard": "enable_kubernetes_dashboard",
                "enablePrivateControlPlane": "enable_private_control_plane",
                "enablePrivateNodes": "enable_private_nodes",
                "flexOcpus": "flex_ocpus",
                "kmsKeyId": "kms_key_id",
                "kubernetesVersion": "kubernetes_version",
                "limitNodeCount": "limit_node_count",
                "loadBalancerSubnetName1": "load_balancer_subnet_name_1",
                "loadBalancerSubnetName2": "load_balancer_subnet_name_2",
                "nodeImage": "node_image",
                "nodePoolDnsDomainName": "node_pool_dns_domain_name",
                "nodePoolSubnetName": "node_pool_subnet_name",
                "nodePublicKeyContents": "node_public_key_contents",
                "nodeShape": "node_shape",
                "podCidr": "pod_cidr",
                "privateKeyContents": "private_key_contents",
                "privateKeyPassphrase": "private_key_passphrase",
                "quantityOfNodeSubnets": "quantity_of_node_subnets",
                "quantityPerSubnet": "quantity_per_subnet",
                "serviceCidr": "service_cidr",
                "serviceDnsDomainName": "service_dns_domain_name",
                "skipVcnDelete": "skip_vcn_delete",
                "tenancyId": "tenancy_id",
                "userOcid": "user_ocid",
                "vcnCompartmentId": "vcn_compartment_id",
                "vcnName": "vcn_name",
                "workerNodeIngressCidr": "worker_node_ingress_cidr"
            },
            "rancher2:index/getClusterRke2Config:getClusterRke2Config": {
                "upgradeStrategy": "upgrade_strategy"
            },
            "rancher2:index/getClusterRke2ConfigUpgradeStrategy:getClusterRke2ConfigUpgradeStrategy": {
                "drainServerNodes": "drain_server_nodes",
                "drainWorkerNodes": "drain_worker_nodes",
                "serverConcurrency": "server_concurrency",
                "workerConcurrency": "worker_concurrency"
            },
            "rancher2:index/getClusterRkeConfig:getClusterRkeConfig": {
                "addonJobTimeout": "addon_job_timeout",
                "addonsIncludes": "addons_include",
                "bastionHost": "bastion_host",
                "cloudProvider": "cloud_provider",
                "enableCriDockerd": "enable_cri_dockerd",
                "ignoreDockerVersion": "ignore_docker_version",
                "kubernetesVersion": "kubernetes_version",
                "prefixPath": "prefix_path",
                "privateRegistries": "private_registries",
                "sshAgentAuth": "ssh_agent_auth",
                "sshCertPath": "ssh_cert_path",
                "sshKeyPath": "ssh_key_path",
                "upgradeStrategy": "upgrade_strategy",
                "winPrefixPath": "win_prefix_path"
            },
            "rancher2:index/getClusterRkeConfigBastionHost:getClusterRkeConfigBastionHost": {
                "sshAgentAuth": "ssh_agent_auth",
                "sshKey": "ssh_key",
                "sshKeyPath": "ssh_key_path"
            },
            "rancher2:index/getClusterRkeConfigCloudProvider:getClusterRkeConfigCloudProvider": {
                "awsCloudProvider": "aws_cloud_provider",
                "azureCloudProvider": "azure_cloud_provider",
                "customCloudProvider": "custom_cloud_provider",
                "openstackCloudProvider": "openstack_cloud_provider",
                "vsphereCloudProvider": "vsphere_cloud_provider"
            },
            "rancher2:index/getClusterRkeConfigCloudProviderAwsCloudProvider:getClusterRkeConfigCloudProviderAwsCloudProvider": {
                "serviceOverrides": "service_override"
            },
            "rancher2:index/getClusterRkeConfigCloudProviderAwsCloudProviderGlobal:getClusterRkeConfigCloudProviderAwsCloudProviderGlobal": {
                "disableSecurityGroupIngress": "disable_security_group_ingress",
                "disableStrictZoneCheck": "disable_strict_zone_check",
                "elbSecurityGroup": "elb_security_group",
                "kubernetesClusterId": "kubernetes_cluster_id",
                "kubernetesClusterTag": "kubernetes_cluster_tag",
                "roleArn": "role_arn",
                "routeTableId": "route_table_id",
                "subnetId": "subnet_id"
            },
            "rancher2:index/getClusterRkeConfigCloudProviderAwsCloudProviderServiceOverride:getClusterRkeConfigCloudProviderAwsCloudProviderServiceOverride": {
                "signingMethod": "signing_method",
                "signingName": "signing_name",
                "signingRegion": "signing_region"
            },
            "rancher2:index/getClusterRkeConfigCloudProviderAzureCloudProvider:getClusterRkeConfigCloudProviderAzureCloudProvider": {
                "aadClientCertPassword": "aad_client_cert_password",
                "aadClientCertPath": "aad_client_cert_path",
                "aadClientId": "aad_client_id",
                "aadClientSecret": "aad_client_secret",
                "cloudProviderBackoff": "cloud_provider_backoff",
                "cloudProviderBackoffDuration": "cloud_provider_backoff_duration",
                "cloudProviderBackoffExponent": "cloud_provider_backoff_exponent",
                "cloudProviderBackoffJitter": "cloud_provider_backoff_jitter",
                "cloudProviderBackoffRetries": "cloud_provider_backoff_retries",
                "cloudProviderRateLimit": "cloud_provider_rate_limit",
                "cloudProviderRateLimitBucket": "cloud_provider_rate_limit_bucket",
                "cloudProviderRateLimitQps": "cloud_provider_rate_limit_qps",
                "loadBalancerSku": "load_balancer_sku",
                "maximumLoadBalancerRuleCount": "maximum_load_balancer_rule_count",
                "primaryAvailabilitySetName": "primary_availability_set_name",
                "primaryScaleSetName": "primary_scale_set_name",
                "resourceGroup": "resource_group",
                "routeTableName": "route_table_name",
                "securityGroupName": "security_group_name",
                "subnetName": "subnet_name",
                "subscriptionId": "subscription_id",
                "tenantId": "tenant_id",
                "useInstanceMetadata": "use_instance_metadata",
                "useManagedIdentityExtension": "use_managed_identity_extension",
                "vmType": "vm_type",
                "vnetName": "vnet_name",
                "vnetResourceGroup": "vnet_resource_group"
            },
            "rancher2:index/getClusterRkeConfigCloudProviderOpenstackCloudProvider:getClusterRkeConfigCloudProviderOpenstackCloudProvider": {
                "blockStorage": "block_storage",
                "loadBalancer": "load_balancer"
            },
            "rancher2:index/getClusterRkeConfigCloudProviderOpenstackCloudProviderBlockStorage:getClusterRkeConfigCloudProviderOpenstackCloudProviderBlockStorage": {
                "bsVersion": "bs_version",
                "ignoreVolumeAz": "ignore_volume_az",
                "trustDevicePath": "trust_device_path"
            },
            "rancher2:index/getClusterRkeConfigCloudProviderOpenstackCloudProviderGlobal:getClusterRkeConfigCloudProviderOpenstackCloudProviderGlobal": {
                "authUrl": "auth_url",
                "caFile": "ca_file",
                "domainId": "domain_id",
                "domainName": "domain_name",
                "tenantId": "tenant_id",
                "tenantName": "tenant_name",
                "trustId": "trust_id"
            },
            "rancher2:index/getClusterRkeConfigCloudProviderOpenstackCloudProviderLoadBalancer:getClusterRkeConfigCloudProviderOpenstackCloudProviderLoadBalancer": {
                "createMonitor": "create_monitor",
                "floatingNetworkId": "floating_network_id",
                "lbMethod": "lb_method",
                "lbProvider": "lb_provider",
                "lbVersion": "lb_version",
                "manageSecurityGroups": "manage_security_groups",
                "monitorDelay": "monitor_delay",
                "monitorMaxRetries": "monitor_max_retries",
                "monitorTimeout": "monitor_timeout",
                "subnetId": "subnet_id",
                "useOctavia": "use_octavia"
            },
            "rancher2:index/getClusterRkeConfigCloudProviderOpenstackCloudProviderMetadata:getClusterRkeConfigCloudProviderOpenstackCloudProviderMetadata": {
                "requestTimeout": "request_timeout",
                "searchOrder": "search_order"
            },
            "rancher2:index/getClusterRkeConfigCloudProviderOpenstackCloudProviderRoute:getClusterRkeConfigCloudProviderOpenstackCloudProviderRoute": {
                "routerId": "router_id"
            },
            "rancher2:index/getClusterRkeConfigCloudProviderVsphereCloudProvider:getClusterRkeConfigCloudProviderVsphereCloudProvider": {
                "virtualCenters": "virtual_center"
            },
            "rancher2:index/getClusterRkeConfigCloudProviderVsphereCloudProviderDisk:getClusterRkeConfigCloudProviderVsphereCloudProviderDisk": {
                "scsiControllerType": "scsi_controller_type"
            },
            "rancher2:index/getClusterRkeConfigCloudProviderVsphereCloudProviderGlobal:getClusterRkeConfigCloudProviderVsphereCloudProviderGlobal": {
                "gracefulShutdownTimeout": "graceful_shutdown_timeout",
                "insecureFlag": "insecure_flag",
                "soapRoundtripCount": "soap_roundtrip_count"
            },
            "rancher2:index/getClusterRkeConfigCloudProviderVsphereCloudProviderNetwork:getClusterRkeConfigCloudProviderVsphereCloudProviderNetwork": {
                "publicNetwork": "public_network"
            },
            "rancher2:index/getClusterRkeConfigCloudProviderVsphereCloudProviderVirtualCenter:getClusterRkeConfigCloudProviderVsphereCloudProviderVirtualCenter": {
                "soapRoundtripCount": "soap_roundtrip_count"
            },
            "rancher2:index/getClusterRkeConfigCloudProviderVsphereCloudProviderWorkspace:getClusterRkeConfigCloudProviderVsphereCloudProviderWorkspace": {
                "defaultDatastore": "default_datastore",
                "resourcepoolPath": "resourcepool_path"
            },
            "rancher2:index/getClusterRkeConfigDns:getClusterRkeConfigDns": {
                "linearAutoscalerParams": "linear_autoscaler_params",
                "nodeSelector": "node_selector",
                "reverseCidrs": "reverse_cidrs",
                "updateStrategy": "update_strategy",
                "upstreamNameservers": "upstream_nameservers"
            },
            "rancher2:index/getClusterRkeConfigDnsLinearAutoscalerParams:getClusterRkeConfigDnsLinearAutoscalerParams": {
                "coresPerReplica": "cores_per_replica",
                "nodesPerReplica": "nodes_per_replica",
                "preventSinglePointFailure": "prevent_single_point_failure"
            },
            "rancher2:index/getClusterRkeConfigDnsNodelocal:getClusterRkeConfigDnsNodelocal": {
                "ipAddress": "ip_address",
                "nodeSelector": "node_selector"
            },
            "rancher2:index/getClusterRkeConfigDnsUpdateStrategy:getClusterRkeConfigDnsUpdateStrategy": {
                "rollingUpdate": "rolling_update"
            },
            "rancher2:index/getClusterRkeConfigDnsUpdateStrategyRollingUpdate:getClusterRkeConfigDnsUpdateStrategyRollingUpdate": {
                "maxSurge": "max_surge",
                "maxUnavailable": "max_unavailable"
            },
            "rancher2:index/getClusterRkeConfigIngress:getClusterRkeConfigIngress": {
                "defaultBackend": "default_backend",
                "dnsPolicy": "dns_policy",
                "extraArgs": "extra_args",
                "httpPort": "http_port",
                "httpsPort": "https_port",
                "networkMode": "network_mode",
                "nodeSelector": "node_selector",
                "updateStrategy": "update_strategy"
            },
            "rancher2:index/getClusterRkeConfigIngressUpdateStrategy:getClusterRkeConfigIngressUpdateStrategy": {
                "rollingUpdate": "rolling_update"
            },
            "rancher2:index/getClusterRkeConfigIngressUpdateStrategyRollingUpdate:getClusterRkeConfigIngressUpdateStrategyRollingUpdate": {
                "maxUnavailable": "max_unavailable"
            },
            "rancher2:index/getClusterRkeConfigMonitoring:getClusterRkeConfigMonitoring": {
                "nodeSelector": "node_selector",
                "updateStrategy": "update_strategy"
            },
            "rancher2:index/getClusterRkeConfigMonitoringUpdateStrategy:getClusterRkeConfigMonitoringUpdateStrategy": {
                "rollingUpdate": "rolling_update"
            },
            "rancher2:index/getClusterRkeConfigMonitoringUpdateStrategyRollingUpdate:getClusterRkeConfigMonitoringUpdateStrategyRollingUpdate": {
                "maxSurge": "max_surge",
                "maxUnavailable": "max_unavailable"
            },
            "rancher2:index/getClusterRkeConfigNetwork:getClusterRkeConfigNetwork": {
                "aciNetworkProvider": "aci_network_provider",
                "calicoNetworkProvider": "calico_network_provider",
                "canalNetworkProvider": "canal_network_provider",
                "flannelNetworkProvider": "flannel_network_provider",
                "weaveNetworkProvider": "weave_network_provider"
            },
            "rancher2:index/getClusterRkeConfigNetworkAciNetworkProvider:getClusterRkeConfigNetworkAciNetworkProvider": {
                "apicHosts": "apic_hosts",
                "apicRefreshTickerAdjust": "apic_refresh_ticker_adjust",
                "apicRefreshTime": "apic_refresh_time",
                "apicSubscriptionDelay": "apic_subscription_delay",
                "apicUserCrt": "apic_user_crt",
                "apicUserKey": "apic_user_key",
                "apicUserName": "apic_user_name",
                "controllerLogLevel": "controller_log_level",
                "disablePeriodicSnatGlobalInfoSync": "disable_periodic_snat_global_info_sync",
                "disableWaitForNetwork": "disable_wait_for_network",
                "dropLogEnable": "drop_log_enable",
                "durationWaitForNetwork": "duration_wait_for_network",
                "enableEndpointSlice": "enable_endpoint_slice",
                "encapType": "encap_type",
                "epRegistry": "ep_registry",
                "externDynamic": "extern_dynamic",
                "externStatic": "extern_static",
                "gbpPodSubnet": "gbp_pod_subnet",
                "hostAgentLogLevel": "host_agent_log_level",
                "imagePullPolicy": "image_pull_policy",
                "imagePullSecret": "image_pull_secret",
                "infraVlan": "infra_vlan",
                "installIstio": "install_istio",
                "istioProfile": "istio_profile",
                "kafkaBrokers": "kafka_brokers",
                "kafkaClientCrt": "kafka_client_crt",
                "kafkaClientKey": "kafka_client_key",
                "kubeApiVlan": "kube_api_vlan",
                "l3outExternalNetworks": "l3out_external_networks",
                "maxNodesSvcGraph": "max_nodes_svc_graph",
                "mcastRangeEnd": "mcast_range_end",
                "mcastRangeStart": "mcast_range_start",
                "mtuHeadRoom": "mtu_head_room",
                "multusDisable": "multus_disable",
                "noPriorityClass": "no_priority_class",
                "nodePodIfEnable": "node_pod_if_enable",
                "nodeSubnet": "node_subnet",
                "nodeSvcSubnet": "node_svc_subnet",
                "opflexClientSsl": "opflex_client_ssl",
                "opflexDeviceDeleteTimeout": "opflex_device_delete_timeout",
                "opflexLogLevel": "opflex_log_level",
                "opflexMode": "opflex_mode",
                "opflexServerPort": "opflex_server_port",
                "overlayVrfName": "overlay_vrf_name",
                "ovsMemoryLimit": "ovs_memory_limit",
                "pbrTrackingNonSnat": "pbr_tracking_non_snat",
                "podSubnetChunkSize": "pod_subnet_chunk_size",
                "runGbpContainer": "run_gbp_container",
                "runOpflexServerContainer": "run_opflex_server_container",
                "serviceMonitorInterval": "service_monitor_interval",
                "serviceVlan": "service_vlan",
                "snatContractScope": "snat_contract_scope",
                "snatNamespace": "snat_namespace",
                "snatPortRangeEnd": "snat_port_range_end",
                "snatPortRangeStart": "snat_port_range_start",
                "snatPortsPerNode": "snat_ports_per_node",
                "sriovEnable": "sriov_enable",
                "subnetDomainName": "subnet_domain_name",
                "systemId": "system_id",
                "useAciAnywhereCrd": "use_aci_anywhere_crd",
                "useAciCniPriorityClass": "use_aci_cni_priority_class",
                "useClusterRole": "use_cluster_role",
                "useHostNetnsVolume": "use_host_netns_volume",
                "useOpflexServerVolume": "use_opflex_server_volume",
                "usePrivilegedContainer": "use_privileged_container",
                "vmmController": "vmm_controller",
                "vmmDomain": "vmm_domain",
                "vrfName": "vrf_name",
                "vrfTenant": "vrf_tenant"
            },
            "rancher2:index/getClusterRkeConfigNetworkCalicoNetworkProvider:getClusterRkeConfigNetworkCalicoNetworkProvider": {
                "cloudProvider": "cloud_provider"
            },
            "rancher2:index/getClusterRkeConfigNode:getClusterRkeConfigNode": {
                "dockerSocket": "docker_socket",
                "hostnameOverride": "hostname_override",
                "internalAddress": "internal_address",
                "nodeId": "node_id",
                "roles": "role",
                "sshAgentAuth": "ssh_agent_auth",
                "sshKey": "ssh_key",
                "sshKeyPath": "ssh_key_path"
            },
            "rancher2:index/getClusterRkeConfigPrivateRegistry:getClusterRkeConfigPrivateRegistry": {
                "ecrCredentialPlugin": "ecr_credential_plugin",
                "isDefault": "is_default"
            },
            "rancher2:index/getClusterRkeConfigPrivateRegistryEcrCredentialPlugin:getClusterRkeConfigPrivateRegistryEcrCredentialPlugin": {
                "awsAccessKeyId": "aws_access_key_id",
                "awsSecretAccessKey": "aws_secret_access_key",
                "awsSessionToken": "aws_session_token"
            },
            "rancher2:index/getClusterRkeConfigServices:getClusterRkeConfigServices": {
                "kubeApi": "kube_api",
                "kubeController": "kube_controller"
            },
            "rancher2:index/getClusterRkeConfigServicesEtcd:getClusterRkeConfigServicesEtcd": {
                "backupConfig": "backup_config",
                "caCert": "ca_cert",
                "externalUrls": "external_urls",
                "extraArgs": "extra_args",
                "extraBinds": "extra_binds",
                "extraEnvs": "extra_env"
            },
            "rancher2:index/getClusterRkeConfigServicesEtcdBackupConfig:getClusterRkeConfigServicesEtcdBackupConfig": {
                "intervalHours": "interval_hours",
                "s3BackupConfig": "s3_backup_config",
                "safeTimestamp": "safe_timestamp"
            },
            "rancher2:index/getClusterRkeConfigServicesEtcdBackupConfigS3BackupConfig:getClusterRkeConfigServicesEtcdBackupConfigS3BackupConfig": {
                "accessKey": "access_key",
                "bucketName": "bucket_name",
                "customCa": "custom_ca",
                "secretKey": "secret_key"
            },
            "rancher2:index/getClusterRkeConfigServicesKubeApi:getClusterRkeConfigServicesKubeApi": {
                "admissionConfiguration": "admission_configuration",
                "alwaysPullImages": "always_pull_images",
                "auditLog": "audit_log",
                "eventRateLimit": "event_rate_limit",
                "extraArgs": "extra_args",
                "extraBinds": "extra_binds",
                "extraEnvs": "extra_env",
                "podSecurityPolicy": "pod_security_policy",
                "secretsEncryptionConfig": "secrets_encryption_config",
                "serviceClusterIpRange": "service_cluster_ip_range",
                "serviceNodePortRange": "service_node_port_range"
            },
            "rancher2:index/getClusterRkeConfigServicesKubeApiAdmissionConfiguration:getClusterRkeConfigServicesKubeApiAdmissionConfiguration": {
                "apiVersion": "api_version"
            },
            "rancher2:index/getClusterRkeConfigServicesKubeApiAuditLogConfiguration:getClusterRkeConfigServicesKubeApiAuditLogConfiguration": {
                "maxAge": "max_age",
                "maxBackup": "max_backup",
                "maxSize": "max_size"
            },
            "rancher2:index/getClusterRkeConfigServicesKubeApiSecretsEncryptionConfig:getClusterRkeConfigServicesKubeApiSecretsEncryptionConfig": {
                "customConfig": "custom_config"
            },
            "rancher2:index/getClusterRkeConfigServicesKubeController:getClusterRkeConfigServicesKubeController": {
                "clusterCidr": "cluster_cidr",
                "extraArgs": "extra_args",
                "extraBinds": "extra_binds",
                "extraEnvs": "extra_env",
                "serviceClusterIpRange": "service_cluster_ip_range"
            },
            "rancher2:index/getClusterRkeConfigServicesKubelet:getClusterRkeConfigServicesKubelet": {
                "clusterDnsServer": "cluster_dns_server",
                "clusterDomain": "cluster_domain",
                "extraArgs": "extra_args",
                "extraBinds": "extra_binds",
                "extraEnvs": "extra_env",
                "failSwapOn": "fail_swap_on",
                "generateServingCertificate": "generate_serving_certificate",
                "infraContainerImage": "infra_container_image"
            },
            "rancher2:index/getClusterRkeConfigServicesKubeproxy:getClusterRkeConfigServicesKubeproxy": {
                "extraArgs": "extra_args",
                "extraBinds": "extra_binds",
                "extraEnvs": "extra_env"
            },
            "rancher2:index/getClusterRkeConfigServicesScheduler:getClusterRkeConfigServicesScheduler": {
                "extraArgs": "extra_args",
                "extraBinds": "extra_binds",
                "extraEnvs": "extra_env"
            },
            "rancher2:index/getClusterRkeConfigUpgradeStrategy:getClusterRkeConfigUpgradeStrategy": {
                "drainInput": "drain_input",
                "maxUnavailableControlplane": "max_unavailable_controlplane",
                "maxUnavailableWorker": "max_unavailable_worker"
            },
            "rancher2:index/getClusterRkeConfigUpgradeStrategyDrainInput:getClusterRkeConfigUpgradeStrategyDrainInput": {
                "deleteLocalData": "delete_local_data",
                "gracePeriod": "grace_period",
                "ignoreDaemonSets": "ignore_daemon_sets"
            },
            "rancher2:index/getClusterRoleTemplateBinding:getClusterRoleTemplateBinding": {
                "clusterId": "cluster_id",
                "groupId": "group_id",
                "groupPrincipalId": "group_principal_id",
                "roleTemplateId": "role_template_id",
                "userId": "user_id",
                "userPrincipalId": "user_principal_id"
            },
            "rancher2:index/getClusterTemplate:getClusterTemplate": {
                "defaultRevisionId": "default_revision_id",
                "templateRevisions": "template_revisions"
            },
            "rancher2:index/getClusterTemplateMember:getClusterTemplateMember": {
                "accessType": "access_type",
                "groupPrincipalId": "group_principal_id",
                "userPrincipalId": "user_principal_id"
            },
            "rancher2:index/getClusterTemplateTemplateRevision:getClusterTemplateTemplateRevision": {
                "clusterConfig": "cluster_config",
                "clusterTemplateId": "cluster_template_id"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfig:getClusterTemplateTemplateRevisionClusterConfig": {
                "clusterAuthEndpoint": "cluster_auth_endpoint",
                "defaultClusterRoleForProjectMembers": "default_cluster_role_for_project_members",
                "defaultPodSecurityAdmissionConfigurationTemplateName": "default_pod_security_admission_configuration_template_name",
                "defaultPodSecurityPolicyTemplateId": "default_pod_security_policy_template_id",
                "desiredAgentImage": "desired_agent_image",
                "desiredAuthImage": "desired_auth_image",
                "dockerRootDir": "docker_root_dir",
                "enableClusterAlerting": "enable_cluster_alerting",
                "enableClusterMonitoring": "enable_cluster_monitoring",
                "enableNetworkPolicy": "enable_network_policy",
                "rkeConfig": "rke_config",
                "windowsPreferedCluster": "windows_prefered_cluster"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigClusterAuthEndpoint:getClusterTemplateTemplateRevisionClusterConfigClusterAuthEndpoint": {
                "caCerts": "ca_certs"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfig:getClusterTemplateTemplateRevisionClusterConfigRkeConfig": {
                "addonJobTimeout": "addon_job_timeout",
                "addonsIncludes": "addons_include",
                "bastionHost": "bastion_host",
                "cloudProvider": "cloud_provider",
                "enableCriDockerd": "enable_cri_dockerd",
                "ignoreDockerVersion": "ignore_docker_version",
                "kubernetesVersion": "kubernetes_version",
                "prefixPath": "prefix_path",
                "privateRegistries": "private_registries",
                "sshAgentAuth": "ssh_agent_auth",
                "sshCertPath": "ssh_cert_path",
                "sshKeyPath": "ssh_key_path",
                "upgradeStrategy": "upgrade_strategy",
                "winPrefixPath": "win_prefix_path"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigBastionHost:getClusterTemplateTemplateRevisionClusterConfigRkeConfigBastionHost": {
                "sshAgentAuth": "ssh_agent_auth",
                "sshKey": "ssh_key",
                "sshKeyPath": "ssh_key_path"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProvider:getClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProvider": {
                "awsCloudProvider": "aws_cloud_provider",
                "azureCloudProvider": "azure_cloud_provider",
                "customCloudProvider": "custom_cloud_provider",
                "openstackCloudProvider": "openstack_cloud_provider",
                "vsphereCloudProvider": "vsphere_cloud_provider"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderAwsCloudProvider:getClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderAwsCloudProvider": {
                "serviceOverrides": "service_override"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderAwsCloudProviderGlobal:getClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderAwsCloudProviderGlobal": {
                "disableSecurityGroupIngress": "disable_security_group_ingress",
                "disableStrictZoneCheck": "disable_strict_zone_check",
                "elbSecurityGroup": "elb_security_group",
                "kubernetesClusterId": "kubernetes_cluster_id",
                "kubernetesClusterTag": "kubernetes_cluster_tag",
                "roleArn": "role_arn",
                "routeTableId": "route_table_id",
                "subnetId": "subnet_id"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderAwsCloudProviderServiceOverride:getClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderAwsCloudProviderServiceOverride": {
                "signingMethod": "signing_method",
                "signingName": "signing_name",
                "signingRegion": "signing_region"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderAzureCloudProvider:getClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderAzureCloudProvider": {
                "aadClientCertPassword": "aad_client_cert_password",
                "aadClientCertPath": "aad_client_cert_path",
                "aadClientId": "aad_client_id",
                "aadClientSecret": "aad_client_secret",
                "cloudProviderBackoff": "cloud_provider_backoff",
                "cloudProviderBackoffDuration": "cloud_provider_backoff_duration",
                "cloudProviderBackoffExponent": "cloud_provider_backoff_exponent",
                "cloudProviderBackoffJitter": "cloud_provider_backoff_jitter",
                "cloudProviderBackoffRetries": "cloud_provider_backoff_retries",
                "cloudProviderRateLimit": "cloud_provider_rate_limit",
                "cloudProviderRateLimitBucket": "cloud_provider_rate_limit_bucket",
                "cloudProviderRateLimitQps": "cloud_provider_rate_limit_qps",
                "loadBalancerSku": "load_balancer_sku",
                "maximumLoadBalancerRuleCount": "maximum_load_balancer_rule_count",
                "primaryAvailabilitySetName": "primary_availability_set_name",
                "primaryScaleSetName": "primary_scale_set_name",
                "resourceGroup": "resource_group",
                "routeTableName": "route_table_name",
                "securityGroupName": "security_group_name",
                "subnetName": "subnet_name",
                "subscriptionId": "subscription_id",
                "tenantId": "tenant_id",
                "useInstanceMetadata": "use_instance_metadata",
                "useManagedIdentityExtension": "use_managed_identity_extension",
                "vmType": "vm_type",
                "vnetName": "vnet_name",
                "vnetResourceGroup": "vnet_resource_group"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderOpenstackCloudProvider:getClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderOpenstackCloudProvider": {
                "blockStorage": "block_storage",
                "loadBalancer": "load_balancer"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderOpenstackCloudProviderBlockStorage:getClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderOpenstackCloudProviderBlockStorage": {
                "bsVersion": "bs_version",
                "ignoreVolumeAz": "ignore_volume_az",
                "trustDevicePath": "trust_device_path"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderOpenstackCloudProviderGlobal:getClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderOpenstackCloudProviderGlobal": {
                "authUrl": "auth_url",
                "caFile": "ca_file",
                "domainId": "domain_id",
                "domainName": "domain_name",
                "tenantId": "tenant_id",
                "tenantName": "tenant_name",
                "trustId": "trust_id"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderOpenstackCloudProviderLoadBalancer:getClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderOpenstackCloudProviderLoadBalancer": {
                "createMonitor": "create_monitor",
                "floatingNetworkId": "floating_network_id",
                "lbMethod": "lb_method",
                "lbProvider": "lb_provider",
                "lbVersion": "lb_version",
                "manageSecurityGroups": "manage_security_groups",
                "monitorDelay": "monitor_delay",
                "monitorMaxRetries": "monitor_max_retries",
                "monitorTimeout": "monitor_timeout",
                "subnetId": "subnet_id",
                "useOctavia": "use_octavia"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderOpenstackCloudProviderMetadata:getClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderOpenstackCloudProviderMetadata": {
                "requestTimeout": "request_timeout",
                "searchOrder": "search_order"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderOpenstackCloudProviderRoute:getClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderOpenstackCloudProviderRoute": {
                "routerId": "router_id"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProvider:getClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProvider": {
                "virtualCenters": "virtual_center"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProviderDisk:getClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProviderDisk": {
                "scsiControllerType": "scsi_controller_type"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProviderGlobal:getClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProviderGlobal": {
                "gracefulShutdownTimeout": "graceful_shutdown_timeout",
                "insecureFlag": "insecure_flag",
                "soapRoundtripCount": "soap_roundtrip_count"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProviderNetwork:getClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProviderNetwork": {
                "publicNetwork": "public_network"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProviderVirtualCenter:getClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProviderVirtualCenter": {
                "soapRoundtripCount": "soap_roundtrip_count"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProviderWorkspace:getClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProviderWorkspace": {
                "defaultDatastore": "default_datastore",
                "resourcepoolPath": "resourcepool_path"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigDns:getClusterTemplateTemplateRevisionClusterConfigRkeConfigDns": {
                "linearAutoscalerParams": "linear_autoscaler_params",
                "nodeSelector": "node_selector",
                "reverseCidrs": "reverse_cidrs",
                "updateStrategy": "update_strategy",
                "upstreamNameservers": "upstream_nameservers"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigDnsLinearAutoscalerParams:getClusterTemplateTemplateRevisionClusterConfigRkeConfigDnsLinearAutoscalerParams": {
                "coresPerReplica": "cores_per_replica",
                "nodesPerReplica": "nodes_per_replica",
                "preventSinglePointFailure": "prevent_single_point_failure"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigDnsNodelocal:getClusterTemplateTemplateRevisionClusterConfigRkeConfigDnsNodelocal": {
                "ipAddress": "ip_address",
                "nodeSelector": "node_selector"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigDnsUpdateStrategy:getClusterTemplateTemplateRevisionClusterConfigRkeConfigDnsUpdateStrategy": {
                "rollingUpdate": "rolling_update"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigDnsUpdateStrategyRollingUpdate:getClusterTemplateTemplateRevisionClusterConfigRkeConfigDnsUpdateStrategyRollingUpdate": {
                "maxSurge": "max_surge",
                "maxUnavailable": "max_unavailable"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigIngress:getClusterTemplateTemplateRevisionClusterConfigRkeConfigIngress": {
                "defaultBackend": "default_backend",
                "dnsPolicy": "dns_policy",
                "extraArgs": "extra_args",
                "httpPort": "http_port",
                "httpsPort": "https_port",
                "networkMode": "network_mode",
                "nodeSelector": "node_selector",
                "updateStrategy": "update_strategy"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigIngressUpdateStrategy:getClusterTemplateTemplateRevisionClusterConfigRkeConfigIngressUpdateStrategy": {
                "rollingUpdate": "rolling_update"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigIngressUpdateStrategyRollingUpdate:getClusterTemplateTemplateRevisionClusterConfigRkeConfigIngressUpdateStrategyRollingUpdate": {
                "maxUnavailable": "max_unavailable"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigMonitoring:getClusterTemplateTemplateRevisionClusterConfigRkeConfigMonitoring": {
                "nodeSelector": "node_selector",
                "updateStrategy": "update_strategy"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigMonitoringUpdateStrategy:getClusterTemplateTemplateRevisionClusterConfigRkeConfigMonitoringUpdateStrategy": {
                "rollingUpdate": "rolling_update"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigMonitoringUpdateStrategyRollingUpdate:getClusterTemplateTemplateRevisionClusterConfigRkeConfigMonitoringUpdateStrategyRollingUpdate": {
                "maxSurge": "max_surge",
                "maxUnavailable": "max_unavailable"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigNetwork:getClusterTemplateTemplateRevisionClusterConfigRkeConfigNetwork": {
                "aciNetworkProvider": "aci_network_provider",
                "calicoNetworkProvider": "calico_network_provider",
                "canalNetworkProvider": "canal_network_provider",
                "flannelNetworkProvider": "flannel_network_provider",
                "weaveNetworkProvider": "weave_network_provider"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigNetworkAciNetworkProvider:getClusterTemplateTemplateRevisionClusterConfigRkeConfigNetworkAciNetworkProvider": {
                "apicHosts": "apic_hosts",
                "apicRefreshTickerAdjust": "apic_refresh_ticker_adjust",
                "apicRefreshTime": "apic_refresh_time",
                "apicSubscriptionDelay": "apic_subscription_delay",
                "apicUserCrt": "apic_user_crt",
                "apicUserKey": "apic_user_key",
                "apicUserName": "apic_user_name",
                "controllerLogLevel": "controller_log_level",
                "disablePeriodicSnatGlobalInfoSync": "disable_periodic_snat_global_info_sync",
                "disableWaitForNetwork": "disable_wait_for_network",
                "dropLogEnable": "drop_log_enable",
                "durationWaitForNetwork": "duration_wait_for_network",
                "enableEndpointSlice": "enable_endpoint_slice",
                "encapType": "encap_type",
                "epRegistry": "ep_registry",
                "externDynamic": "extern_dynamic",
                "externStatic": "extern_static",
                "gbpPodSubnet": "gbp_pod_subnet",
                "hostAgentLogLevel": "host_agent_log_level",
                "imagePullPolicy": "image_pull_policy",
                "imagePullSecret": "image_pull_secret",
                "infraVlan": "infra_vlan",
                "installIstio": "install_istio",
                "istioProfile": "istio_profile",
                "kafkaBrokers": "kafka_brokers",
                "kafkaClientCrt": "kafka_client_crt",
                "kafkaClientKey": "kafka_client_key",
                "kubeApiVlan": "kube_api_vlan",
                "l3outExternalNetworks": "l3out_external_networks",
                "maxNodesSvcGraph": "max_nodes_svc_graph",
                "mcastRangeEnd": "mcast_range_end",
                "mcastRangeStart": "mcast_range_start",
                "mtuHeadRoom": "mtu_head_room",
                "multusDisable": "multus_disable",
                "noPriorityClass": "no_priority_class",
                "nodePodIfEnable": "node_pod_if_enable",
                "nodeSubnet": "node_subnet",
                "nodeSvcSubnet": "node_svc_subnet",
                "opflexClientSsl": "opflex_client_ssl",
                "opflexDeviceDeleteTimeout": "opflex_device_delete_timeout",
                "opflexLogLevel": "opflex_log_level",
                "opflexMode": "opflex_mode",
                "opflexServerPort": "opflex_server_port",
                "overlayVrfName": "overlay_vrf_name",
                "ovsMemoryLimit": "ovs_memory_limit",
                "pbrTrackingNonSnat": "pbr_tracking_non_snat",
                "podSubnetChunkSize": "pod_subnet_chunk_size",
                "runGbpContainer": "run_gbp_container",
                "runOpflexServerContainer": "run_opflex_server_container",
                "serviceMonitorInterval": "service_monitor_interval",
                "serviceVlan": "service_vlan",
                "snatContractScope": "snat_contract_scope",
                "snatNamespace": "snat_namespace",
                "snatPortRangeEnd": "snat_port_range_end",
                "snatPortRangeStart": "snat_port_range_start",
                "snatPortsPerNode": "snat_ports_per_node",
                "sriovEnable": "sriov_enable",
                "subnetDomainName": "subnet_domain_name",
                "systemId": "system_id",
                "useAciAnywhereCrd": "use_aci_anywhere_crd",
                "useAciCniPriorityClass": "use_aci_cni_priority_class",
                "useClusterRole": "use_cluster_role",
                "useHostNetnsVolume": "use_host_netns_volume",
                "useOpflexServerVolume": "use_opflex_server_volume",
                "usePrivilegedContainer": "use_privileged_container",
                "vmmController": "vmm_controller",
                "vmmDomain": "vmm_domain",
                "vrfName": "vrf_name",
                "vrfTenant": "vrf_tenant"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigNetworkCalicoNetworkProvider:getClusterTemplateTemplateRevisionClusterConfigRkeConfigNetworkCalicoNetworkProvider": {
                "cloudProvider": "cloud_provider"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigNode:getClusterTemplateTemplateRevisionClusterConfigRkeConfigNode": {
                "dockerSocket": "docker_socket",
                "hostnameOverride": "hostname_override",
                "internalAddress": "internal_address",
                "nodeId": "node_id",
                "roles": "role",
                "sshAgentAuth": "ssh_agent_auth",
                "sshKey": "ssh_key",
                "sshKeyPath": "ssh_key_path"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigPrivateRegistry:getClusterTemplateTemplateRevisionClusterConfigRkeConfigPrivateRegistry": {
                "ecrCredentialPlugin": "ecr_credential_plugin",
                "isDefault": "is_default"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigPrivateRegistryEcrCredentialPlugin:getClusterTemplateTemplateRevisionClusterConfigRkeConfigPrivateRegistryEcrCredentialPlugin": {
                "awsAccessKeyId": "aws_access_key_id",
                "awsSecretAccessKey": "aws_secret_access_key",
                "awsSessionToken": "aws_session_token"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigServices:getClusterTemplateTemplateRevisionClusterConfigRkeConfigServices": {
                "kubeApi": "kube_api",
                "kubeController": "kube_controller"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesEtcd:getClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesEtcd": {
                "backupConfig": "backup_config",
                "caCert": "ca_cert",
                "externalUrls": "external_urls",
                "extraArgs": "extra_args",
                "extraBinds": "extra_binds",
                "extraEnvs": "extra_env"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesEtcdBackupConfig:getClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesEtcdBackupConfig": {
                "intervalHours": "interval_hours",
                "s3BackupConfig": "s3_backup_config",
                "safeTimestamp": "safe_timestamp"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesEtcdBackupConfigS3BackupConfig:getClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesEtcdBackupConfigS3BackupConfig": {
                "accessKey": "access_key",
                "bucketName": "bucket_name",
                "customCa": "custom_ca",
                "secretKey": "secret_key"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesKubeApi:getClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesKubeApi": {
                "admissionConfiguration": "admission_configuration",
                "alwaysPullImages": "always_pull_images",
                "auditLog": "audit_log",
                "eventRateLimit": "event_rate_limit",
                "extraArgs": "extra_args",
                "extraBinds": "extra_binds",
                "extraEnvs": "extra_env",
                "podSecurityPolicy": "pod_security_policy",
                "secretsEncryptionConfig": "secrets_encryption_config",
                "serviceClusterIpRange": "service_cluster_ip_range",
                "serviceNodePortRange": "service_node_port_range"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesKubeApiAdmissionConfiguration:getClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesKubeApiAdmissionConfiguration": {
                "apiVersion": "api_version"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesKubeApiAuditLogConfiguration:getClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesKubeApiAuditLogConfiguration": {
                "maxAge": "max_age",
                "maxBackup": "max_backup",
                "maxSize": "max_size"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesKubeApiSecretsEncryptionConfig:getClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesKubeApiSecretsEncryptionConfig": {
                "customConfig": "custom_config"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesKubeController:getClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesKubeController": {
                "clusterCidr": "cluster_cidr",
                "extraArgs": "extra_args",
                "extraBinds": "extra_binds",
                "extraEnvs": "extra_env",
                "serviceClusterIpRange": "service_cluster_ip_range"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesKubelet:getClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesKubelet": {
                "clusterDnsServer": "cluster_dns_server",
                "clusterDomain": "cluster_domain",
                "extraArgs": "extra_args",
                "extraBinds": "extra_binds",
                "extraEnvs": "extra_env",
                "failSwapOn": "fail_swap_on",
                "generateServingCertificate": "generate_serving_certificate",
                "infraContainerImage": "infra_container_image"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesKubeproxy:getClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesKubeproxy": {
                "extraArgs": "extra_args",
                "extraBinds": "extra_binds",
                "extraEnvs": "extra_env"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesScheduler:getClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesScheduler": {
                "extraArgs": "extra_args",
                "extraBinds": "extra_binds",
                "extraEnvs": "extra_env"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigUpgradeStrategy:getClusterTemplateTemplateRevisionClusterConfigRkeConfigUpgradeStrategy": {
                "drainInput": "drain_input",
                "maxUnavailableControlplane": "max_unavailable_controlplane",
                "maxUnavailableWorker": "max_unavailable_worker"
            },
            "rancher2:index/getClusterTemplateTemplateRevisionClusterConfigRkeConfigUpgradeStrategyDrainInput:getClusterTemplateTemplateRevisionClusterConfigRkeConfigUpgradeStrategyDrainInput": {
                "deleteLocalData": "delete_local_data",
                "gracePeriod": "grace_period",
                "ignoreDaemonSets": "ignore_daemon_sets"
            },
            "rancher2:index/getClusterV2:getClusterV2": {
                "agentEnvVars": "agent_env_vars",
                "cloudCredentialSecretName": "cloud_credential_secret_name",
                "clusterRegistrationToken": "cluster_registration_token",
                "clusterV1Id": "cluster_v1_id",
                "defaultClusterRoleForProjectMembers": "default_cluster_role_for_project_members",
                "defaultPodSecurityAdmissionConfigurationTemplateName": "default_pod_security_admission_configuration_template_name",
                "defaultPodSecurityPolicyTemplateName": "default_pod_security_policy_template_name",
                "enableNetworkPolicy": "enable_network_policy",
                "fleetNamespace": "fleet_namespace",
                "kubeConfig": "kube_config",
                "kubernetesVersion": "kubernetes_version",
                "resourceVersion": "resource_version",
                "rkeConfig": "rke_config"
            },
            "rancher2:index/getClusterV2ClusterRegistrationToken:getClusterV2ClusterRegistrationToken": {
                "clusterId": "cluster_id",
                "insecureCommand": "insecure_command",
                "insecureNodeCommand": "insecure_node_command",
                "insecureWindowsNodeCommand": "insecure_windows_node_command",
                "manifestUrl": "manifest_url",
                "nodeCommand": "node_command",
                "windowsNodeCommand": "windows_node_command"
            },
            "rancher2:index/getClusterV2RkeConfig:getClusterV2RkeConfig": {
                "additionalManifest": "additional_manifest",
                "chartValues": "chart_values",
                "etcdSnapshotCreate": "etcd_snapshot_create",
                "etcdSnapshotRestore": "etcd_snapshot_restore",
                "localAuthEndpoint": "local_auth_endpoint",
                "machineGlobalConfig": "machine_global_config",
                "machinePoolDefaults": "machine_pool_defaults",
                "machinePools": "machine_pools",
                "machineSelectorConfigs": "machine_selector_config",
                "machineSelectorFiles": "machine_selector_files",
                "rotateCertificates": "rotate_certificates",
                "upgradeStrategy": "upgrade_strategy"
            },
            "rancher2:index/getClusterV2RkeConfigEtcd:getClusterV2RkeConfigEtcd": {
                "disableSnapshots": "disable_snapshots",
                "s3Config": "s3_config",
                "snapshotRetention": "snapshot_retention",
                "snapshotScheduleCron": "snapshot_schedule_cron"
            },
            "rancher2:index/getClusterV2RkeConfigEtcdS3Config:getClusterV2RkeConfigEtcdS3Config": {
                "cloudCredentialName": "cloud_credential_name",
                "endpointCa": "endpoint_ca",
                "skipSslVerify": "skip_ssl_verify"
            },
            "rancher2:index/getClusterV2RkeConfigEtcdSnapshotRestore:getClusterV2RkeConfigEtcdSnapshotRestore": {
                "restoreRkeConfig": "restore_rke_config"
            },
            "rancher2:index/getClusterV2RkeConfigLocalAuthEndpoint:getClusterV2RkeConfigLocalAuthEndpoint": {
                "caCerts": "ca_certs"
            },
            "rancher2:index/getClusterV2RkeConfigMachinePool:getClusterV2RkeConfigMachinePool": {
                "cloudCredentialSecretName": "cloud_credential_secret_name",
                "controlPlaneRole": "control_plane_role",
                "drainBeforeDelete": "drain_before_delete",
                "etcdRole": "etcd_role",
                "hostnameLengthLimit": "hostname_length_limit",
                "machineConfig": "machine_config",
                "machineLabels": "machine_labels",
                "maxUnhealthy": "max_unhealthy",
                "nodeDrainTimeout": "node_drain_timeout",
                "nodeStartupTimeoutSeconds": "node_startup_timeout_seconds",
                "rollingUpdate": "rolling_update",
                "unhealthyNodeTimeoutSeconds": "unhealthy_node_timeout_seconds",
                "unhealthyRange": "unhealthy_range",
                "workerRole": "worker_role"
            },
            "rancher2:index/getClusterV2RkeConfigMachinePoolDefault:getClusterV2RkeConfigMachinePoolDefault": {
                "hostnameLengthLimit": "hostname_length_limit"
            },
            "rancher2:index/getClusterV2RkeConfigMachinePoolMachineConfig:getClusterV2RkeConfigMachinePoolMachineConfig": {
                "apiVersion": "api_version"
            },
            "rancher2:index/getClusterV2RkeConfigMachinePoolRollingUpdate:getClusterV2RkeConfigMachinePoolRollingUpdate": {
                "maxSurge": "max_surge",
                "maxUnavailable": "max_unavailable"
            },
            "rancher2:index/getClusterV2RkeConfigMachineSelectorConfig:getClusterV2RkeConfigMachineSelectorConfig": {
                "machineLabelSelector": "machine_label_selector"
            },
            "rancher2:index/getClusterV2RkeConfigMachineSelectorConfigMachineLabelSelector:getClusterV2RkeConfigMachineSelectorConfigMachineLabelSelector": {
                "matchExpressions": "match_expressions",
                "matchLabels": "match_labels"
            },
            "rancher2:index/getClusterV2RkeConfigMachineSelectorFile:getClusterV2RkeConfigMachineSelectorFile": {
                "fileSources": "file_sources",
                "machineLabelSelector": "machine_label_selector"
            },
            "rancher2:index/getClusterV2RkeConfigMachineSelectorFileFileSourceConfigmap:getClusterV2RkeConfigMachineSelectorFileFileSourceConfigmap": {
                "defaultPermissions": "default_permissions"
            },
            "rancher2:index/getClusterV2RkeConfigMachineSelectorFileFileSourceSecret:getClusterV2RkeConfigMachineSelectorFileFileSourceSecret": {
                "defaultPermissions": "default_permissions"
            },
            "rancher2:index/getClusterV2RkeConfigMachineSelectorFileMachineLabelSelector:getClusterV2RkeConfigMachineSelectorFileMachineLabelSelector": {
                "matchExpressions": "match_expressions",
                "matchLabels": "match_labels"
            },
            "rancher2:index/getClusterV2RkeConfigRegistriesConfig:getClusterV2RkeConfigRegistriesConfig": {
                "authConfigSecretName": "auth_config_secret_name",
                "caBundle": "ca_bundle",
                "tlsSecretName": "tls_secret_name"
            },
            "rancher2:index/getClusterV2RkeConfigUpgradeStrategy:getClusterV2RkeConfigUpgradeStrategy": {
                "controlPlaneConcurrency": "control_plane_concurrency",
                "controlPlaneDrainOptions": "control_plane_drain_options",
                "workerConcurrency": "worker_concurrency",
                "workerDrainOptions": "worker_drain_options"
            },
            "rancher2:index/getClusterV2RkeConfigUpgradeStrategyControlPlaneDrainOptions:getClusterV2RkeConfigUpgradeStrategyControlPlaneDrainOptions": {
                "deleteEmptyDirData": "delete_empty_dir_data",
                "disableEviction": "disable_eviction",
                "gracePeriod": "grace_period",
                "ignoreDaemonSets": "ignore_daemon_sets",
                "ignoreErrors": "ignore_errors",
                "skipWaitForDeleteTimeoutSeconds": "skip_wait_for_delete_timeout_seconds"
            },
            "rancher2:index/getClusterV2RkeConfigUpgradeStrategyWorkerDrainOptions:getClusterV2RkeConfigUpgradeStrategyWorkerDrainOptions": {
                "deleteEmptyDirData": "delete_empty_dir_data",
                "disableEviction": "disable_eviction",
                "gracePeriod": "grace_period",
                "ignoreDaemonSets": "ignore_daemon_sets",
                "ignoreErrors": "ignore_errors",
                "skipWaitForDeleteTimeoutSeconds": "skip_wait_for_delete_timeout_seconds"
            },
            "rancher2:index/getConfigMapV2:getConfigMapV2": {
                "clusterId": "cluster_id",
                "resourceVersion": "resource_version"
            },
            "rancher2:index/getEtcdBackup:getEtcdBackup": {
                "backupConfig": "backup_config",
                "clusterId": "cluster_id",
                "namespaceId": "namespace_id"
            },
            "rancher2:index/getEtcdBackupBackupConfig:getEtcdBackupBackupConfig": {
                "intervalHours": "interval_hours",
                "s3BackupConfig": "s3_backup_config",
                "safeTimestamp": "safe_timestamp"
            },
            "rancher2:index/getEtcdBackupBackupConfigS3BackupConfig:getEtcdBackupBackupConfigS3BackupConfig": {
                "accessKey": "access_key",
                "bucketName": "bucket_name",
                "customCa": "custom_ca",
                "secretKey": "secret_key"
            },
            "rancher2:index/getGlobalDnsProvider:getGlobalDnsProvider": {
                "alidnsConfig": "alidns_config",
                "cloudflareConfig": "cloudflare_config",
                "dnsProvider": "dns_provider",
                "rootDomain": "root_domain",
                "route53Config": "route53_config"
            },
            "rancher2:index/getGlobalDnsProviderAlidnsConfig:getGlobalDnsProviderAlidnsConfig": {
                "accessKey": "access_key",
                "secretKey": "secret_key"
            },
            "rancher2:index/getGlobalDnsProviderCloudflareConfig:getGlobalDnsProviderCloudflareConfig": {
                "apiEmail": "api_email",
                "apiKey": "api_key",
                "proxySetting": "proxy_setting"
            },
            "rancher2:index/getGlobalDnsProviderRoute53Config:getGlobalDnsProviderRoute53Config": {
                "accessKey": "access_key",
                "credentialsPath": "credentials_path",
                "roleArn": "role_arn",
                "secretKey": "secret_key",
                "zoneType": "zone_type"
            },
            "rancher2:index/getGlobalRole:getGlobalRole": {
                "inheritedClusterRoles": "inherited_cluster_roles",
                "newUserDefault": "new_user_default"
            },
            "rancher2:index/getGlobalRoleBinding:getGlobalRoleBinding": {
                "globalRoleId": "global_role_id",
                "groupPrincipalId": "group_principal_id",
                "userId": "user_id"
            },
            "rancher2:index/getGlobalRoleRule:getGlobalRoleRule": {
                "apiGroups": "api_groups",
                "nonResourceUrls": "non_resource_urls",
                "resourceNames": "resource_names"
            },
            "rancher2:index/getMultiClusterApp:getMultiClusterApp": {
                "catalogName": "catalog_name",
                "revisionHistoryLimit": "revision_history_limit",
                "revisionId": "revision_id",
                "templateName": "template_name",
                "templateVersion": "template_version",
                "templateVersionId": "template_version_id",
                "upgradeStrategies": "upgrade_strategy"
            },
            "rancher2:index/getMultiClusterAppAnswer:getMultiClusterAppAnswer": {
                "clusterId": "cluster_id",
                "projectId": "project_id"
            },
            "rancher2:index/getMultiClusterAppMember:getMultiClusterAppMember": {
                "accessType": "access_type",
                "groupPrincipalId": "group_principal_id",
                "userPrincipalId": "user_principal_id"
            },
            "rancher2:index/getMultiClusterAppTarget:getMultiClusterAppTarget": {
                "appId": "app_id",
                "healthState": "health_state",
                "projectId": "project_id"
            },
            "rancher2:index/getMultiClusterAppUpgradeStrategy:getMultiClusterAppUpgradeStrategy": {
                "rollingUpdate": "rolling_update"
            },
            "rancher2:index/getMultiClusterAppUpgradeStrategyRollingUpdate:getMultiClusterAppUpgradeStrategyRollingUpdate": {
                "batchSize": "batch_size"
            },
            "rancher2:index/getNamespace:getNamespace": {
                "containerResourceLimit": "container_resource_limit",
                "projectId": "project_id",
                "resourceQuota": "resource_quota"
            },
            "rancher2:index/getNamespaceContainerResourceLimit:getNamespaceContainerResourceLimit": {
                "limitsCpu": "limits_cpu",
                "limitsMemory": "limits_memory",
                "requestsCpu": "requests_cpu",
                "requestsMemory": "requests_memory"
            },
            "rancher2:index/getNamespaceResourceQuotaLimit:getNamespaceResourceQuotaLimit": {
                "configMaps": "config_maps",
                "limitsCpu": "limits_cpu",
                "limitsMemory": "limits_memory",
                "persistentVolumeClaims": "persistent_volume_claims",
                "replicationControllers": "replication_controllers",
                "requestsCpu": "requests_cpu",
                "requestsMemory": "requests_memory",
                "requestsStorage": "requests_storage",
                "servicesLoadBalancers": "services_load_balancers",
                "servicesNodePorts": "services_node_ports"
            },
            "rancher2:index/getNodeDriver:getNodeDriver": {
                "externalId": "external_id",
                "uiUrl": "ui_url",
                "whitelistDomains": "whitelist_domains"
            },
            "rancher2:index/getNodePool:getNodePool": {
                "clusterId": "cluster_id",
                "controlPlane": "control_plane",
                "deleteNotReadyAfterSecs": "delete_not_ready_after_secs",
                "hostnamePrefix": "hostname_prefix",
                "nodeTaints": "node_taints",
                "nodeTemplateId": "node_template_id"
            },
            "rancher2:index/getNodePoolNodeTaint:getNodePoolNodeTaint": {
                "timeAdded": "time_added"
            },
            "rancher2:index/getNodeTemplate:getNodeTemplate": {
                "cloudCredentialId": "cloud_credential_id",
                "engineEnv": "engine_env",
                "engineInsecureRegistries": "engine_insecure_registry",
                "engineInstallUrl": "engine_install_url",
                "engineLabel": "engine_label",
                "engineOpt": "engine_opt",
                "engineRegistryMirrors": "engine_registry_mirror",
                "engineStorageDriver": "engine_storage_driver",
                "nodeTaints": "node_taints",
                "useInternalIpAddress": "use_internal_ip_address"
            },
            "rancher2:index/getNodeTemplateNodeTaint:getNodeTemplateNodeTaint": {
                "timeAdded": "time_added"
            },
            "rancher2:index/getNotifier:getNotifier": {
                "clusterId": "cluster_id",
                "dingtalkConfig": "dingtalk_config",
                "msteamsConfig": "msteams_config",
                "pagerdutyConfig": "pagerduty_config",
                "slackConfig": "slack_config",
                "smtpConfig": "smtp_config",
                "webhookConfig": "webhook_config",
                "wechatConfig": "wechat_config"
            },
            "rancher2:index/getNotifierDingtalkConfig:getNotifierDingtalkConfig": {
                "proxyUrl": "proxy_url"
            },
            "rancher2:index/getNotifierMsteamsConfig:getNotifierMsteamsConfig": {
                "proxyUrl": "proxy_url"
            },
            "rancher2:index/getNotifierPagerdutyConfig:getNotifierPagerdutyConfig": {
                "proxyUrl": "proxy_url",
                "serviceKey": "service_key"
            },
            "rancher2:index/getNotifierSlackConfig:getNotifierSlackConfig": {
                "defaultRecipient": "default_recipient",
                "proxyUrl": "proxy_url"
            },
            "rancher2:index/getNotifierSmtpConfig:getNotifierSmtpConfig": {
                "defaultRecipient": "default_recipient"
            },
            "rancher2:index/getNotifierWebhookConfig:getNotifierWebhookConfig": {
                "proxyUrl": "proxy_url"
            },
            "rancher2:index/getNotifierWechatConfig:getNotifierWechatConfig": {
                "defaultRecipient": "default_recipient",
                "proxyUrl": "proxy_url",
                "recipientType": "recipient_type"
            },
            "rancher2:index/getPodSecurityPolicyTemplate:getPodSecurityPolicyTemplate": {
                "allowPrivilegeEscalation": "allow_privilege_escalation",
                "allowedCapabilities": "allowed_capabilities",
                "allowedCsiDrivers": "allowed_csi_driver",
                "allowedFlexVolumes": "allowed_flex_volume",
                "allowedHostPaths": "allowed_host_path",
                "allowedProcMountTypes": "allowed_proc_mount_types",
                "allowedUnsafeSysctls": "allowed_unsafe_sysctls",
                "defaultAddCapabilities": "default_add_capabilities",
                "defaultAllowPrivilegeEscalation": "default_allow_privilege_escalation",
                "forbiddenSysctls": "forbidden_sysctls",
                "fsGroup": "fs_group",
                "hostIpc": "host_ipc",
                "hostNetwork": "host_network",
                "hostPid": "host_pid",
                "hostPorts": "host_port",
                "readOnlyRootFilesystem": "read_only_root_filesystem",
                "requiredDropCapabilities": "required_drop_capabilities",
                "runAsGroup": "run_as_group",
                "runAsUser": "run_as_user",
                "runtimeClass": "runtime_class",
                "seLinux": "se_linux",
                "supplementalGroup": "supplemental_group"
            },
            "rancher2:index/getPodSecurityPolicyTemplateAllowedHostPath:getPodSecurityPolicyTemplateAllowedHostPath": {
                "pathPrefix": "path_prefix",
                "readOnly": "read_only"
            },
            "rancher2:index/getPodSecurityPolicyTemplateFsGroup:getPodSecurityPolicyTemplateFsGroup": {
                "ranges": "range"
            },
            "rancher2:index/getPodSecurityPolicyTemplateRunAsGroup:getPodSecurityPolicyTemplateRunAsGroup": {
                "ranges": "range"
            },
            "rancher2:index/getPodSecurityPolicyTemplateRunAsUser:getPodSecurityPolicyTemplateRunAsUser": {
                "ranges": "range"
            },
            "rancher2:index/getPodSecurityPolicyTemplateRuntimeClass:getPodSecurityPolicyTemplateRuntimeClass": {
                "allowedRuntimeClassNames": "allowed_runtime_class_names",
                "defaultRuntimeClassName": "default_runtime_class_name"
            },
            "rancher2:index/getPodSecurityPolicyTemplateSeLinux:getPodSecurityPolicyTemplateSeLinux": {
                "seLinuxOption": "se_linux_option"
            },
            "rancher2:index/getPodSecurityPolicyTemplateSupplementalGroup:getPodSecurityPolicyTemplateSupplementalGroup": {
                "ranges": "range"
            },
            "rancher2:index/getProject:getProject": {
                "clusterId": "cluster_id",
                "containerResourceLimit": "container_resource_limit",
                "enableProjectMonitoring": "enable_project_monitoring",
                "podSecurityPolicyTemplateId": "pod_security_policy_template_id",
                "resourceQuota": "resource_quota"
            },
            "rancher2:index/getProjectAlertGroup:getProjectAlertGroup": {
                "groupIntervalSeconds": "group_interval_seconds",
                "groupWaitSeconds": "group_wait_seconds",
                "projectId": "project_id",
                "repeatIntervalSeconds": "repeat_interval_seconds"
            },
            "rancher2:index/getProjectAlertGroupRecipient:getProjectAlertGroupRecipient": {
                "defaultRecipient": "default_recipient",
                "notifierId": "notifier_id",
                "notifierType": "notifier_type"
            },
            "rancher2:index/getProjectAlertRule:getProjectAlertRule": {
                "groupId": "group_id",
                "groupIntervalSeconds": "group_interval_seconds",
                "groupWaitSeconds": "group_wait_seconds",
                "metricRule": "metric_rule",
                "podRule": "pod_rule",
                "projectId": "project_id",
                "repeatIntervalSeconds": "repeat_interval_seconds",
                "workloadRule": "workload_rule"
            },
            "rancher2:index/getProjectAlertRuleMetricRule:getProjectAlertRuleMetricRule": {
                "thresholdValue": "threshold_value"
            },
            "rancher2:index/getProjectAlertRulePodRule:getProjectAlertRulePodRule": {
                "podId": "pod_id",
                "restartIntervalSeconds": "restart_interval_seconds",
                "restartTimes": "restart_times"
            },
            "rancher2:index/getProjectAlertRuleWorkloadRule:getProjectAlertRuleWorkloadRule": {
                "availablePercentage": "available_percentage",
                "workloadId": "workload_id"
            },
            "rancher2:index/getProjectContainerResourceLimit:getProjectContainerResourceLimit": {
                "limitsCpu": "limits_cpu",
                "limitsMemory": "limits_memory",
                "requestsCpu": "requests_cpu",
                "requestsMemory": "requests_memory"
            },
            "rancher2:index/getProjectResourceQuota:getProjectResourceQuota": {
                "namespaceDefaultLimit": "namespace_default_limit",
                "projectLimit": "project_limit"
            },
            "rancher2:index/getProjectResourceQuotaNamespaceDefaultLimit:getProjectResourceQuotaNamespaceDefaultLimit": {
                "configMaps": "config_maps",
                "limitsCpu": "limits_cpu",
                "limitsMemory": "limits_memory",
                "persistentVolumeClaims": "persistent_volume_claims",
                "replicationControllers": "replication_controllers",
                "requestsCpu": "requests_cpu",
                "requestsMemory": "requests_memory",
                "requestsStorage": "requests_storage",
                "servicesLoadBalancers": "services_load_balancers",
                "servicesNodePorts": "services_node_ports"
            },
            "rancher2:index/getProjectResourceQuotaProjectLimit:getProjectResourceQuotaProjectLimit": {
                "configMaps": "config_maps",
                "limitsCpu": "limits_cpu",
                "limitsMemory": "limits_memory",
                "persistentVolumeClaims": "persistent_volume_claims",
                "replicationControllers": "replication_controllers",
                "requestsCpu": "requests_cpu",
                "requestsMemory": "requests_memory",
                "requestsStorage": "requests_storage",
                "servicesLoadBalancers": "services_load_balancers",
                "servicesNodePorts": "services_node_ports"
            },
            "rancher2:index/getProjectRoleTemplateBinding:getProjectRoleTemplateBinding": {
                "groupId": "group_id",
                "groupPrincipalId": "group_principal_id",
                "projectId": "project_id",
                "roleTemplateId": "role_template_id",
                "userId": "user_id",
                "userPrincipalId": "user_principal_id"
            },
            "rancher2:index/getRegistry:getRegistry": {
                "namespaceId": "namespace_id",
                "projectId": "project_id"
            },
            "rancher2:index/getRoleTemplate:getRoleTemplate": {
                "defaultRole": "default_role",
                "roleTemplateIds": "role_template_ids"
            },
            "rancher2:index/getRoleTemplateRule:getRoleTemplateRule": {
                "apiGroups": "api_groups",
                "nonResourceUrls": "non_resource_urls",
                "resourceNames": "resource_names"
            },
            "rancher2:index/getSecret:getSecret": {
                "namespaceId": "namespace_id",
                "projectId": "project_id"
            },
            "rancher2:index/getSecretV2:getSecretV2": {
                "clusterId": "cluster_id",
                "resourceVersion": "resource_version"
            },
            "rancher2:index/getStorageClassV2:getStorageClassV2": {
                "allowVolumeExpansion": "allow_volume_expansion",
                "clusterId": "cluster_id",
                "k8sProvisioner": "k8s_provisioner",
                "mountOptions": "mount_options",
                "reclaimPolicy": "reclaim_policy",
                "resourceVersion": "resource_version",
                "volumeBindingMode": "volume_binding_mode"
            },
            "rancher2:index/getUser:getUser": {
                "isExternal": "is_external",
                "principalIds": "principal_ids"
            },
            "rancher2:index/globalDns:GlobalDns": {
                "multiClusterAppId": "multi_cluster_app_id",
                "projectIds": "project_ids",
                "providerId": "provider_id"
            },
            "rancher2:index/globalDnsProvider:GlobalDnsProvider": {
                "alidnsConfig": "alidns_config",
                "cloudflareConfig": "cloudflare_config",
                "dnsProvider": "dns_provider",
                "rootDomain": "root_domain",
                "route53Config": "route53_config"
            },
            "rancher2:index/globalRole:GlobalRole": {
                "inheritedClusterRoles": "inherited_cluster_roles",
                "newUserDefault": "new_user_default"
            },
            "rancher2:index/globalRoleBinding:GlobalRoleBinding": {
                "globalRoleId": "global_role_id",
                "groupPrincipalId": "group_principal_id",
                "userId": "user_id"
            },
            "rancher2:index/machineConfigV2:MachineConfigV2": {
                "amazonec2Config": "amazonec2_config",
                "azureConfig": "azure_config",
                "digitaloceanConfig": "digitalocean_config",
                "fleetNamespace": "fleet_namespace",
                "generateName": "generate_name",
                "harvesterConfig": "harvester_config",
                "linodeConfig": "linode_config",
                "openstackConfig": "openstack_config",
                "resourceVersion": "resource_version",
                "vsphereConfig": "vsphere_config"
            },
            "rancher2:index/multiClusterApp:MultiClusterApp": {
                "catalogName": "catalog_name",
                "revisionHistoryLimit": "revision_history_limit",
                "revisionId": "revision_id",
                "templateName": "template_name",
                "templateVersion": "template_version",
                "templateVersionId": "template_version_id",
                "upgradeStrategy": "upgrade_strategy"
            },
            "rancher2:index/namespace:Namespace": {
                "containerResourceLimit": "container_resource_limit",
                "projectId": "project_id",
                "resourceQuota": "resource_quota",
                "waitForCluster": "wait_for_cluster"
            },
            "rancher2:index/nodeDriver:NodeDriver": {
                "externalId": "external_id",
                "uiUrl": "ui_url",
                "whitelistDomains": "whitelist_domains"
            },
            "rancher2:index/nodePool:NodePool": {
                "clusterId": "cluster_id",
                "controlPlane": "control_plane",
                "deleteNotReadyAfterSecs": "delete_not_ready_after_secs",
                "drainBeforeDelete": "drain_before_delete",
                "hostnamePrefix": "hostname_prefix",
                "nodeTaints": "node_taints",
                "nodeTemplateId": "node_template_id"
            },
            "rancher2:index/nodeTemplate:NodeTemplate": {
                "amazonec2Config": "amazonec2_config",
                "authCertificateAuthority": "auth_certificate_authority",
                "authKey": "auth_key",
                "azureConfig": "azure_config",
                "cloudCredentialId": "cloud_credential_id",
                "digitaloceanConfig": "digitalocean_config",
                "driverId": "driver_id",
                "engineEnv": "engine_env",
                "engineInsecureRegistries": "engine_insecure_registry",
                "engineInstallUrl": "engine_install_url",
                "engineLabel": "engine_label",
                "engineOpt": "engine_opt",
                "engineRegistryMirrors": "engine_registry_mirror",
                "engineStorageDriver": "engine_storage_driver",
                "harvesterConfig": "harvester_config",
                "hetznerConfig": "hetzner_config",
                "linodeConfig": "linode_config",
                "nodeTaints": "node_taints",
                "opennebulaConfig": "opennebula_config",
                "openstackConfig": "openstack_config",
                "outscaleConfig": "outscale_config",
                "useInternalIpAddress": "use_internal_ip_address",
                "vsphereConfig": "vsphere_config"
            },
            "rancher2:index/notifier:Notifier": {
                "clusterId": "cluster_id",
                "dingtalkConfig": "dingtalk_config",
                "msteamsConfig": "msteams_config",
                "pagerdutyConfig": "pagerduty_config",
                "sendResolved": "send_resolved",
                "slackConfig": "slack_config",
                "smtpConfig": "smtp_config",
                "webhookConfig": "webhook_config",
                "wechatConfig": "wechat_config"
            },
            "rancher2:index/podSecurityPolicyTemplate:PodSecurityPolicyTemplate": {
                "allowPrivilegeEscalation": "allow_privilege_escalation",
                "allowedCapabilities": "allowed_capabilities",
                "allowedCsiDrivers": "allowed_csi_driver",
                "allowedFlexVolumes": "allowed_flex_volume",
                "allowedHostPaths": "allowed_host_path",
                "allowedProcMountTypes": "allowed_proc_mount_types",
                "allowedUnsafeSysctls": "allowed_unsafe_sysctls",
                "defaultAddCapabilities": "default_add_capabilities",
                "defaultAllowPrivilegeEscalation": "default_allow_privilege_escalation",
                "forbiddenSysctls": "forbidden_sysctls",
                "fsGroup": "fs_group",
                "hostIpc": "host_ipc",
                "hostNetwork": "host_network",
                "hostPid": "host_pid",
                "hostPorts": "host_port",
                "readOnlyRootFilesystem": "read_only_root_filesystem",
                "requiredDropCapabilities": "required_drop_capabilities",
                "runAsGroup": "run_as_group",
                "runAsUser": "run_as_user",
                "runtimeClass": "runtime_class",
                "seLinux": "se_linux",
                "supplementalGroup": "supplemental_group"
            },
            "rancher2:index/project:Project": {
                "clusterId": "cluster_id",
                "containerResourceLimit": "container_resource_limit",
                "enableProjectMonitoring": "enable_project_monitoring",
                "podSecurityPolicyTemplateId": "pod_security_policy_template_id",
                "projectMonitoringInput": "project_monitoring_input",
                "resourceQuota": "resource_quota",
                "waitForCluster": "wait_for_cluster"
            },
            "rancher2:index/projectAlertGroup:ProjectAlertGroup": {
                "groupIntervalSeconds": "group_interval_seconds",
                "groupWaitSeconds": "group_wait_seconds",
                "projectId": "project_id",
                "repeatIntervalSeconds": "repeat_interval_seconds"
            },
            "rancher2:index/projectAlertRule:ProjectAlertRule": {
                "groupId": "group_id",
                "groupIntervalSeconds": "group_interval_seconds",
                "groupWaitSeconds": "group_wait_seconds",
                "metricRule": "metric_rule",
                "podRule": "pod_rule",
                "projectId": "project_id",
                "repeatIntervalSeconds": "repeat_interval_seconds",
                "workloadRule": "workload_rule"
            },
            "rancher2:index/projectRoleTemplateBinding:ProjectRoleTemplateBinding": {
                "groupId": "group_id",
                "groupPrincipalId": "group_principal_id",
                "projectId": "project_id",
                "roleTemplateId": "role_template_id",
                "userId": "user_id",
                "userPrincipalId": "user_principal_id"
            },
            "rancher2:index/registry:Registry": {
                "namespaceId": "namespace_id",
                "projectId": "project_id"
            },
            "rancher2:index/roleTemplate:RoleTemplate": {
                "defaultRole": "default_role",
                "roleTemplateIds": "role_template_ids"
            },
            "rancher2:index/secret:Secret": {
                "namespaceId": "namespace_id",
                "projectId": "project_id"
            },
            "rancher2:index/secretV2:SecretV2": {
                "clusterId": "cluster_id",
                "resourceVersion": "resource_version"
            },
            "rancher2:index/storageClassV2:StorageClassV2": {
                "allowVolumeExpansion": "allow_volume_expansion",
                "clusterId": "cluster_id",
                "k8sProvisioner": "k8s_provisioner",
                "mountOptions": "mount_options",
                "reclaimPolicy": "reclaim_policy",
                "resourceVersion": "resource_version",
                "volumeBindingMode": "volume_binding_mode"
            },
            "rancher2:index/token:Token": {
                "accessKey": "access_key",
                "clusterId": "cluster_id",
                "secretKey": "secret_key",
                "userId": "user_id"
            },
            "rancher2:index/user:User": {
                "principalIds": "principal_ids"
            },
            "rancher2:index:Provider": {
                "accessKey": "access_key",
                "apiUrl": "api_url",
                "caCerts": "ca_certs",
                "secretKey": "secret_key",
                "tokenKey": "token_key"
            }
        },
        "renamedConfigProperties": {
            "accessKey": "access_key",
            "apiUrl": "api_url",
            "caCerts": "ca_certs",
            "secretKey": "secret_key",
            "tokenKey": "token_key"
        }
    }
}