name: ci # FIXME: what should we name this?
on:
  pull_request:
    branches:
      - master
  push:
    tags: [ "v*" ]

env:
  GO111MODULE: on
  PROVIDER: rancher2
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  lint:
    runs-on: ubuntu-latest
    container: golangci/golangci-lint:v1.25.1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Go 1.13
        uses: actions/setup-go@v2
        with:
          go-version: '1.13.x'
      - name: Install tf2pulumi
        uses: jaxxstorm/action-install-gh-release@release/v1-alpha
        with:
          repo: pulumi/tf2pulumi
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@release/v1-alpha
        with:
          repo: pulumi/pulumictl
          tag: v0.0.1-alpha.2
      - name: Run golangci
        run: make lint_provider
  prerequisites:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Go 1.13
        uses: actions/setup-go@v2
        with:
          go-version: '1.13.x'
      - name: Install tf2pulumi
        uses: jaxxstorm/action-install-gh-release@release/v1-alpha
        with:
          repo: pulumi/tf2pulumi
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@release/v1-alpha
        with:
          repo: pulumi/pulumictl
          tag: v0.0.1-alpha.2
      - name: Build tfgen & provider binaries
        run: make provider
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: pulumi-${{ env.PROVIDER }}
          path: ${{ github.workspace }}/bin
  build_sdk:
    runs-on: ubuntu-latest
    needs: prerequisites
    strategy:
      fail-fast: true
      matrix:
        language: [ "nodejs", "python", "dotnet"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Unshallow
        run: git fetch --prune --unshallow
      - uses: actions/download-artifact@v2
        with:
          name: pulumi-${{ env.PROVIDER }}
          path: ${{ github.workspace }}/bin
      - name: Restore binary perms
        run: find ${{ github.workspace }}/bin -name 'pulumi-*-${{ env.PROVIDER }}' -print -exec chmod +x {} \;
        # FIXME: if we use a container here, we don't need these setup steps
      - name: Install Go 1.13
        uses: actions/setup-go@v2
        with:
          go-version: '1.13.x'
      - name: Install tf2pulumi
        uses: jaxxstorm/action-install-gh-release@release/v1-alpha
        with:
          repo: pulumi/tf2pulumi
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@release/v1-alpha
        with:
          repo: pulumi/pulumictl
          tag: v0.0.1-alpha.2
      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: '13.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Set up dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.201'
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.x'
      - name: Build SDK
        run: make build_${{ matrix.language }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.language  }}-sdk
          path: ${{ github.workspace}}/sdk/${{ matrix.language }}
  test:
    runs-on: ubuntu-latest
    needs: build_sdk
    strategy:
      fail-fast: false
      matrix:
        language: [ "nodejs", "python", "dotnet"]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Download binaries
      uses: actions/download-artifact@v2
      with:
        name: pulumi-${{ env.PROVIDER }}
        path: ${{ github.workspace }}/bin
    - name: Download SDK
      uses: actions/download-artifact@v2
      with:
        name: ${{ matrix.language  }}-sdk
        path: ${{ github.workspace}}/sdk/${{ matrix.language }}
    - name: Restore binary perms
      run: find ${{ github.workspace }} -name 'pulumi-*-${{ env.PROVIDER }}' -print -exec chmod +x {} \;
      # FIXME: if we use a container here, we don't need these setup steps
    - name: Update path
      run: echo "::add-path::${{ github.workspace }}/bin"
    - name: Install Go 1.13
      uses: actions/setup-go@v2
      with:
        go-version: '1.13.x'
    - name: Install tf2pulumi
      uses: jaxxstorm/action-install-gh-release@release/v1-alpha
      with:
        repo: pulumi/tf2pulumi
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@release/v1-alpha
      with:
        repo: pulumi/pulumictl
        tag: v0.0.1-alpha.2
    - name: Set up Node
      uses: actions/setup-node@v1
      with:
        node-version: '13.x'
        registry-url: 'https://registry.npmjs.org'
    - name: Set up dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.201'
    - name: Install Pulumi CLI
      uses: pulumi/action-install-pulumi-cli@releases/v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        tag: '3.x'
    - uses: dschep/install-pipenv-action@v1
    - name: Install dependencies
      run: ./scripts/install-${{ matrix.language}}-sdk
    - name: Run tests
      env:
        PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
        PULUMI_API: "https://api.pulumi-staging.io"
        RANCHER_ACCESS_KEY: "token-74zzn"
        RANCHER_SECRET_KEY: ${{ secrets.RANCHER_SECRET_KEY }}
        RANCHER_INSECURE: true
        RANCHER_URL: ${{ secrets.RANCHER_URL }}
        PULUMI_LOCAL_NUGET: ${{ github.workspace }}/nuget
      run: cd examples && go test -v -count=1 -cover -timeout 2h -tags=${{ matrix.langage }} -parallel 4 .
  publish:
    runs-on: ubuntu-latest
    #needs: test
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
        role-to-assume: ${{ secrets.AWS_UPLOAD_ROLE_ARN }}
        role-external-id: "upload-pulumi-release"
        role-duration-seconds: 3600
        role-session-name: ${{ env.PROVIDER}}@githubActions
    




