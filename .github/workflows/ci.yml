name: ci # FIXME: what should we name this?
on:
  pull_request:
    branches:
      - master
  push:
    tags: [ "v*" ]

env:
  GO111MODULE: on
  PROVIDER: rancher2

jobs:
  lint:
    runs-on: ubuntu-latest
    container: golangci/golangci-lint:v1.25.1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Go 1.13
        uses: actions/setup-go@v2
        with:
          go-version: '1.13.x'
      - name: Install tf2pulumi
        uses: pulumi/action-install-tf2pulumi@releases/v1
        with:
          tf2pulumi-version: 0.7.0
      - name: Generate provider and schema
        run: make generate
      - name: Run golangci
        run: make lint_provider
  prerequisites:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Go 1.13
        uses: actions/setup-go@v2
        with:
          go-version: '1.13.x'
      - name: Install tf2pulumi
        uses: pulumi/action-install-tf2pulumi@releases/v1
        with:
          tf2pulumi-version: 0.7.0
      - name: Download dependencies
        run: |
          cd provider
          go mod tidy
          go mod download
      - name: Build tfgen & provider binaries
        run: make provider
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: pulumi-${{ env.PROVIDER }}
          path: ${{ github.workspace }}/bin
  build_sdk:
    runs-on: ubuntu-latest
    needs: prerequisites
    strategy:
      fail-fast: true
      matrix:
        language: [ "nodejs", "python", "dotnet"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: pulumi-${{ env.PROVIDER }}
          path: ${{ github.workspace }}/bin
      - name: Restore binary perms
        run: find ${{ github.workspace }}/bin -name 'pulumi-*-${{ env.PROVIDER }}' -print -exec chmod +x {} \;
        # FIXME: if we use a container here, we don't need these setup steps
      - name: Install Go 1.13
        uses: actions/setup-go@v2
        with:
          go-version: '1.13.x'
      - name: Install tf2pulumi
        uses: pulumi/action-install-tf2pulumi@releases/v1
        with:
          tf2pulumi-version: 0.7.0
      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: '13.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Set up dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.201'
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.x'
      - name: Build SDK
        run: make build_${{ matrix.language }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.language  }}-sdk
          path: ${{ github.workspace}}/sdk/${{ matrix.language }}
  test:
    runs-on: ubuntu-latest
    needs: build_sdk
    strategy:
      fail-fast: false
      matrix:
        language: [ "nodejs", "python", "dotnet"]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Download binaries
      uses: actions/download-artifact@v2
      with:
        name: pulumi-${{ env.PROVIDER }}
        path: ${{ github.workspace }}/bin
    - name: Download SDK
      uses: actions/download-artifact@v2
      with:
        name: ${{ matrix.language  }}-sdk
        path: ${{ github.workspace}}/sdk/${{ matrix.language }}
    - name: Restore binary perms
      run: find ${{ github.workspace }} -name 'pulumi-*-${{ env.PROVIDER }}' -print -exec chmod +x {} \;
      # FIXME: if we use a container here, we don't need these setup steps
    - name: Install Go 1.13
      uses: actions/setup-go@v2
      with:
        go-version: '1.13.x'
    - name: Install tf2pulumi
      uses: pulumi/action-install-tf2pulumi@releases/v1
      with:
        tf2pulumi-version: 0.7.0
    - name: Set up Node
      uses: actions/setup-node@v1
      with:
        node-version: '13.x'
        registry-url: 'https://registry.npmjs.org'
    - name: Set up dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.201'
    - name: Install Pulumi CLI
      uses: pulumi/action-install-pulumi-cli@releases/v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - uses: dschep/install-pipenv-action@v1
    - name: Install dependencies
      run: ./scripts/install-${{ matrix.language}}-sdk
    - name: Run tests
      env:
        PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
      run: make test_all TEST_TAGS=${{ matrix.language }} PULUMI_ROOT=${{ github.workspace }}

