env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GO111MODULE: "on"
  PROVIDER: rancher2
jobs:
  build_sdk:
    name: build_sdk
    needs: prerequisites
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
    - name: Unshallow clone for tags
      run: git fetch --prune --unshallow
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.13.x
    - name: Install tf2pulumi
      uses: jaxxstorm/action-install-gh-release@release/v1-alpha
      with:
        repo: pulumi/tf2pulumi
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@release/v1-alpha
      with:
        repo: pulumi/pulumictl
    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: 13.x
        registry-url: https://registry.npmjs.org
    - name: Setup DotNet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.201
    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.x
    - name: Download provider + tfgen binaries
      uses: actions/download-artifact@v2
      with:
        name: pulumi-${{ env.PROVIDER }}
        path: ${{ github.workspace }}/bin
    - name: Restore binary perms
      run: find ${{ github.workspace }} -name "pulumi-*-${{ env.PROVIDER }}" -print
        -exec chmod +x {} \;
    - name: Build SDK
      run: make -f Makefile.github build_${{ matrix.language }}
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.language  }}-sdk
        path: ${{ github.workspace}}/sdk/${{ matrix.language }}
    strategy:
      fail-fast: true
      matrix:
        language:
        - nodejs
        - python
        - dotnet
  lint:
    container: golangci/golangci-lint:v1.25.1
    name: lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
    - name: Unshallow clone for tags
      run: git fetch --prune --unshallow
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.13.x
    - name: Install tf2pulumi
      uses: jaxxstorm/action-install-gh-release@release/v1-alpha
      with:
        repo: pulumi/tf2pulumi
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@release/v1-alpha
      with:
        repo: pulumi/pulumictl
    - name: Run golangci
      run: make -f Makefile.github lint_provider
  prerequisites:
    name: prerequisites
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
    - name: Unshallow clone for tags
      run: git fetch --prune --unshallow
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.13.x
    - name: Install tf2pulumi
      uses: jaxxstorm/action-install-gh-release@release/v1-alpha
      with:
        repo: pulumi/tf2pulumi
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@release/v1-alpha
      with:
        repo: pulumi/pulumictl
    - name: Build tfgen & provider binaries
      run: make  -f Makefile.github provider
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: pulumi-${{ env.PROVIDER }}
        path: ${{ github.workspace }}/bin
  publish:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-region: us-east-2
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        role-duration-seconds: 3600
        role-external-id: upload-pulumi-release
        role-session-name: ${{ env.PROVIDER}}@githubActions
        role-to-assume: ${{ secrets.AWS_UPLOAD_ROLE_ARN }}
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.13.x
    - env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v2
      with:
        args: release --rm-dist
        version: latest
  test:
    name: test
    needs: build_sdk
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
    - name: Unshallow clone for tags
      run: git fetch --prune --unshallow
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.13.x
    - name: Install tf2pulumi
      uses: jaxxstorm/action-install-gh-release@release/v1-alpha
      with:
        repo: pulumi/tf2pulumi
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@release/v1-alpha
      with:
        repo: pulumi/pulumictl
    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: 13.x
        registry-url: https://registry.npmjs.org
    - name: Setup DotNet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.201
    - name: Setup Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.x
    - name: Download provider + tfgen binaries
      uses: actions/download-artifact@v2
      with:
        name: pulumi-${{ env.PROVIDER }}
        path: ${{ github.workspace }}/bin
    - name: Restore binary perms
      run: find ${{ github.workspace }} -name "pulumi-*-${{ env.PROVIDER }}" -print
        -exec chmod +x {} \;
    - name: Download SDK
      uses: actions/download-artifact@v2
      with:
        name: ${{ matrix.language  }}-sdk
        path: ${{ github.workspace}}/sdk/${{ matrix.language }}
    - name: Update path
      run: echo ::add-path::${{ github.workspace }}/bin
    - name: Install Pulumi CLI
      uses: pulumi/action-install-pulumi-cli@releases/v1
    - name: Install pipenv
      uses: dschep/install-pipenv-action@v1
    - name: Install dependencies
      run: ./scripts/install-${{ matrix.language}}-sdk
    - env:
        PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
        PULUMI_API: https://api.pulumi-staging.io
        PULUMI_LOCAL_NUGET: ${{ github.workspace }}/nuget
        RANCHER_ACCESS_KEY: token-74zzn
        RANCHER_INSECURE: "true"
        RANCHER_SECRET_KEY: ${{ secrets.RANCHER_SECRET_KEY }}
        RANCHER_URL: ${{ secrets.RANCHER_URL }}
      name: Run tests
      run: cd examples && go test -v -count=1 -cover -timeout 2h -tags=${{ matrix.langage
        }} -parallel 4 .
    strategy:
      fail-fast: true
      matrix:
        language:
        - nodejs
        - python
        - dotnet
name: release
"on":
  push:
    tags:
    - v*.*.*-**
