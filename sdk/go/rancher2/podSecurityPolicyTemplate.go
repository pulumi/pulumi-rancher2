// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package rancher2

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a Rancher v2 PodSecurityPolicyTemplate resource. This can be used to create PodSecurityPolicyTemplates for Rancher v2 environments and retrieve their information.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-rancher2/sdk/v2/go/rancher2"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := rancher2.NewPodSecurityPolicyTemplate(ctx, "foo", &rancher2.PodSecurityPolicyTemplateArgs{
// 			AllowPrivilegeEscalation: pulumi.Bool(false),
// 			AllowedCsiDrivers: rancher2.PodSecurityPolicyTemplateAllowedCsiDriverArray{
// 				&rancher2.PodSecurityPolicyTemplateAllowedCsiDriverArgs{
// 					Name: pulumi.String("something"),
// 				},
// 				&rancher2.PodSecurityPolicyTemplateAllowedCsiDriverArgs{
// 					Name: pulumi.String("something-else"),
// 				},
// 			},
// 			AllowedFlexVolumes: rancher2.PodSecurityPolicyTemplateAllowedFlexVolumeArray{
// 				&rancher2.PodSecurityPolicyTemplateAllowedFlexVolumeArgs{
// 					Driver: pulumi.String("something"),
// 				},
// 				&rancher2.PodSecurityPolicyTemplateAllowedFlexVolumeArgs{
// 					Driver: pulumi.String("something-else"),
// 				},
// 			},
// 			AllowedHostPaths: rancher2.PodSecurityPolicyTemplateAllowedHostPathArray{
// 				&rancher2.PodSecurityPolicyTemplateAllowedHostPathArgs{
// 					PathPrefix: pulumi.String("/"),
// 					ReadOnly:   pulumi.Bool(true),
// 				},
// 				&rancher2.PodSecurityPolicyTemplateAllowedHostPathArgs{
// 					PathPrefix: pulumi.String("//"),
// 					ReadOnly:   pulumi.Bool(false),
// 				},
// 			},
// 			AllowedProcMountTypes: pulumi.StringArray{
// 				pulumi.String("Default"),
// 			},
// 			DefaultAllowPrivilegeEscalation: pulumi.Bool(false),
// 			Description:                     pulumi.String("Terraform PodSecurityPolicyTemplate acceptance test - update"),
// 			FsGroup: &rancher2.PodSecurityPolicyTemplateFsGroupArgs{
// 				Ranges: rancher2.PodSecurityPolicyTemplateFsGroupRangeArray{
// 					&rancher2.PodSecurityPolicyTemplateFsGroupRangeArgs{
// 						Max: pulumi.Int(100),
// 						Min: pulumi.Int(0),
// 					},
// 					&rancher2.PodSecurityPolicyTemplateFsGroupRangeArgs{
// 						Max: pulumi.Int(100),
// 						Min: pulumi.Int(0),
// 					},
// 				},
// 				Rule: pulumi.String("MustRunAs"),
// 			},
// 			HostIpc:     pulumi.Bool(false),
// 			HostNetwork: pulumi.Bool(false),
// 			HostPid:     pulumi.Bool(false),
// 			HostPorts: rancher2.PodSecurityPolicyTemplateHostPortArray{
// 				&rancher2.PodSecurityPolicyTemplateHostPortArgs{
// 					Max: pulumi.Int(65535),
// 					Min: pulumi.Int(0),
// 				},
// 				&rancher2.PodSecurityPolicyTemplateHostPortArgs{
// 					Max: pulumi.Int(8080),
// 					Min: pulumi.Int(1024),
// 				},
// 			},
// 			Privileged:             pulumi.Bool(false),
// 			ReadOnlyRootFilesystem: pulumi.Bool(false),
// 			RequiredDropCapabilities: pulumi.StringArray{
// 				pulumi.String("something"),
// 			},
// 			RunAsGroup: &rancher2.PodSecurityPolicyTemplateRunAsGroupArgs{
// 				Ranges: rancher2.PodSecurityPolicyTemplateRunAsGroupRangeArray{
// 					&rancher2.PodSecurityPolicyTemplateRunAsGroupRangeArgs{
// 						Max: pulumi.Int(100),
// 						Min: pulumi.Int(1),
// 					},
// 					&rancher2.PodSecurityPolicyTemplateRunAsGroupRangeArgs{
// 						Max: pulumi.Int(1024),
// 						Min: pulumi.Int(2),
// 					},
// 				},
// 				Rule: pulumi.String("MustRunAs"),
// 			},
// 			RunAsUser: &rancher2.PodSecurityPolicyTemplateRunAsUserArgs{
// 				Ranges: rancher2.PodSecurityPolicyTemplateRunAsUserRangeArray{
// 					&rancher2.PodSecurityPolicyTemplateRunAsUserRangeArgs{
// 						Max: pulumi.Int(100),
// 						Min: pulumi.Int(1),
// 					},
// 					&rancher2.PodSecurityPolicyTemplateRunAsUserRangeArgs{
// 						Max: pulumi.Int(1024),
// 						Min: pulumi.Int(2),
// 					},
// 				},
// 				Rule: pulumi.String("MustRunAs"),
// 			},
// 			RuntimeClass: &rancher2.PodSecurityPolicyTemplateRuntimeClassArgs{
// 				AllowedRuntimeClassNames: pulumi.StringArray{
// 					pulumi.String("something"),
// 				},
// 				DefaultRuntimeClassName: pulumi.String("something"),
// 			},
// 			SeLinux: &rancher2.PodSecurityPolicyTemplateSeLinuxArgs{
// 				Rule: pulumi.String("RunAsAny"),
// 			},
// 			SupplementalGroup: &rancher2.PodSecurityPolicyTemplateSupplementalGroupArgs{
// 				Rule: pulumi.String("RunAsAny"),
// 			},
// 			Volumes: pulumi.StringArray{
// 				pulumi.String("azureFile"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type PodSecurityPolicyTemplate struct {
	pulumi.CustomResourceState

	// = (Optional)
	AllowPrivilegeEscalation pulumi.BoolOutput `pulumi:"allowPrivilegeEscalation"`
	// (list)
	AllowedCapabilities pulumi.StringArrayOutput `pulumi:"allowedCapabilities"`
	// (list)
	AllowedCsiDrivers PodSecurityPolicyTemplateAllowedCsiDriverArrayOutput `pulumi:"allowedCsiDrivers"`
	// (list)
	AllowedFlexVolumes PodSecurityPolicyTemplateAllowedFlexVolumeArrayOutput `pulumi:"allowedFlexVolumes"`
	// (list)
	AllowedHostPaths PodSecurityPolicyTemplateAllowedHostPathArrayOutput `pulumi:"allowedHostPaths"`
	// (list)
	AllowedProcMountTypes pulumi.StringArrayOutput `pulumi:"allowedProcMountTypes"`
	// (list)
	AllowedUnsafeSysctls pulumi.StringArrayOutput `pulumi:"allowedUnsafeSysctls"`
	// Annotations for PodSecurityPolicyTemplate object (map)
	Annotations pulumi.MapOutput `pulumi:"annotations"`
	// (list)
	DefaultAddCapabilities pulumi.StringArrayOutput `pulumi:"defaultAddCapabilities"`
	// (list)
	DefaultAllowPrivilegeEscalation pulumi.BoolPtrOutput `pulumi:"defaultAllowPrivilegeEscalation"`
	// The PodSecurityPolicyTemplate description (string)
	Description pulumi.StringOutput `pulumi:"description"`
	// (list)
	ForbiddenSysctls pulumi.StringArrayOutput `pulumi:"forbiddenSysctls"`
	// (list maxitems:1)
	FsGroup PodSecurityPolicyTemplateFsGroupOutput `pulumi:"fsGroup"`
	// (bool)
	HostIpc pulumi.BoolOutput `pulumi:"hostIpc"`
	// hostNetwork determines if the policy allows the use of HostNetwork in the pod spec.
	HostNetwork pulumi.BoolOutput `pulumi:"hostNetwork"`
	// (bool)
	HostPid pulumi.BoolOutput `pulumi:"hostPid"`
	// (list)
	HostPorts PodSecurityPolicyTemplateHostPortArrayOutput `pulumi:"hostPorts"`
	// Labels for PodSecurityPolicyTemplate object (map)
	Labels pulumi.MapOutput `pulumi:"labels"`
	// The name of the PodSecurityPolicyTemplate (string)
	Name pulumi.StringOutput `pulumi:"name"`
	// (bool)
	Privileged pulumi.BoolOutput `pulumi:"privileged"`
	// (bool)
	ReadOnlyRootFilesystem pulumi.BoolOutput `pulumi:"readOnlyRootFilesystem"`
	// (list)
	RequiredDropCapabilities pulumi.StringArrayOutput `pulumi:"requiredDropCapabilities"`
	// (list maxitems:1)
	RunAsGroup PodSecurityPolicyTemplateRunAsGroupPtrOutput `pulumi:"runAsGroup"`
	// (list maxitems:1)
	RunAsUser PodSecurityPolicyTemplateRunAsUserOutput `pulumi:"runAsUser"`
	// (list maxitems:1)
	RuntimeClass PodSecurityPolicyTemplateRuntimeClassPtrOutput `pulumi:"runtimeClass"`
	// (list maxitems:1)
	SeLinux PodSecurityPolicyTemplateSeLinuxOutput `pulumi:"seLinux"`
	// (list maxitems:1)
	SupplementalGroup PodSecurityPolicyTemplateSupplementalGroupOutput `pulumi:"supplementalGroup"`
	// (list)
	Volumes pulumi.StringArrayOutput `pulumi:"volumes"`
}

// NewPodSecurityPolicyTemplate registers a new resource with the given unique name, arguments, and options.
func NewPodSecurityPolicyTemplate(ctx *pulumi.Context,
	name string, args *PodSecurityPolicyTemplateArgs, opts ...pulumi.ResourceOption) (*PodSecurityPolicyTemplate, error) {
	if args == nil {
		args = &PodSecurityPolicyTemplateArgs{}
	}
	var resource PodSecurityPolicyTemplate
	err := ctx.RegisterResource("rancher2:index/podSecurityPolicyTemplate:PodSecurityPolicyTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPodSecurityPolicyTemplate gets an existing PodSecurityPolicyTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPodSecurityPolicyTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PodSecurityPolicyTemplateState, opts ...pulumi.ResourceOption) (*PodSecurityPolicyTemplate, error) {
	var resource PodSecurityPolicyTemplate
	err := ctx.ReadResource("rancher2:index/podSecurityPolicyTemplate:PodSecurityPolicyTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PodSecurityPolicyTemplate resources.
type podSecurityPolicyTemplateState struct {
	// = (Optional)
	AllowPrivilegeEscalation *bool `pulumi:"allowPrivilegeEscalation"`
	// (list)
	AllowedCapabilities []string `pulumi:"allowedCapabilities"`
	// (list)
	AllowedCsiDrivers []PodSecurityPolicyTemplateAllowedCsiDriver `pulumi:"allowedCsiDrivers"`
	// (list)
	AllowedFlexVolumes []PodSecurityPolicyTemplateAllowedFlexVolume `pulumi:"allowedFlexVolumes"`
	// (list)
	AllowedHostPaths []PodSecurityPolicyTemplateAllowedHostPath `pulumi:"allowedHostPaths"`
	// (list)
	AllowedProcMountTypes []string `pulumi:"allowedProcMountTypes"`
	// (list)
	AllowedUnsafeSysctls []string `pulumi:"allowedUnsafeSysctls"`
	// Annotations for PodSecurityPolicyTemplate object (map)
	Annotations map[string]interface{} `pulumi:"annotations"`
	// (list)
	DefaultAddCapabilities []string `pulumi:"defaultAddCapabilities"`
	// (list)
	DefaultAllowPrivilegeEscalation *bool `pulumi:"defaultAllowPrivilegeEscalation"`
	// The PodSecurityPolicyTemplate description (string)
	Description *string `pulumi:"description"`
	// (list)
	ForbiddenSysctls []string `pulumi:"forbiddenSysctls"`
	// (list maxitems:1)
	FsGroup *PodSecurityPolicyTemplateFsGroup `pulumi:"fsGroup"`
	// (bool)
	HostIpc *bool `pulumi:"hostIpc"`
	// hostNetwork determines if the policy allows the use of HostNetwork in the pod spec.
	HostNetwork *bool `pulumi:"hostNetwork"`
	// (bool)
	HostPid *bool `pulumi:"hostPid"`
	// (list)
	HostPorts []PodSecurityPolicyTemplateHostPort `pulumi:"hostPorts"`
	// Labels for PodSecurityPolicyTemplate object (map)
	Labels map[string]interface{} `pulumi:"labels"`
	// The name of the PodSecurityPolicyTemplate (string)
	Name *string `pulumi:"name"`
	// (bool)
	Privileged *bool `pulumi:"privileged"`
	// (bool)
	ReadOnlyRootFilesystem *bool `pulumi:"readOnlyRootFilesystem"`
	// (list)
	RequiredDropCapabilities []string `pulumi:"requiredDropCapabilities"`
	// (list maxitems:1)
	RunAsGroup *PodSecurityPolicyTemplateRunAsGroup `pulumi:"runAsGroup"`
	// (list maxitems:1)
	RunAsUser *PodSecurityPolicyTemplateRunAsUser `pulumi:"runAsUser"`
	// (list maxitems:1)
	RuntimeClass *PodSecurityPolicyTemplateRuntimeClass `pulumi:"runtimeClass"`
	// (list maxitems:1)
	SeLinux *PodSecurityPolicyTemplateSeLinux `pulumi:"seLinux"`
	// (list maxitems:1)
	SupplementalGroup *PodSecurityPolicyTemplateSupplementalGroup `pulumi:"supplementalGroup"`
	// (list)
	Volumes []string `pulumi:"volumes"`
}

type PodSecurityPolicyTemplateState struct {
	// = (Optional)
	AllowPrivilegeEscalation pulumi.BoolPtrInput
	// (list)
	AllowedCapabilities pulumi.StringArrayInput
	// (list)
	AllowedCsiDrivers PodSecurityPolicyTemplateAllowedCsiDriverArrayInput
	// (list)
	AllowedFlexVolumes PodSecurityPolicyTemplateAllowedFlexVolumeArrayInput
	// (list)
	AllowedHostPaths PodSecurityPolicyTemplateAllowedHostPathArrayInput
	// (list)
	AllowedProcMountTypes pulumi.StringArrayInput
	// (list)
	AllowedUnsafeSysctls pulumi.StringArrayInput
	// Annotations for PodSecurityPolicyTemplate object (map)
	Annotations pulumi.MapInput
	// (list)
	DefaultAddCapabilities pulumi.StringArrayInput
	// (list)
	DefaultAllowPrivilegeEscalation pulumi.BoolPtrInput
	// The PodSecurityPolicyTemplate description (string)
	Description pulumi.StringPtrInput
	// (list)
	ForbiddenSysctls pulumi.StringArrayInput
	// (list maxitems:1)
	FsGroup PodSecurityPolicyTemplateFsGroupPtrInput
	// (bool)
	HostIpc pulumi.BoolPtrInput
	// hostNetwork determines if the policy allows the use of HostNetwork in the pod spec.
	HostNetwork pulumi.BoolPtrInput
	// (bool)
	HostPid pulumi.BoolPtrInput
	// (list)
	HostPorts PodSecurityPolicyTemplateHostPortArrayInput
	// Labels for PodSecurityPolicyTemplate object (map)
	Labels pulumi.MapInput
	// The name of the PodSecurityPolicyTemplate (string)
	Name pulumi.StringPtrInput
	// (bool)
	Privileged pulumi.BoolPtrInput
	// (bool)
	ReadOnlyRootFilesystem pulumi.BoolPtrInput
	// (list)
	RequiredDropCapabilities pulumi.StringArrayInput
	// (list maxitems:1)
	RunAsGroup PodSecurityPolicyTemplateRunAsGroupPtrInput
	// (list maxitems:1)
	RunAsUser PodSecurityPolicyTemplateRunAsUserPtrInput
	// (list maxitems:1)
	RuntimeClass PodSecurityPolicyTemplateRuntimeClassPtrInput
	// (list maxitems:1)
	SeLinux PodSecurityPolicyTemplateSeLinuxPtrInput
	// (list maxitems:1)
	SupplementalGroup PodSecurityPolicyTemplateSupplementalGroupPtrInput
	// (list)
	Volumes pulumi.StringArrayInput
}

func (PodSecurityPolicyTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*podSecurityPolicyTemplateState)(nil)).Elem()
}

type podSecurityPolicyTemplateArgs struct {
	// = (Optional)
	AllowPrivilegeEscalation *bool `pulumi:"allowPrivilegeEscalation"`
	// (list)
	AllowedCapabilities []string `pulumi:"allowedCapabilities"`
	// (list)
	AllowedCsiDrivers []PodSecurityPolicyTemplateAllowedCsiDriver `pulumi:"allowedCsiDrivers"`
	// (list)
	AllowedFlexVolumes []PodSecurityPolicyTemplateAllowedFlexVolume `pulumi:"allowedFlexVolumes"`
	// (list)
	AllowedHostPaths []PodSecurityPolicyTemplateAllowedHostPath `pulumi:"allowedHostPaths"`
	// (list)
	AllowedProcMountTypes []string `pulumi:"allowedProcMountTypes"`
	// (list)
	AllowedUnsafeSysctls []string `pulumi:"allowedUnsafeSysctls"`
	// Annotations for PodSecurityPolicyTemplate object (map)
	Annotations map[string]interface{} `pulumi:"annotations"`
	// (list)
	DefaultAddCapabilities []string `pulumi:"defaultAddCapabilities"`
	// (list)
	DefaultAllowPrivilegeEscalation *bool `pulumi:"defaultAllowPrivilegeEscalation"`
	// The PodSecurityPolicyTemplate description (string)
	Description *string `pulumi:"description"`
	// (list)
	ForbiddenSysctls []string `pulumi:"forbiddenSysctls"`
	// (list maxitems:1)
	FsGroup *PodSecurityPolicyTemplateFsGroup `pulumi:"fsGroup"`
	// (bool)
	HostIpc *bool `pulumi:"hostIpc"`
	// hostNetwork determines if the policy allows the use of HostNetwork in the pod spec.
	HostNetwork *bool `pulumi:"hostNetwork"`
	// (bool)
	HostPid *bool `pulumi:"hostPid"`
	// (list)
	HostPorts []PodSecurityPolicyTemplateHostPort `pulumi:"hostPorts"`
	// Labels for PodSecurityPolicyTemplate object (map)
	Labels map[string]interface{} `pulumi:"labels"`
	// The name of the PodSecurityPolicyTemplate (string)
	Name *string `pulumi:"name"`
	// (bool)
	Privileged *bool `pulumi:"privileged"`
	// (bool)
	ReadOnlyRootFilesystem *bool `pulumi:"readOnlyRootFilesystem"`
	// (list)
	RequiredDropCapabilities []string `pulumi:"requiredDropCapabilities"`
	// (list maxitems:1)
	RunAsGroup *PodSecurityPolicyTemplateRunAsGroup `pulumi:"runAsGroup"`
	// (list maxitems:1)
	RunAsUser *PodSecurityPolicyTemplateRunAsUser `pulumi:"runAsUser"`
	// (list maxitems:1)
	RuntimeClass *PodSecurityPolicyTemplateRuntimeClass `pulumi:"runtimeClass"`
	// (list maxitems:1)
	SeLinux *PodSecurityPolicyTemplateSeLinux `pulumi:"seLinux"`
	// (list maxitems:1)
	SupplementalGroup *PodSecurityPolicyTemplateSupplementalGroup `pulumi:"supplementalGroup"`
	// (list)
	Volumes []string `pulumi:"volumes"`
}

// The set of arguments for constructing a PodSecurityPolicyTemplate resource.
type PodSecurityPolicyTemplateArgs struct {
	// = (Optional)
	AllowPrivilegeEscalation pulumi.BoolPtrInput
	// (list)
	AllowedCapabilities pulumi.StringArrayInput
	// (list)
	AllowedCsiDrivers PodSecurityPolicyTemplateAllowedCsiDriverArrayInput
	// (list)
	AllowedFlexVolumes PodSecurityPolicyTemplateAllowedFlexVolumeArrayInput
	// (list)
	AllowedHostPaths PodSecurityPolicyTemplateAllowedHostPathArrayInput
	// (list)
	AllowedProcMountTypes pulumi.StringArrayInput
	// (list)
	AllowedUnsafeSysctls pulumi.StringArrayInput
	// Annotations for PodSecurityPolicyTemplate object (map)
	Annotations pulumi.MapInput
	// (list)
	DefaultAddCapabilities pulumi.StringArrayInput
	// (list)
	DefaultAllowPrivilegeEscalation pulumi.BoolPtrInput
	// The PodSecurityPolicyTemplate description (string)
	Description pulumi.StringPtrInput
	// (list)
	ForbiddenSysctls pulumi.StringArrayInput
	// (list maxitems:1)
	FsGroup PodSecurityPolicyTemplateFsGroupPtrInput
	// (bool)
	HostIpc pulumi.BoolPtrInput
	// hostNetwork determines if the policy allows the use of HostNetwork in the pod spec.
	HostNetwork pulumi.BoolPtrInput
	// (bool)
	HostPid pulumi.BoolPtrInput
	// (list)
	HostPorts PodSecurityPolicyTemplateHostPortArrayInput
	// Labels for PodSecurityPolicyTemplate object (map)
	Labels pulumi.MapInput
	// The name of the PodSecurityPolicyTemplate (string)
	Name pulumi.StringPtrInput
	// (bool)
	Privileged pulumi.BoolPtrInput
	// (bool)
	ReadOnlyRootFilesystem pulumi.BoolPtrInput
	// (list)
	RequiredDropCapabilities pulumi.StringArrayInput
	// (list maxitems:1)
	RunAsGroup PodSecurityPolicyTemplateRunAsGroupPtrInput
	// (list maxitems:1)
	RunAsUser PodSecurityPolicyTemplateRunAsUserPtrInput
	// (list maxitems:1)
	RuntimeClass PodSecurityPolicyTemplateRuntimeClassPtrInput
	// (list maxitems:1)
	SeLinux PodSecurityPolicyTemplateSeLinuxPtrInput
	// (list maxitems:1)
	SupplementalGroup PodSecurityPolicyTemplateSupplementalGroupPtrInput
	// (list)
	Volumes pulumi.StringArrayInput
}

func (PodSecurityPolicyTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*podSecurityPolicyTemplateArgs)(nil)).Elem()
}
