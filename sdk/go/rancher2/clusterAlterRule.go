// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package rancher2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Deprecated: rancher2.ClusterAlterRule has been deprecated in favor of rancher2.ClusterAlertRule
type ClusterAlterRule struct {
	pulumi.CustomResourceState

	// Annotations of the resource
	Annotations pulumi.MapOutput `pulumi:"annotations"`
	// Alert rule cluster ID
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// Alert event rule
	EventRule ClusterAlterRuleEventRulePtrOutput `pulumi:"eventRule"`
	// Alert rule group ID
	GroupId pulumi.StringOutput `pulumi:"groupId"`
	// Alert rule interval seconds
	GroupIntervalSeconds pulumi.IntPtrOutput `pulumi:"groupIntervalSeconds"`
	// Alert rule wait seconds
	GroupWaitSeconds pulumi.IntPtrOutput `pulumi:"groupWaitSeconds"`
	// Alert rule inherited
	Inherited pulumi.BoolPtrOutput `pulumi:"inherited"`
	// Labels of the resource
	Labels pulumi.MapOutput `pulumi:"labels"`
	// Alert metric rule
	MetricRule ClusterAlterRuleMetricRulePtrOutput `pulumi:"metricRule"`
	// Alert rule name
	Name pulumi.StringOutput `pulumi:"name"`
	// Alert node rule
	NodeRule ClusterAlterRuleNodeRulePtrOutput `pulumi:"nodeRule"`
	// Alert rule repeat interval seconds
	RepeatIntervalSeconds pulumi.IntPtrOutput `pulumi:"repeatIntervalSeconds"`
	// Alert rule severity
	Severity pulumi.StringPtrOutput `pulumi:"severity"`
	// Alert system service rule
	SystemServiceRule ClusterAlterRuleSystemServiceRulePtrOutput `pulumi:"systemServiceRule"`
}

// NewClusterAlterRule registers a new resource with the given unique name, arguments, and options.
func NewClusterAlterRule(ctx *pulumi.Context,
	name string, args *ClusterAlterRuleArgs, opts ...pulumi.ResourceOption) (*ClusterAlterRule, error) {
	if args == nil || args.ClusterId == nil {
		return nil, errors.New("missing required argument 'ClusterId'")
	}
	if args == nil || args.GroupId == nil {
		return nil, errors.New("missing required argument 'GroupId'")
	}
	if args == nil {
		args = &ClusterAlterRuleArgs{}
	}
	var resource ClusterAlterRule
	err := ctx.RegisterResource("rancher2:index/clusterAlterRule:ClusterAlterRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClusterAlterRule gets an existing ClusterAlterRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClusterAlterRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterAlterRuleState, opts ...pulumi.ResourceOption) (*ClusterAlterRule, error) {
	var resource ClusterAlterRule
	err := ctx.ReadResource("rancher2:index/clusterAlterRule:ClusterAlterRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClusterAlterRule resources.
type clusterAlterRuleState struct {
	// Annotations of the resource
	Annotations map[string]interface{} `pulumi:"annotations"`
	// Alert rule cluster ID
	ClusterId *string `pulumi:"clusterId"`
	// Alert event rule
	EventRule *ClusterAlterRuleEventRule `pulumi:"eventRule"`
	// Alert rule group ID
	GroupId *string `pulumi:"groupId"`
	// Alert rule interval seconds
	GroupIntervalSeconds *int `pulumi:"groupIntervalSeconds"`
	// Alert rule wait seconds
	GroupWaitSeconds *int `pulumi:"groupWaitSeconds"`
	// Alert rule inherited
	Inherited *bool `pulumi:"inherited"`
	// Labels of the resource
	Labels map[string]interface{} `pulumi:"labels"`
	// Alert metric rule
	MetricRule *ClusterAlterRuleMetricRule `pulumi:"metricRule"`
	// Alert rule name
	Name *string `pulumi:"name"`
	// Alert node rule
	NodeRule *ClusterAlterRuleNodeRule `pulumi:"nodeRule"`
	// Alert rule repeat interval seconds
	RepeatIntervalSeconds *int `pulumi:"repeatIntervalSeconds"`
	// Alert rule severity
	Severity *string `pulumi:"severity"`
	// Alert system service rule
	SystemServiceRule *ClusterAlterRuleSystemServiceRule `pulumi:"systemServiceRule"`
}

type ClusterAlterRuleState struct {
	// Annotations of the resource
	Annotations pulumi.MapInput
	// Alert rule cluster ID
	ClusterId pulumi.StringPtrInput
	// Alert event rule
	EventRule ClusterAlterRuleEventRulePtrInput
	// Alert rule group ID
	GroupId pulumi.StringPtrInput
	// Alert rule interval seconds
	GroupIntervalSeconds pulumi.IntPtrInput
	// Alert rule wait seconds
	GroupWaitSeconds pulumi.IntPtrInput
	// Alert rule inherited
	Inherited pulumi.BoolPtrInput
	// Labels of the resource
	Labels pulumi.MapInput
	// Alert metric rule
	MetricRule ClusterAlterRuleMetricRulePtrInput
	// Alert rule name
	Name pulumi.StringPtrInput
	// Alert node rule
	NodeRule ClusterAlterRuleNodeRulePtrInput
	// Alert rule repeat interval seconds
	RepeatIntervalSeconds pulumi.IntPtrInput
	// Alert rule severity
	Severity pulumi.StringPtrInput
	// Alert system service rule
	SystemServiceRule ClusterAlterRuleSystemServiceRulePtrInput
}

func (ClusterAlterRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterAlterRuleState)(nil)).Elem()
}

type clusterAlterRuleArgs struct {
	// Annotations of the resource
	Annotations map[string]interface{} `pulumi:"annotations"`
	// Alert rule cluster ID
	ClusterId string `pulumi:"clusterId"`
	// Alert event rule
	EventRule *ClusterAlterRuleEventRule `pulumi:"eventRule"`
	// Alert rule group ID
	GroupId string `pulumi:"groupId"`
	// Alert rule interval seconds
	GroupIntervalSeconds *int `pulumi:"groupIntervalSeconds"`
	// Alert rule wait seconds
	GroupWaitSeconds *int `pulumi:"groupWaitSeconds"`
	// Alert rule inherited
	Inherited *bool `pulumi:"inherited"`
	// Labels of the resource
	Labels map[string]interface{} `pulumi:"labels"`
	// Alert metric rule
	MetricRule *ClusterAlterRuleMetricRule `pulumi:"metricRule"`
	// Alert rule name
	Name *string `pulumi:"name"`
	// Alert node rule
	NodeRule *ClusterAlterRuleNodeRule `pulumi:"nodeRule"`
	// Alert rule repeat interval seconds
	RepeatIntervalSeconds *int `pulumi:"repeatIntervalSeconds"`
	// Alert rule severity
	Severity *string `pulumi:"severity"`
	// Alert system service rule
	SystemServiceRule *ClusterAlterRuleSystemServiceRule `pulumi:"systemServiceRule"`
}

// The set of arguments for constructing a ClusterAlterRule resource.
type ClusterAlterRuleArgs struct {
	// Annotations of the resource
	Annotations pulumi.MapInput
	// Alert rule cluster ID
	ClusterId pulumi.StringInput
	// Alert event rule
	EventRule ClusterAlterRuleEventRulePtrInput
	// Alert rule group ID
	GroupId pulumi.StringInput
	// Alert rule interval seconds
	GroupIntervalSeconds pulumi.IntPtrInput
	// Alert rule wait seconds
	GroupWaitSeconds pulumi.IntPtrInput
	// Alert rule inherited
	Inherited pulumi.BoolPtrInput
	// Labels of the resource
	Labels pulumi.MapInput
	// Alert metric rule
	MetricRule ClusterAlterRuleMetricRulePtrInput
	// Alert rule name
	Name pulumi.StringPtrInput
	// Alert node rule
	NodeRule ClusterAlterRuleNodeRulePtrInput
	// Alert rule repeat interval seconds
	RepeatIntervalSeconds pulumi.IntPtrInput
	// Alert rule severity
	Severity pulumi.StringPtrInput
	// Alert system service rule
	SystemServiceRule ClusterAlterRuleSystemServiceRulePtrInput
}

func (ClusterAlterRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterAlterRuleArgs)(nil)).Elem()
}

type ClusterAlterRuleInput interface {
	pulumi.Input

	ToClusterAlterRuleOutput() ClusterAlterRuleOutput
	ToClusterAlterRuleOutputWithContext(ctx context.Context) ClusterAlterRuleOutput
}

func (ClusterAlterRule) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAlterRule)(nil)).Elem()
}

func (i ClusterAlterRule) ToClusterAlterRuleOutput() ClusterAlterRuleOutput {
	return i.ToClusterAlterRuleOutputWithContext(context.Background())
}

func (i ClusterAlterRule) ToClusterAlterRuleOutputWithContext(ctx context.Context) ClusterAlterRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAlterRuleOutput)
}

type ClusterAlterRuleOutput struct {
	*pulumi.OutputState
}

func (ClusterAlterRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAlterRuleOutput)(nil)).Elem()
}

func (o ClusterAlterRuleOutput) ToClusterAlterRuleOutput() ClusterAlterRuleOutput {
	return o
}

func (o ClusterAlterRuleOutput) ToClusterAlterRuleOutputWithContext(ctx context.Context) ClusterAlterRuleOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ClusterAlterRuleOutput{})
}
