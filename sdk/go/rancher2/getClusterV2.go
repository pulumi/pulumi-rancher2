// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package rancher2

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve information about a Rancher v2 cluster.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-rancher2/sdk/v3/go/rancher2"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := "fleet-ns"
// 		_, err := rancher2.LookupClusterV2(ctx, &rancher2.LookupClusterV2Args{
// 			FleetNamespace: &opt0,
// 			Name:           "foo",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupClusterV2(ctx *pulumi.Context, args *LookupClusterV2Args, opts ...pulumi.InvokeOption) (*LookupClusterV2Result, error) {
	var rv LookupClusterV2Result
	err := ctx.Invoke("rancher2:index/getClusterV2:getClusterV2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getClusterV2.
type LookupClusterV2Args struct {
	// The fleet namespace of the Cluster v2. Default: `\"fleet-default\"` (string)
	FleetNamespace *string `pulumi:"fleetNamespace"`
	// The name of the Cluster v2 (string)
	Name string `pulumi:"name"`
}

// A collection of values returned by getClusterV2.
type LookupClusterV2Result struct {
	// (Computed) Optional Agent Env Vars for Rancher agent (list)
	AgentEnvVars []GetClusterV2AgentEnvVar `pulumi:"agentEnvVars"`
	Annotations  map[string]interface{}    `pulumi:"annotations"`
	// (Computed) Cluster V2 cloud credential secret name (string)
	CloudCredentialSecretName string `pulumi:"cloudCredentialSecretName"`
	// (Computed/Sensitive) Cluster Registration Token generated for the cluster v2 (list maxitems:1)
	ClusterRegistrationToken GetClusterV2ClusterRegistrationToken `pulumi:"clusterRegistrationToken"`
	// (Computed) Cluster v1 id for cluster v2 (string)
	ClusterV1Id string `pulumi:"clusterV1Id"`
	// (Computed) Cluster V2 default cluster role for project members (string)
	DefaultClusterRoleForProjectMembers string `pulumi:"defaultClusterRoleForProjectMembers"`
	// (Computed) Cluster V2 default pod security policy template name (string)
	DefaultPodSecurityPolicyTemplateName string `pulumi:"defaultPodSecurityPolicyTemplateName"`
	// (Computed) Enable k8s network policy at Cluster V2 (bool)
	EnableNetworkPolicy bool    `pulumi:"enableNetworkPolicy"`
	FleetNamespace      *string `pulumi:"fleetNamespace"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Computed/Sensitive) Kube Config generated for the cluster v2 (string)
	KubeConfig string `pulumi:"kubeConfig"`
	// (Computed) The kubernetes version of the Cluster v2 (list maxitems:1)
	KubernetesVersion string                 `pulumi:"kubernetesVersion"`
	Labels            map[string]interface{} `pulumi:"labels"`
	Name              string                 `pulumi:"name"`
	// (Computed) Cluster v2 k8s resource version (string)
	ResourceVersion string `pulumi:"resourceVersion"`
	// (Computed) The RKE configuration for `k3s` and `rke2` Clusters v2. (list maxitems:1)
	RkeConfig GetClusterV2RkeConfig `pulumi:"rkeConfig"`
}
