// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package rancher2

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a Rancher v2 Cluster Logging resource. This can be used to configure Cluster Logging for Rancher v2 environments and retrieve their information.
type ClusterLogging struct {
	pulumi.CustomResourceState

	// Annotations for Cluster Logging object (map)
	Annotations pulumi.MapOutput `pulumi:"annotations"`
	// The cluster id to configure logging (string)
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// The custom target config for Cluster Logging. For `kind = custom`. Conflicts with `elasticsearchConfig`, `fluentdConfig`, `kafkaConfig`, `splunkConfig` and `syslogConfig` (list maxitems:1)
	CustomTargetConfig ClusterLoggingCustomTargetConfigPtrOutput `pulumi:"customTargetConfig"`
	// The elasticsearch config for Cluster Logging. For `kind = elasticsearch`. Conflicts with `customTargetConfig`, `fluentdConfig`, `kafkaConfig`, `splunkConfig` and `syslogConfig` (list maxitems:1)
	ElasticsearchConfig ClusterLoggingElasticsearchConfigPtrOutput `pulumi:"elasticsearchConfig"`
	// Enable json log parsing. Default: `false` (bool)
	EnableJsonParsing pulumi.BoolPtrOutput `pulumi:"enableJsonParsing"`
	// The fluentd config for Cluster Logging. For `kind = fluentd`. Conflicts with `customTargetConfig`, `elasticsearchConfig`, `kafkaConfig`, `splunkConfig` and `syslogConfig` (list maxitems:1)
	FluentdConfig ClusterLoggingFluentdConfigPtrOutput `pulumi:"fluentdConfig"`
	// The kafka config for Cluster Logging. For `kind = kafka`. Conflicts with `customTargetConfig`, `elasticsearchConfig`, `fluentdConfig`, `splunkConfig` and `syslogConfig` (list maxitems:1)
	KafkaConfig ClusterLoggingKafkaConfigPtrOutput `pulumi:"kafkaConfig"`
	// The kind of the Cluster Logging. `elasticsearch`, `fluentd`, `kafka`, `splunk` and `syslog` are supported (string)
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Labels for Cluster Logging object (map)
	Labels pulumi.MapOutput `pulumi:"labels"`
	// The name of the cluster logging config (string)
	Name pulumi.StringOutput `pulumi:"name"`
	// The namespace id from cluster logging (string)
	NamespaceId pulumi.StringPtrOutput `pulumi:"namespaceId"`
	// How often buffered logs would be flushed. Default: `3` seconds (int)
	OutputFlushInterval pulumi.IntPtrOutput `pulumi:"outputFlushInterval"`
	// The output tags for Cluster Logging (map)
	OutputTags pulumi.MapOutput `pulumi:"outputTags"`
	// The splunk config for Cluster Logging. For `kind = splunk`. Conflicts with `customTargetConfig`, `elasticsearchConfig`, `fluentdConfig`, `kafkaConfig`, and `syslogConfig` (list maxitems:1)
	SplunkConfig ClusterLoggingSplunkConfigPtrOutput `pulumi:"splunkConfig"`
	// The syslog config for Cluster Logging. For `kind = syslog`. Conflicts with `customTargetConfig`, `elasticsearchConfig`, `fluentdConfig`, `kafkaConfig`, and `splunkConfig` (list maxitems:1)
	SyslogConfig ClusterLoggingSyslogConfigPtrOutput `pulumi:"syslogConfig"`
}

// NewClusterLogging registers a new resource with the given unique name, arguments, and options.
func NewClusterLogging(ctx *pulumi.Context,
	name string, args *ClusterLoggingArgs, opts ...pulumi.ResourceOption) (*ClusterLogging, error) {
	if args == nil || args.ClusterId == nil {
		return nil, errors.New("missing required argument 'ClusterId'")
	}
	if args == nil || args.Kind == nil {
		return nil, errors.New("missing required argument 'Kind'")
	}
	if args == nil {
		args = &ClusterLoggingArgs{}
	}
	var resource ClusterLogging
	err := ctx.RegisterResource("rancher2:index/clusterLogging:ClusterLogging", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClusterLogging gets an existing ClusterLogging resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClusterLogging(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterLoggingState, opts ...pulumi.ResourceOption) (*ClusterLogging, error) {
	var resource ClusterLogging
	err := ctx.ReadResource("rancher2:index/clusterLogging:ClusterLogging", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClusterLogging resources.
type clusterLoggingState struct {
	// Annotations for Cluster Logging object (map)
	Annotations map[string]interface{} `pulumi:"annotations"`
	// The cluster id to configure logging (string)
	ClusterId *string `pulumi:"clusterId"`
	// The custom target config for Cluster Logging. For `kind = custom`. Conflicts with `elasticsearchConfig`, `fluentdConfig`, `kafkaConfig`, `splunkConfig` and `syslogConfig` (list maxitems:1)
	CustomTargetConfig *ClusterLoggingCustomTargetConfig `pulumi:"customTargetConfig"`
	// The elasticsearch config for Cluster Logging. For `kind = elasticsearch`. Conflicts with `customTargetConfig`, `fluentdConfig`, `kafkaConfig`, `splunkConfig` and `syslogConfig` (list maxitems:1)
	ElasticsearchConfig *ClusterLoggingElasticsearchConfig `pulumi:"elasticsearchConfig"`
	// Enable json log parsing. Default: `false` (bool)
	EnableJsonParsing *bool `pulumi:"enableJsonParsing"`
	// The fluentd config for Cluster Logging. For `kind = fluentd`. Conflicts with `customTargetConfig`, `elasticsearchConfig`, `kafkaConfig`, `splunkConfig` and `syslogConfig` (list maxitems:1)
	FluentdConfig *ClusterLoggingFluentdConfig `pulumi:"fluentdConfig"`
	// The kafka config for Cluster Logging. For `kind = kafka`. Conflicts with `customTargetConfig`, `elasticsearchConfig`, `fluentdConfig`, `splunkConfig` and `syslogConfig` (list maxitems:1)
	KafkaConfig *ClusterLoggingKafkaConfig `pulumi:"kafkaConfig"`
	// The kind of the Cluster Logging. `elasticsearch`, `fluentd`, `kafka`, `splunk` and `syslog` are supported (string)
	Kind *string `pulumi:"kind"`
	// Labels for Cluster Logging object (map)
	Labels map[string]interface{} `pulumi:"labels"`
	// The name of the cluster logging config (string)
	Name *string `pulumi:"name"`
	// The namespace id from cluster logging (string)
	NamespaceId *string `pulumi:"namespaceId"`
	// How often buffered logs would be flushed. Default: `3` seconds (int)
	OutputFlushInterval *int `pulumi:"outputFlushInterval"`
	// The output tags for Cluster Logging (map)
	OutputTags map[string]interface{} `pulumi:"outputTags"`
	// The splunk config for Cluster Logging. For `kind = splunk`. Conflicts with `customTargetConfig`, `elasticsearchConfig`, `fluentdConfig`, `kafkaConfig`, and `syslogConfig` (list maxitems:1)
	SplunkConfig *ClusterLoggingSplunkConfig `pulumi:"splunkConfig"`
	// The syslog config for Cluster Logging. For `kind = syslog`. Conflicts with `customTargetConfig`, `elasticsearchConfig`, `fluentdConfig`, `kafkaConfig`, and `splunkConfig` (list maxitems:1)
	SyslogConfig *ClusterLoggingSyslogConfig `pulumi:"syslogConfig"`
}

type ClusterLoggingState struct {
	// Annotations for Cluster Logging object (map)
	Annotations pulumi.MapInput
	// The cluster id to configure logging (string)
	ClusterId pulumi.StringPtrInput
	// The custom target config for Cluster Logging. For `kind = custom`. Conflicts with `elasticsearchConfig`, `fluentdConfig`, `kafkaConfig`, `splunkConfig` and `syslogConfig` (list maxitems:1)
	CustomTargetConfig ClusterLoggingCustomTargetConfigPtrInput
	// The elasticsearch config for Cluster Logging. For `kind = elasticsearch`. Conflicts with `customTargetConfig`, `fluentdConfig`, `kafkaConfig`, `splunkConfig` and `syslogConfig` (list maxitems:1)
	ElasticsearchConfig ClusterLoggingElasticsearchConfigPtrInput
	// Enable json log parsing. Default: `false` (bool)
	EnableJsonParsing pulumi.BoolPtrInput
	// The fluentd config for Cluster Logging. For `kind = fluentd`. Conflicts with `customTargetConfig`, `elasticsearchConfig`, `kafkaConfig`, `splunkConfig` and `syslogConfig` (list maxitems:1)
	FluentdConfig ClusterLoggingFluentdConfigPtrInput
	// The kafka config for Cluster Logging. For `kind = kafka`. Conflicts with `customTargetConfig`, `elasticsearchConfig`, `fluentdConfig`, `splunkConfig` and `syslogConfig` (list maxitems:1)
	KafkaConfig ClusterLoggingKafkaConfigPtrInput
	// The kind of the Cluster Logging. `elasticsearch`, `fluentd`, `kafka`, `splunk` and `syslog` are supported (string)
	Kind pulumi.StringPtrInput
	// Labels for Cluster Logging object (map)
	Labels pulumi.MapInput
	// The name of the cluster logging config (string)
	Name pulumi.StringPtrInput
	// The namespace id from cluster logging (string)
	NamespaceId pulumi.StringPtrInput
	// How often buffered logs would be flushed. Default: `3` seconds (int)
	OutputFlushInterval pulumi.IntPtrInput
	// The output tags for Cluster Logging (map)
	OutputTags pulumi.MapInput
	// The splunk config for Cluster Logging. For `kind = splunk`. Conflicts with `customTargetConfig`, `elasticsearchConfig`, `fluentdConfig`, `kafkaConfig`, and `syslogConfig` (list maxitems:1)
	SplunkConfig ClusterLoggingSplunkConfigPtrInput
	// The syslog config for Cluster Logging. For `kind = syslog`. Conflicts with `customTargetConfig`, `elasticsearchConfig`, `fluentdConfig`, `kafkaConfig`, and `splunkConfig` (list maxitems:1)
	SyslogConfig ClusterLoggingSyslogConfigPtrInput
}

func (ClusterLoggingState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterLoggingState)(nil)).Elem()
}

type clusterLoggingArgs struct {
	// Annotations for Cluster Logging object (map)
	Annotations map[string]interface{} `pulumi:"annotations"`
	// The cluster id to configure logging (string)
	ClusterId string `pulumi:"clusterId"`
	// The custom target config for Cluster Logging. For `kind = custom`. Conflicts with `elasticsearchConfig`, `fluentdConfig`, `kafkaConfig`, `splunkConfig` and `syslogConfig` (list maxitems:1)
	CustomTargetConfig *ClusterLoggingCustomTargetConfig `pulumi:"customTargetConfig"`
	// The elasticsearch config for Cluster Logging. For `kind = elasticsearch`. Conflicts with `customTargetConfig`, `fluentdConfig`, `kafkaConfig`, `splunkConfig` and `syslogConfig` (list maxitems:1)
	ElasticsearchConfig *ClusterLoggingElasticsearchConfig `pulumi:"elasticsearchConfig"`
	// Enable json log parsing. Default: `false` (bool)
	EnableJsonParsing *bool `pulumi:"enableJsonParsing"`
	// The fluentd config for Cluster Logging. For `kind = fluentd`. Conflicts with `customTargetConfig`, `elasticsearchConfig`, `kafkaConfig`, `splunkConfig` and `syslogConfig` (list maxitems:1)
	FluentdConfig *ClusterLoggingFluentdConfig `pulumi:"fluentdConfig"`
	// The kafka config for Cluster Logging. For `kind = kafka`. Conflicts with `customTargetConfig`, `elasticsearchConfig`, `fluentdConfig`, `splunkConfig` and `syslogConfig` (list maxitems:1)
	KafkaConfig *ClusterLoggingKafkaConfig `pulumi:"kafkaConfig"`
	// The kind of the Cluster Logging. `elasticsearch`, `fluentd`, `kafka`, `splunk` and `syslog` are supported (string)
	Kind string `pulumi:"kind"`
	// Labels for Cluster Logging object (map)
	Labels map[string]interface{} `pulumi:"labels"`
	// The name of the cluster logging config (string)
	Name *string `pulumi:"name"`
	// The namespace id from cluster logging (string)
	NamespaceId *string `pulumi:"namespaceId"`
	// How often buffered logs would be flushed. Default: `3` seconds (int)
	OutputFlushInterval *int `pulumi:"outputFlushInterval"`
	// The output tags for Cluster Logging (map)
	OutputTags map[string]interface{} `pulumi:"outputTags"`
	// The splunk config for Cluster Logging. For `kind = splunk`. Conflicts with `customTargetConfig`, `elasticsearchConfig`, `fluentdConfig`, `kafkaConfig`, and `syslogConfig` (list maxitems:1)
	SplunkConfig *ClusterLoggingSplunkConfig `pulumi:"splunkConfig"`
	// The syslog config for Cluster Logging. For `kind = syslog`. Conflicts with `customTargetConfig`, `elasticsearchConfig`, `fluentdConfig`, `kafkaConfig`, and `splunkConfig` (list maxitems:1)
	SyslogConfig *ClusterLoggingSyslogConfig `pulumi:"syslogConfig"`
}

// The set of arguments for constructing a ClusterLogging resource.
type ClusterLoggingArgs struct {
	// Annotations for Cluster Logging object (map)
	Annotations pulumi.MapInput
	// The cluster id to configure logging (string)
	ClusterId pulumi.StringInput
	// The custom target config for Cluster Logging. For `kind = custom`. Conflicts with `elasticsearchConfig`, `fluentdConfig`, `kafkaConfig`, `splunkConfig` and `syslogConfig` (list maxitems:1)
	CustomTargetConfig ClusterLoggingCustomTargetConfigPtrInput
	// The elasticsearch config for Cluster Logging. For `kind = elasticsearch`. Conflicts with `customTargetConfig`, `fluentdConfig`, `kafkaConfig`, `splunkConfig` and `syslogConfig` (list maxitems:1)
	ElasticsearchConfig ClusterLoggingElasticsearchConfigPtrInput
	// Enable json log parsing. Default: `false` (bool)
	EnableJsonParsing pulumi.BoolPtrInput
	// The fluentd config for Cluster Logging. For `kind = fluentd`. Conflicts with `customTargetConfig`, `elasticsearchConfig`, `kafkaConfig`, `splunkConfig` and `syslogConfig` (list maxitems:1)
	FluentdConfig ClusterLoggingFluentdConfigPtrInput
	// The kafka config for Cluster Logging. For `kind = kafka`. Conflicts with `customTargetConfig`, `elasticsearchConfig`, `fluentdConfig`, `splunkConfig` and `syslogConfig` (list maxitems:1)
	KafkaConfig ClusterLoggingKafkaConfigPtrInput
	// The kind of the Cluster Logging. `elasticsearch`, `fluentd`, `kafka`, `splunk` and `syslog` are supported (string)
	Kind pulumi.StringInput
	// Labels for Cluster Logging object (map)
	Labels pulumi.MapInput
	// The name of the cluster logging config (string)
	Name pulumi.StringPtrInput
	// The namespace id from cluster logging (string)
	NamespaceId pulumi.StringPtrInput
	// How often buffered logs would be flushed. Default: `3` seconds (int)
	OutputFlushInterval pulumi.IntPtrInput
	// The output tags for Cluster Logging (map)
	OutputTags pulumi.MapInput
	// The splunk config for Cluster Logging. For `kind = splunk`. Conflicts with `customTargetConfig`, `elasticsearchConfig`, `fluentdConfig`, `kafkaConfig`, and `syslogConfig` (list maxitems:1)
	SplunkConfig ClusterLoggingSplunkConfigPtrInput
	// The syslog config for Cluster Logging. For `kind = syslog`. Conflicts with `customTargetConfig`, `elasticsearchConfig`, `fluentdConfig`, `kafkaConfig`, and `splunkConfig` (list maxitems:1)
	SyslogConfig ClusterLoggingSyslogConfigPtrInput
}

func (ClusterLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterLoggingArgs)(nil)).Elem()
}
