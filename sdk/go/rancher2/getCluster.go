// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package rancher2

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Use this data source to retrieve information about a Rancher v2 cluster.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-rancher2/blob/master/website/docs/d/cluster.html.markdown.
func LookupCluster(ctx *pulumi.Context, args *LookupClusterArgs, opts ...pulumi.InvokeOption) (*LookupClusterResult, error) {
	var rv LookupClusterResult
	err := ctx.Invoke("rancher2:index/getCluster:getCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCluster.
type LookupClusterArgs struct {
	// The name of the Cluster (string)
	Name string `pulumi:"name"`
}

// A collection of values returned by getCluster.
type LookupClusterResult struct {
	// (Computed) The Azure aks configuration for `aks` Clusters. Conflicts with `eksConfig`, `gkeConfig` and `rkeConfig` (list maxitems:1)
	AksConfig GetClusterAksConfig `pulumi:"aksConfig"`
	// (Computed) Annotations for Node Pool object (map)
	Annotations map[string]interface{} `pulumi:"annotations"`
	// (Computed) Enabling the [local cluster authorized endpoint](https://rancher.com/docs/rancher/v2.x/en/cluster-provisioning/rke-clusters/options/#local-cluster-auth-endpoint) allows direct communication with the cluster, bypassing the Rancher API proxy. (list maxitems:1)
	ClusterAuthEndpoint GetClusterClusterAuthEndpoint `pulumi:"clusterAuthEndpoint"`
	// (Computed) Cluster monitoring config (list maxitems:1)
	ClusterMonitoringInput GetClusterClusterMonitoringInput `pulumi:"clusterMonitoringInput"`
	// (Computed) Cluster Registration Token generated for the cluster (list maxitems:1)
	ClusterRegistrationToken GetClusterClusterRegistrationToken `pulumi:"clusterRegistrationToken"`
	// (Computed) Cluster template answers (list maxitems:1)
	ClusterTemplateAnswers GetClusterClusterTemplateAnswers `pulumi:"clusterTemplateAnswers"`
	// (Computed) Cluster template ID (string)
	ClusterTemplateId string `pulumi:"clusterTemplateId"`
	// (Computed) Cluster template questions (list)
	ClusterTemplateQuestions []GetClusterClusterTemplateQuestion `pulumi:"clusterTemplateQuestions"`
	// (Computed) Cluster template revision ID (string)
	ClusterTemplateRevisionId string `pulumi:"clusterTemplateRevisionId"`
	// (Optional/Computed) [Default pod security policy template id](https://rancher.com/docs/rancher/v2.x/en/cluster-provisioning/rke-clusters/options/#pod-security-policy-support) (string)
	DefaultPodSecurityPolicyTemplateId string `pulumi:"defaultPodSecurityPolicyTemplateId"`
	// (Computed) Default project ID for the cluster (string)
	DefaultProjectId string `pulumi:"defaultProjectId"`
	// (Computed) The description for Cluster (string)
	Description string `pulumi:"description"`
	// (Computed) The driver used for the Cluster. `imported`, `azurekubernetesservice`, `amazonelasticcontainerservice`, `googlekubernetesengine` and `rancherKubernetesEngine` are supported (string)
	Driver string `pulumi:"driver"`
	// (Computed) The Amazon eks configuration for `eks` Clusters. Conflicts with `aksConfig`, `gkeConfig` and `rkeConfig` (list maxitems:1)
	EksConfig             GetClusterEksConfig `pulumi:"eksConfig"`
	EnableClusterAlerting bool                `pulumi:"enableClusterAlerting"`
	// (Computed) Enable built-in cluster monitoring. Default `false` (bool)
	EnableClusterMonitoring bool `pulumi:"enableClusterMonitoring"`
	// (Computed) Enable project network isolation. Default `false` (bool)
	EnableNetworkPolicy bool `pulumi:"enableNetworkPolicy"`
	// (Computed) The Google gke configuration for `gke` Clusters. Conflicts with `aksConfig`, `eksConfig` and `rkeConfig` (list maxitems:1)
	GkeConfig GetClusterGkeConfig `pulumi:"gkeConfig"`
	// id is the provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Computed) The K3S configuration for `k3s` imported Clusters. Conflicts with `aksConfig`, `eksConfig`, `gkeConfig` and `rkeConfig` (list maxitems:1)
	K3sConfig GetClusterK3sConfig `pulumi:"k3sConfig"`
	// (Computed) Kube Config generated for the cluster (string)
	KubeConfig string `pulumi:"kubeConfig"`
	// (Computed) Labels for Node Pool object (map)
	Labels map[string]interface{} `pulumi:"labels"`
	Name   string                 `pulumi:"name"`
	// (Computed) The RKE configuration for `rke` Clusters. Conflicts with `aksConfig`, `eksConfig` and `gkeConfig` (list maxitems:1)
	RkeConfig             GetClusterRkeConfig              `pulumi:"rkeConfig"`
	ScheduledClusterScans []GetClusterScheduledClusterScan `pulumi:"scheduledClusterScans"`
	// (Computed) System project ID for the cluster (string)
	SystemProjectId string `pulumi:"systemProjectId"`
}
