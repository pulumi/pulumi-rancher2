// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.rancher2.inputs.ClusterAgentEnvVarArgs;
import com.pulumi.rancher2.inputs.ClusterAksConfigArgs;
import com.pulumi.rancher2.inputs.ClusterAksConfigV2Args;
import com.pulumi.rancher2.inputs.ClusterClusterAgentDeploymentCustomizationArgs;
import com.pulumi.rancher2.inputs.ClusterClusterAuthEndpointArgs;
import com.pulumi.rancher2.inputs.ClusterClusterMonitoringInputArgs;
import com.pulumi.rancher2.inputs.ClusterClusterTemplateAnswersArgs;
import com.pulumi.rancher2.inputs.ClusterClusterTemplateQuestionArgs;
import com.pulumi.rancher2.inputs.ClusterEksConfigArgs;
import com.pulumi.rancher2.inputs.ClusterEksConfigV2Args;
import com.pulumi.rancher2.inputs.ClusterFleetAgentDeploymentCustomizationArgs;
import com.pulumi.rancher2.inputs.ClusterGkeConfigArgs;
import com.pulumi.rancher2.inputs.ClusterGkeConfigV2Args;
import com.pulumi.rancher2.inputs.ClusterK3sConfigArgs;
import com.pulumi.rancher2.inputs.ClusterOkeConfigArgs;
import com.pulumi.rancher2.inputs.ClusterRke2ConfigArgs;
import com.pulumi.rancher2.inputs.ClusterRkeConfigArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterArgs Empty = new ClusterArgs();

    /**
     * Optional Agent Env Vars for Rancher agent. For Rancher v2.5.6 and above (list)
     * 
     */
    @Import(name="agentEnvVars")
    private @Nullable Output<List<ClusterAgentEnvVarArgs>> agentEnvVars;

    /**
     * @return Optional Agent Env Vars for Rancher agent. For Rancher v2.5.6 and above (list)
     * 
     */
    public Optional<Output<List<ClusterAgentEnvVarArgs>>> agentEnvVars() {
        return Optional.ofNullable(this.agentEnvVars);
    }

    /**
     * The Azure AKS configuration for `aks` Clusters. Conflicts with `aks_config_v2`, `eks_config`, `eks_config_v2`, `gke_config`, `gke_config_v2`, `oke_config` `k3s_config` and `rke_config` (list maxitems:1)
     * 
     */
    @Import(name="aksConfig")
    private @Nullable Output<ClusterAksConfigArgs> aksConfig;

    /**
     * @return The Azure AKS configuration for `aks` Clusters. Conflicts with `aks_config_v2`, `eks_config`, `eks_config_v2`, `gke_config`, `gke_config_v2`, `oke_config` `k3s_config` and `rke_config` (list maxitems:1)
     * 
     */
    public Optional<Output<ClusterAksConfigArgs>> aksConfig() {
        return Optional.ofNullable(this.aksConfig);
    }

    /**
     * The Azure AKS v2 configuration for creating/import `aks` Clusters. Conflicts with `aks_config`, `eks_config`, `eks_config_v2`, `gke_config`, `gke_config_v2`, `oke_config` `k3s_config` and `rke_config` (list maxitems:1)
     * 
     */
    @Import(name="aksConfigV2")
    private @Nullable Output<ClusterAksConfigV2Args> aksConfigV2;

    /**
     * @return The Azure AKS v2 configuration for creating/import `aks` Clusters. Conflicts with `aks_config`, `eks_config`, `eks_config_v2`, `gke_config`, `gke_config_v2`, `oke_config` `k3s_config` and `rke_config` (list maxitems:1)
     * 
     */
    public Optional<Output<ClusterAksConfigV2Args>> aksConfigV2() {
        return Optional.ofNullable(this.aksConfigV2);
    }

    /**
     * Annotations for the Cluster (map)
     * 
     */
    @Import(name="annotations")
    private @Nullable Output<Map<String,String>> annotations;

    /**
     * @return Annotations for the Cluster (map)
     * 
     */
    public Optional<Output<Map<String,String>>> annotations() {
        return Optional.ofNullable(this.annotations);
    }

    /**
     * Optional customization for cluster agent. For Rancher v2.7.5 and above (list)
     * 
     */
    @Import(name="clusterAgentDeploymentCustomizations")
    private @Nullable Output<List<ClusterClusterAgentDeploymentCustomizationArgs>> clusterAgentDeploymentCustomizations;

    /**
     * @return Optional customization for cluster agent. For Rancher v2.7.5 and above (list)
     * 
     */
    public Optional<Output<List<ClusterClusterAgentDeploymentCustomizationArgs>>> clusterAgentDeploymentCustomizations() {
        return Optional.ofNullable(this.clusterAgentDeploymentCustomizations);
    }

    /**
     * Enabling the [local cluster authorized endpoint](https://rancher.com/docs/rancher/v2.x/en/cluster-provisioning/rke-clusters/options/#local-cluster-auth-endpoint) allows direct communication with the cluster, bypassing the Rancher API proxy. (list maxitems:1)
     * 
     */
    @Import(name="clusterAuthEndpoint")
    private @Nullable Output<ClusterClusterAuthEndpointArgs> clusterAuthEndpoint;

    /**
     * @return Enabling the [local cluster authorized endpoint](https://rancher.com/docs/rancher/v2.x/en/cluster-provisioning/rke-clusters/options/#local-cluster-auth-endpoint) allows direct communication with the cluster, bypassing the Rancher API proxy. (list maxitems:1)
     * 
     */
    public Optional<Output<ClusterClusterAuthEndpointArgs>> clusterAuthEndpoint() {
        return Optional.ofNullable(this.clusterAuthEndpoint);
    }

    /**
     * Cluster monitoring config. Any parameter defined in [rancher-monitoring charts](https://github.com/rancher/system-charts/tree/dev/charts/rancher-monitoring) could be configured  (list maxitems:1)
     * 
     */
    @Import(name="clusterMonitoringInput")
    private @Nullable Output<ClusterClusterMonitoringInputArgs> clusterMonitoringInput;

    /**
     * @return Cluster monitoring config. Any parameter defined in [rancher-monitoring charts](https://github.com/rancher/system-charts/tree/dev/charts/rancher-monitoring) could be configured  (list maxitems:1)
     * 
     */
    public Optional<Output<ClusterClusterMonitoringInputArgs>> clusterMonitoringInput() {
        return Optional.ofNullable(this.clusterMonitoringInput);
    }

    /**
     * Cluster template answers. For Rancher v2.3.x and above (list maxitems:1)
     * 
     */
    @Import(name="clusterTemplateAnswers")
    private @Nullable Output<ClusterClusterTemplateAnswersArgs> clusterTemplateAnswers;

    /**
     * @return Cluster template answers. For Rancher v2.3.x and above (list maxitems:1)
     * 
     */
    public Optional<Output<ClusterClusterTemplateAnswersArgs>> clusterTemplateAnswers() {
        return Optional.ofNullable(this.clusterTemplateAnswers);
    }

    /**
     * Cluster template ID. For Rancher v2.3.x and above (string)
     * 
     */
    @Import(name="clusterTemplateId")
    private @Nullable Output<String> clusterTemplateId;

    /**
     * @return Cluster template ID. For Rancher v2.3.x and above (string)
     * 
     */
    public Optional<Output<String>> clusterTemplateId() {
        return Optional.ofNullable(this.clusterTemplateId);
    }

    /**
     * Cluster template questions. For Rancher v2.3.x and above (list)
     * 
     */
    @Import(name="clusterTemplateQuestions")
    private @Nullable Output<List<ClusterClusterTemplateQuestionArgs>> clusterTemplateQuestions;

    /**
     * @return Cluster template questions. For Rancher v2.3.x and above (list)
     * 
     */
    public Optional<Output<List<ClusterClusterTemplateQuestionArgs>>> clusterTemplateQuestions() {
        return Optional.ofNullable(this.clusterTemplateQuestions);
    }

    /**
     * Cluster template revision ID. For Rancher v2.3.x and above (string)
     * 
     */
    @Import(name="clusterTemplateRevisionId")
    private @Nullable Output<String> clusterTemplateRevisionId;

    /**
     * @return Cluster template revision ID. For Rancher v2.3.x and above (string)
     * 
     */
    public Optional<Output<String>> clusterTemplateRevisionId() {
        return Optional.ofNullable(this.clusterTemplateRevisionId);
    }

    /**
     * The name of the pre-defined pod security admission configuration template to be applied to the cluster. Rancher admins (or those with the right permissions) can create, manage, and edit those templates. For more information, please refer to [Rancher Documentation](https://ranchermanager.docs.rancher.com/how-to-guides/new-user-guides/authentication-permissions-and-global-configuration/psa-config-templates). The argument is available in Rancher v2.7.2 and above (string)
     * 
     */
    @Import(name="defaultPodSecurityAdmissionConfigurationTemplateName")
    private @Nullable Output<String> defaultPodSecurityAdmissionConfigurationTemplateName;

    /**
     * @return The name of the pre-defined pod security admission configuration template to be applied to the cluster. Rancher admins (or those with the right permissions) can create, manage, and edit those templates. For more information, please refer to [Rancher Documentation](https://ranchermanager.docs.rancher.com/how-to-guides/new-user-guides/authentication-permissions-and-global-configuration/psa-config-templates). The argument is available in Rancher v2.7.2 and above (string)
     * 
     */
    public Optional<Output<String>> defaultPodSecurityAdmissionConfigurationTemplateName() {
        return Optional.ofNullable(this.defaultPodSecurityAdmissionConfigurationTemplateName);
    }

    /**
     * [Default pod security policy template id](https://rancher.com/docs/rancher/v2.x/en/cluster-provisioning/rke-clusters/options/#pod-security-policy-support) (string)
     * 
     */
    @Import(name="defaultPodSecurityPolicyTemplateId")
    private @Nullable Output<String> defaultPodSecurityPolicyTemplateId;

    /**
     * @return [Default pod security policy template id](https://rancher.com/docs/rancher/v2.x/en/cluster-provisioning/rke-clusters/options/#pod-security-policy-support) (string)
     * 
     */
    public Optional<Output<String>> defaultPodSecurityPolicyTemplateId() {
        return Optional.ofNullable(this.defaultPodSecurityPolicyTemplateId);
    }

    /**
     * The description for Cluster (string)
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description for Cluster (string)
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Desired agent image. For Rancher v2.3.x and above (string)
     * 
     */
    @Import(name="desiredAgentImage")
    private @Nullable Output<String> desiredAgentImage;

    /**
     * @return Desired agent image. For Rancher v2.3.x and above (string)
     * 
     */
    public Optional<Output<String>> desiredAgentImage() {
        return Optional.ofNullable(this.desiredAgentImage);
    }

    /**
     * Desired auth image. For Rancher v2.3.x and above (string)
     * 
     */
    @Import(name="desiredAuthImage")
    private @Nullable Output<String> desiredAuthImage;

    /**
     * @return Desired auth image. For Rancher v2.3.x and above (string)
     * 
     */
    public Optional<Output<String>> desiredAuthImage() {
        return Optional.ofNullable(this.desiredAuthImage);
    }

    /**
     * Desired auth image. For Rancher v2.3.x and above (string)
     * 
     */
    @Import(name="dockerRootDir")
    private @Nullable Output<String> dockerRootDir;

    /**
     * @return Desired auth image. For Rancher v2.3.x and above (string)
     * 
     */
    public Optional<Output<String>> dockerRootDir() {
        return Optional.ofNullable(this.dockerRootDir);
    }

    /**
     * (Computed) The driver used for the Cluster. `imported`, `azurekubernetesservice`, `amazonelasticcontainerservice`, `googlekubernetesengine` and `rancherKubernetesEngine` are supported (string)
     * 
     */
    @Import(name="driver")
    private @Nullable Output<String> driver;

    /**
     * @return (Computed) The driver used for the Cluster. `imported`, `azurekubernetesservice`, `amazonelasticcontainerservice`, `googlekubernetesengine` and `rancherKubernetesEngine` are supported (string)
     * 
     */
    public Optional<Output<String>> driver() {
        return Optional.ofNullable(this.driver);
    }

    /**
     * The Amazon EKS configuration for `eks` Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config_v2`, `gke_config`, `gke_config_v2`, `oke_config` `k3s_config` and `rke_config` (list maxitems:1)
     * 
     */
    @Import(name="eksConfig")
    private @Nullable Output<ClusterEksConfigArgs> eksConfig;

    /**
     * @return The Amazon EKS configuration for `eks` Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config_v2`, `gke_config`, `gke_config_v2`, `oke_config` `k3s_config` and `rke_config` (list maxitems:1)
     * 
     */
    public Optional<Output<ClusterEksConfigArgs>> eksConfig() {
        return Optional.ofNullable(this.eksConfig);
    }

    /**
     * The Amazon EKS V2 configuration to create or import `eks` Clusters. Conflicts with `aks_config`, `eks_config`, `gke_config`, `gke_config_v2`, `oke_config` `k3s_config` and `rke_config`. For Rancher v2.5.x and above (list maxitems:1)
     * 
     */
    @Import(name="eksConfigV2")
    private @Nullable Output<ClusterEksConfigV2Args> eksConfigV2;

    /**
     * @return The Amazon EKS V2 configuration to create or import `eks` Clusters. Conflicts with `aks_config`, `eks_config`, `gke_config`, `gke_config_v2`, `oke_config` `k3s_config` and `rke_config`. For Rancher v2.5.x and above (list maxitems:1)
     * 
     */
    public Optional<Output<ClusterEksConfigV2Args>> eksConfigV2() {
        return Optional.ofNullable(this.eksConfigV2);
    }

    /**
     * Enable built-in cluster alerting (bool)
     * 
     */
    @Import(name="enableClusterAlerting")
    private @Nullable Output<Boolean> enableClusterAlerting;

    /**
     * @return Enable built-in cluster alerting (bool)
     * 
     */
    public Optional<Output<Boolean>> enableClusterAlerting() {
        return Optional.ofNullable(this.enableClusterAlerting);
    }

    /**
     * Enable built-in cluster monitoring (bool)
     * 
     */
    @Import(name="enableClusterMonitoring")
    private @Nullable Output<Boolean> enableClusterMonitoring;

    /**
     * @return Enable built-in cluster monitoring (bool)
     * 
     */
    public Optional<Output<Boolean>> enableClusterMonitoring() {
        return Optional.ofNullable(this.enableClusterMonitoring);
    }

    /**
     * Enable project network isolation (bool)
     * 
     */
    @Import(name="enableNetworkPolicy")
    private @Nullable Output<Boolean> enableNetworkPolicy;

    /**
     * @return Enable project network isolation (bool)
     * 
     */
    public Optional<Output<Boolean>> enableNetworkPolicy() {
        return Optional.ofNullable(this.enableNetworkPolicy);
    }

    /**
     * Optional customization for fleet agent. For Rancher v2.7.5 and above (list)
     * 
     */
    @Import(name="fleetAgentDeploymentCustomizations")
    private @Nullable Output<List<ClusterFleetAgentDeploymentCustomizationArgs>> fleetAgentDeploymentCustomizations;

    /**
     * @return Optional customization for fleet agent. For Rancher v2.7.5 and above (list)
     * 
     */
    public Optional<Output<List<ClusterFleetAgentDeploymentCustomizationArgs>>> fleetAgentDeploymentCustomizations() {
        return Optional.ofNullable(this.fleetAgentDeploymentCustomizations);
    }

    /**
     * Fleet workspace name (string)
     * 
     */
    @Import(name="fleetWorkspaceName")
    private @Nullable Output<String> fleetWorkspaceName;

    /**
     * @return Fleet workspace name (string)
     * 
     */
    public Optional<Output<String>> fleetWorkspaceName() {
        return Optional.ofNullable(this.fleetWorkspaceName);
    }

    /**
     * The Google GKE configuration for `gke` Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config`, `eks_config_v2`, `gke_config_v2`, `oke_config`, `k3s_config` and `rke_config` (list maxitems:1)
     * 
     */
    @Import(name="gkeConfig")
    private @Nullable Output<ClusterGkeConfigArgs> gkeConfig;

    /**
     * @return The Google GKE configuration for `gke` Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config`, `eks_config_v2`, `gke_config_v2`, `oke_config`, `k3s_config` and `rke_config` (list maxitems:1)
     * 
     */
    public Optional<Output<ClusterGkeConfigArgs>> gkeConfig() {
        return Optional.ofNullable(this.gkeConfig);
    }

    /**
     * The Google GKE V2 configuration for `gke` Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config`, `eks_config_v2`, `gke_config`, `oke_config`, `k3s_config` and `rke_config`. For Rancher v2.5.8 and above (list maxitems:1)
     * 
     */
    @Import(name="gkeConfigV2")
    private @Nullable Output<ClusterGkeConfigV2Args> gkeConfigV2;

    /**
     * @return The Google GKE V2 configuration for `gke` Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config`, `eks_config_v2`, `gke_config`, `oke_config`, `k3s_config` and `rke_config`. For Rancher v2.5.8 and above (list maxitems:1)
     * 
     */
    public Optional<Output<ClusterGkeConfigV2Args>> gkeConfigV2() {
        return Optional.ofNullable(this.gkeConfigV2);
    }

    /**
     * The K3S configuration for `k3s` imported Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config`, `eks_config_v2`, `gke_config`, `gke_config_v2`, `oke_config` and `rke_config` (list maxitems:1)
     * 
     */
    @Import(name="k3sConfig")
    private @Nullable Output<ClusterK3sConfigArgs> k3sConfig;

    /**
     * @return The K3S configuration for `k3s` imported Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config`, `eks_config_v2`, `gke_config`, `gke_config_v2`, `oke_config` and `rke_config` (list maxitems:1)
     * 
     */
    public Optional<Output<ClusterK3sConfigArgs>> k3sConfig() {
        return Optional.ofNullable(this.k3sConfig);
    }

    /**
     * Labels for the Cluster (map)
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return Labels for the Cluster (map)
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The name of the Cluster (string)
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Cluster (string)
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The Oracle OKE configuration for `oke` Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config`, `eks_config_v2`, `gke_config`, `gke_config_v2`, `k3s_config` and `rke_config` (list maxitems:1)
     * 
     */
    @Import(name="okeConfig")
    private @Nullable Output<ClusterOkeConfigArgs> okeConfig;

    /**
     * @return The Oracle OKE configuration for `oke` Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config`, `eks_config_v2`, `gke_config`, `gke_config_v2`, `k3s_config` and `rke_config` (list maxitems:1)
     * 
     */
    public Optional<Output<ClusterOkeConfigArgs>> okeConfig() {
        return Optional.ofNullable(this.okeConfig);
    }

    /**
     * The RKE2 configuration for `rke2` Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config`, `gke_config`, `oke_config`, `k3s_config` and `rke_config` (list maxitems:1)
     * 
     */
    @Import(name="rke2Config")
    private @Nullable Output<ClusterRke2ConfigArgs> rke2Config;

    /**
     * @return The RKE2 configuration for `rke2` Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config`, `gke_config`, `oke_config`, `k3s_config` and `rke_config` (list maxitems:1)
     * 
     */
    public Optional<Output<ClusterRke2ConfigArgs>> rke2Config() {
        return Optional.ofNullable(this.rke2Config);
    }

    /**
     * The RKE configuration for `rke` Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config`, `eks_config_v2`, `gke_config`, `gke_config_v2`, `oke_config` and `k3s_config` (list maxitems:1)
     * 
     */
    @Import(name="rkeConfig")
    private @Nullable Output<ClusterRkeConfigArgs> rkeConfig;

    /**
     * @return The RKE configuration for `rke` Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config`, `eks_config_v2`, `gke_config`, `gke_config_v2`, `oke_config` and `k3s_config` (list maxitems:1)
     * 
     */
    public Optional<Output<ClusterRkeConfigArgs>> rkeConfig() {
        return Optional.ofNullable(this.rkeConfig);
    }

    /**
     * Windows preferred cluster. Default: `false` (bool)
     * 
     */
    @Import(name="windowsPreferedCluster")
    private @Nullable Output<Boolean> windowsPreferedCluster;

    /**
     * @return Windows preferred cluster. Default: `false` (bool)
     * 
     */
    public Optional<Output<Boolean>> windowsPreferedCluster() {
        return Optional.ofNullable(this.windowsPreferedCluster);
    }

    private ClusterArgs() {}

    private ClusterArgs(ClusterArgs $) {
        this.agentEnvVars = $.agentEnvVars;
        this.aksConfig = $.aksConfig;
        this.aksConfigV2 = $.aksConfigV2;
        this.annotations = $.annotations;
        this.clusterAgentDeploymentCustomizations = $.clusterAgentDeploymentCustomizations;
        this.clusterAuthEndpoint = $.clusterAuthEndpoint;
        this.clusterMonitoringInput = $.clusterMonitoringInput;
        this.clusterTemplateAnswers = $.clusterTemplateAnswers;
        this.clusterTemplateId = $.clusterTemplateId;
        this.clusterTemplateQuestions = $.clusterTemplateQuestions;
        this.clusterTemplateRevisionId = $.clusterTemplateRevisionId;
        this.defaultPodSecurityAdmissionConfigurationTemplateName = $.defaultPodSecurityAdmissionConfigurationTemplateName;
        this.defaultPodSecurityPolicyTemplateId = $.defaultPodSecurityPolicyTemplateId;
        this.description = $.description;
        this.desiredAgentImage = $.desiredAgentImage;
        this.desiredAuthImage = $.desiredAuthImage;
        this.dockerRootDir = $.dockerRootDir;
        this.driver = $.driver;
        this.eksConfig = $.eksConfig;
        this.eksConfigV2 = $.eksConfigV2;
        this.enableClusterAlerting = $.enableClusterAlerting;
        this.enableClusterMonitoring = $.enableClusterMonitoring;
        this.enableNetworkPolicy = $.enableNetworkPolicy;
        this.fleetAgentDeploymentCustomizations = $.fleetAgentDeploymentCustomizations;
        this.fleetWorkspaceName = $.fleetWorkspaceName;
        this.gkeConfig = $.gkeConfig;
        this.gkeConfigV2 = $.gkeConfigV2;
        this.k3sConfig = $.k3sConfig;
        this.labels = $.labels;
        this.name = $.name;
        this.okeConfig = $.okeConfig;
        this.rke2Config = $.rke2Config;
        this.rkeConfig = $.rkeConfig;
        this.windowsPreferedCluster = $.windowsPreferedCluster;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterArgs $;

        public Builder() {
            $ = new ClusterArgs();
        }

        public Builder(ClusterArgs defaults) {
            $ = new ClusterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param agentEnvVars Optional Agent Env Vars for Rancher agent. For Rancher v2.5.6 and above (list)
         * 
         * @return builder
         * 
         */
        public Builder agentEnvVars(@Nullable Output<List<ClusterAgentEnvVarArgs>> agentEnvVars) {
            $.agentEnvVars = agentEnvVars;
            return this;
        }

        /**
         * @param agentEnvVars Optional Agent Env Vars for Rancher agent. For Rancher v2.5.6 and above (list)
         * 
         * @return builder
         * 
         */
        public Builder agentEnvVars(List<ClusterAgentEnvVarArgs> agentEnvVars) {
            return agentEnvVars(Output.of(agentEnvVars));
        }

        /**
         * @param agentEnvVars Optional Agent Env Vars for Rancher agent. For Rancher v2.5.6 and above (list)
         * 
         * @return builder
         * 
         */
        public Builder agentEnvVars(ClusterAgentEnvVarArgs... agentEnvVars) {
            return agentEnvVars(List.of(agentEnvVars));
        }

        /**
         * @param aksConfig The Azure AKS configuration for `aks` Clusters. Conflicts with `aks_config_v2`, `eks_config`, `eks_config_v2`, `gke_config`, `gke_config_v2`, `oke_config` `k3s_config` and `rke_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder aksConfig(@Nullable Output<ClusterAksConfigArgs> aksConfig) {
            $.aksConfig = aksConfig;
            return this;
        }

        /**
         * @param aksConfig The Azure AKS configuration for `aks` Clusters. Conflicts with `aks_config_v2`, `eks_config`, `eks_config_v2`, `gke_config`, `gke_config_v2`, `oke_config` `k3s_config` and `rke_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder aksConfig(ClusterAksConfigArgs aksConfig) {
            return aksConfig(Output.of(aksConfig));
        }

        /**
         * @param aksConfigV2 The Azure AKS v2 configuration for creating/import `aks` Clusters. Conflicts with `aks_config`, `eks_config`, `eks_config_v2`, `gke_config`, `gke_config_v2`, `oke_config` `k3s_config` and `rke_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder aksConfigV2(@Nullable Output<ClusterAksConfigV2Args> aksConfigV2) {
            $.aksConfigV2 = aksConfigV2;
            return this;
        }

        /**
         * @param aksConfigV2 The Azure AKS v2 configuration for creating/import `aks` Clusters. Conflicts with `aks_config`, `eks_config`, `eks_config_v2`, `gke_config`, `gke_config_v2`, `oke_config` `k3s_config` and `rke_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder aksConfigV2(ClusterAksConfigV2Args aksConfigV2) {
            return aksConfigV2(Output.of(aksConfigV2));
        }

        /**
         * @param annotations Annotations for the Cluster (map)
         * 
         * @return builder
         * 
         */
        public Builder annotations(@Nullable Output<Map<String,String>> annotations) {
            $.annotations = annotations;
            return this;
        }

        /**
         * @param annotations Annotations for the Cluster (map)
         * 
         * @return builder
         * 
         */
        public Builder annotations(Map<String,String> annotations) {
            return annotations(Output.of(annotations));
        }

        /**
         * @param clusterAgentDeploymentCustomizations Optional customization for cluster agent. For Rancher v2.7.5 and above (list)
         * 
         * @return builder
         * 
         */
        public Builder clusterAgentDeploymentCustomizations(@Nullable Output<List<ClusterClusterAgentDeploymentCustomizationArgs>> clusterAgentDeploymentCustomizations) {
            $.clusterAgentDeploymentCustomizations = clusterAgentDeploymentCustomizations;
            return this;
        }

        /**
         * @param clusterAgentDeploymentCustomizations Optional customization for cluster agent. For Rancher v2.7.5 and above (list)
         * 
         * @return builder
         * 
         */
        public Builder clusterAgentDeploymentCustomizations(List<ClusterClusterAgentDeploymentCustomizationArgs> clusterAgentDeploymentCustomizations) {
            return clusterAgentDeploymentCustomizations(Output.of(clusterAgentDeploymentCustomizations));
        }

        /**
         * @param clusterAgentDeploymentCustomizations Optional customization for cluster agent. For Rancher v2.7.5 and above (list)
         * 
         * @return builder
         * 
         */
        public Builder clusterAgentDeploymentCustomizations(ClusterClusterAgentDeploymentCustomizationArgs... clusterAgentDeploymentCustomizations) {
            return clusterAgentDeploymentCustomizations(List.of(clusterAgentDeploymentCustomizations));
        }

        /**
         * @param clusterAuthEndpoint Enabling the [local cluster authorized endpoint](https://rancher.com/docs/rancher/v2.x/en/cluster-provisioning/rke-clusters/options/#local-cluster-auth-endpoint) allows direct communication with the cluster, bypassing the Rancher API proxy. (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder clusterAuthEndpoint(@Nullable Output<ClusterClusterAuthEndpointArgs> clusterAuthEndpoint) {
            $.clusterAuthEndpoint = clusterAuthEndpoint;
            return this;
        }

        /**
         * @param clusterAuthEndpoint Enabling the [local cluster authorized endpoint](https://rancher.com/docs/rancher/v2.x/en/cluster-provisioning/rke-clusters/options/#local-cluster-auth-endpoint) allows direct communication with the cluster, bypassing the Rancher API proxy. (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder clusterAuthEndpoint(ClusterClusterAuthEndpointArgs clusterAuthEndpoint) {
            return clusterAuthEndpoint(Output.of(clusterAuthEndpoint));
        }

        /**
         * @param clusterMonitoringInput Cluster monitoring config. Any parameter defined in [rancher-monitoring charts](https://github.com/rancher/system-charts/tree/dev/charts/rancher-monitoring) could be configured  (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder clusterMonitoringInput(@Nullable Output<ClusterClusterMonitoringInputArgs> clusterMonitoringInput) {
            $.clusterMonitoringInput = clusterMonitoringInput;
            return this;
        }

        /**
         * @param clusterMonitoringInput Cluster monitoring config. Any parameter defined in [rancher-monitoring charts](https://github.com/rancher/system-charts/tree/dev/charts/rancher-monitoring) could be configured  (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder clusterMonitoringInput(ClusterClusterMonitoringInputArgs clusterMonitoringInput) {
            return clusterMonitoringInput(Output.of(clusterMonitoringInput));
        }

        /**
         * @param clusterTemplateAnswers Cluster template answers. For Rancher v2.3.x and above (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder clusterTemplateAnswers(@Nullable Output<ClusterClusterTemplateAnswersArgs> clusterTemplateAnswers) {
            $.clusterTemplateAnswers = clusterTemplateAnswers;
            return this;
        }

        /**
         * @param clusterTemplateAnswers Cluster template answers. For Rancher v2.3.x and above (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder clusterTemplateAnswers(ClusterClusterTemplateAnswersArgs clusterTemplateAnswers) {
            return clusterTemplateAnswers(Output.of(clusterTemplateAnswers));
        }

        /**
         * @param clusterTemplateId Cluster template ID. For Rancher v2.3.x and above (string)
         * 
         * @return builder
         * 
         */
        public Builder clusterTemplateId(@Nullable Output<String> clusterTemplateId) {
            $.clusterTemplateId = clusterTemplateId;
            return this;
        }

        /**
         * @param clusterTemplateId Cluster template ID. For Rancher v2.3.x and above (string)
         * 
         * @return builder
         * 
         */
        public Builder clusterTemplateId(String clusterTemplateId) {
            return clusterTemplateId(Output.of(clusterTemplateId));
        }

        /**
         * @param clusterTemplateQuestions Cluster template questions. For Rancher v2.3.x and above (list)
         * 
         * @return builder
         * 
         */
        public Builder clusterTemplateQuestions(@Nullable Output<List<ClusterClusterTemplateQuestionArgs>> clusterTemplateQuestions) {
            $.clusterTemplateQuestions = clusterTemplateQuestions;
            return this;
        }

        /**
         * @param clusterTemplateQuestions Cluster template questions. For Rancher v2.3.x and above (list)
         * 
         * @return builder
         * 
         */
        public Builder clusterTemplateQuestions(List<ClusterClusterTemplateQuestionArgs> clusterTemplateQuestions) {
            return clusterTemplateQuestions(Output.of(clusterTemplateQuestions));
        }

        /**
         * @param clusterTemplateQuestions Cluster template questions. For Rancher v2.3.x and above (list)
         * 
         * @return builder
         * 
         */
        public Builder clusterTemplateQuestions(ClusterClusterTemplateQuestionArgs... clusterTemplateQuestions) {
            return clusterTemplateQuestions(List.of(clusterTemplateQuestions));
        }

        /**
         * @param clusterTemplateRevisionId Cluster template revision ID. For Rancher v2.3.x and above (string)
         * 
         * @return builder
         * 
         */
        public Builder clusterTemplateRevisionId(@Nullable Output<String> clusterTemplateRevisionId) {
            $.clusterTemplateRevisionId = clusterTemplateRevisionId;
            return this;
        }

        /**
         * @param clusterTemplateRevisionId Cluster template revision ID. For Rancher v2.3.x and above (string)
         * 
         * @return builder
         * 
         */
        public Builder clusterTemplateRevisionId(String clusterTemplateRevisionId) {
            return clusterTemplateRevisionId(Output.of(clusterTemplateRevisionId));
        }

        /**
         * @param defaultPodSecurityAdmissionConfigurationTemplateName The name of the pre-defined pod security admission configuration template to be applied to the cluster. Rancher admins (or those with the right permissions) can create, manage, and edit those templates. For more information, please refer to [Rancher Documentation](https://ranchermanager.docs.rancher.com/how-to-guides/new-user-guides/authentication-permissions-and-global-configuration/psa-config-templates). The argument is available in Rancher v2.7.2 and above (string)
         * 
         * @return builder
         * 
         */
        public Builder defaultPodSecurityAdmissionConfigurationTemplateName(@Nullable Output<String> defaultPodSecurityAdmissionConfigurationTemplateName) {
            $.defaultPodSecurityAdmissionConfigurationTemplateName = defaultPodSecurityAdmissionConfigurationTemplateName;
            return this;
        }

        /**
         * @param defaultPodSecurityAdmissionConfigurationTemplateName The name of the pre-defined pod security admission configuration template to be applied to the cluster. Rancher admins (or those with the right permissions) can create, manage, and edit those templates. For more information, please refer to [Rancher Documentation](https://ranchermanager.docs.rancher.com/how-to-guides/new-user-guides/authentication-permissions-and-global-configuration/psa-config-templates). The argument is available in Rancher v2.7.2 and above (string)
         * 
         * @return builder
         * 
         */
        public Builder defaultPodSecurityAdmissionConfigurationTemplateName(String defaultPodSecurityAdmissionConfigurationTemplateName) {
            return defaultPodSecurityAdmissionConfigurationTemplateName(Output.of(defaultPodSecurityAdmissionConfigurationTemplateName));
        }

        /**
         * @param defaultPodSecurityPolicyTemplateId [Default pod security policy template id](https://rancher.com/docs/rancher/v2.x/en/cluster-provisioning/rke-clusters/options/#pod-security-policy-support) (string)
         * 
         * @return builder
         * 
         */
        public Builder defaultPodSecurityPolicyTemplateId(@Nullable Output<String> defaultPodSecurityPolicyTemplateId) {
            $.defaultPodSecurityPolicyTemplateId = defaultPodSecurityPolicyTemplateId;
            return this;
        }

        /**
         * @param defaultPodSecurityPolicyTemplateId [Default pod security policy template id](https://rancher.com/docs/rancher/v2.x/en/cluster-provisioning/rke-clusters/options/#pod-security-policy-support) (string)
         * 
         * @return builder
         * 
         */
        public Builder defaultPodSecurityPolicyTemplateId(String defaultPodSecurityPolicyTemplateId) {
            return defaultPodSecurityPolicyTemplateId(Output.of(defaultPodSecurityPolicyTemplateId));
        }

        /**
         * @param description The description for Cluster (string)
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description for Cluster (string)
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param desiredAgentImage Desired agent image. For Rancher v2.3.x and above (string)
         * 
         * @return builder
         * 
         */
        public Builder desiredAgentImage(@Nullable Output<String> desiredAgentImage) {
            $.desiredAgentImage = desiredAgentImage;
            return this;
        }

        /**
         * @param desiredAgentImage Desired agent image. For Rancher v2.3.x and above (string)
         * 
         * @return builder
         * 
         */
        public Builder desiredAgentImage(String desiredAgentImage) {
            return desiredAgentImage(Output.of(desiredAgentImage));
        }

        /**
         * @param desiredAuthImage Desired auth image. For Rancher v2.3.x and above (string)
         * 
         * @return builder
         * 
         */
        public Builder desiredAuthImage(@Nullable Output<String> desiredAuthImage) {
            $.desiredAuthImage = desiredAuthImage;
            return this;
        }

        /**
         * @param desiredAuthImage Desired auth image. For Rancher v2.3.x and above (string)
         * 
         * @return builder
         * 
         */
        public Builder desiredAuthImage(String desiredAuthImage) {
            return desiredAuthImage(Output.of(desiredAuthImage));
        }

        /**
         * @param dockerRootDir Desired auth image. For Rancher v2.3.x and above (string)
         * 
         * @return builder
         * 
         */
        public Builder dockerRootDir(@Nullable Output<String> dockerRootDir) {
            $.dockerRootDir = dockerRootDir;
            return this;
        }

        /**
         * @param dockerRootDir Desired auth image. For Rancher v2.3.x and above (string)
         * 
         * @return builder
         * 
         */
        public Builder dockerRootDir(String dockerRootDir) {
            return dockerRootDir(Output.of(dockerRootDir));
        }

        /**
         * @param driver (Computed) The driver used for the Cluster. `imported`, `azurekubernetesservice`, `amazonelasticcontainerservice`, `googlekubernetesengine` and `rancherKubernetesEngine` are supported (string)
         * 
         * @return builder
         * 
         */
        public Builder driver(@Nullable Output<String> driver) {
            $.driver = driver;
            return this;
        }

        /**
         * @param driver (Computed) The driver used for the Cluster. `imported`, `azurekubernetesservice`, `amazonelasticcontainerservice`, `googlekubernetesengine` and `rancherKubernetesEngine` are supported (string)
         * 
         * @return builder
         * 
         */
        public Builder driver(String driver) {
            return driver(Output.of(driver));
        }

        /**
         * @param eksConfig The Amazon EKS configuration for `eks` Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config_v2`, `gke_config`, `gke_config_v2`, `oke_config` `k3s_config` and `rke_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder eksConfig(@Nullable Output<ClusterEksConfigArgs> eksConfig) {
            $.eksConfig = eksConfig;
            return this;
        }

        /**
         * @param eksConfig The Amazon EKS configuration for `eks` Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config_v2`, `gke_config`, `gke_config_v2`, `oke_config` `k3s_config` and `rke_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder eksConfig(ClusterEksConfigArgs eksConfig) {
            return eksConfig(Output.of(eksConfig));
        }

        /**
         * @param eksConfigV2 The Amazon EKS V2 configuration to create or import `eks` Clusters. Conflicts with `aks_config`, `eks_config`, `gke_config`, `gke_config_v2`, `oke_config` `k3s_config` and `rke_config`. For Rancher v2.5.x and above (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder eksConfigV2(@Nullable Output<ClusterEksConfigV2Args> eksConfigV2) {
            $.eksConfigV2 = eksConfigV2;
            return this;
        }

        /**
         * @param eksConfigV2 The Amazon EKS V2 configuration to create or import `eks` Clusters. Conflicts with `aks_config`, `eks_config`, `gke_config`, `gke_config_v2`, `oke_config` `k3s_config` and `rke_config`. For Rancher v2.5.x and above (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder eksConfigV2(ClusterEksConfigV2Args eksConfigV2) {
            return eksConfigV2(Output.of(eksConfigV2));
        }

        /**
         * @param enableClusterAlerting Enable built-in cluster alerting (bool)
         * 
         * @return builder
         * 
         */
        public Builder enableClusterAlerting(@Nullable Output<Boolean> enableClusterAlerting) {
            $.enableClusterAlerting = enableClusterAlerting;
            return this;
        }

        /**
         * @param enableClusterAlerting Enable built-in cluster alerting (bool)
         * 
         * @return builder
         * 
         */
        public Builder enableClusterAlerting(Boolean enableClusterAlerting) {
            return enableClusterAlerting(Output.of(enableClusterAlerting));
        }

        /**
         * @param enableClusterMonitoring Enable built-in cluster monitoring (bool)
         * 
         * @return builder
         * 
         */
        public Builder enableClusterMonitoring(@Nullable Output<Boolean> enableClusterMonitoring) {
            $.enableClusterMonitoring = enableClusterMonitoring;
            return this;
        }

        /**
         * @param enableClusterMonitoring Enable built-in cluster monitoring (bool)
         * 
         * @return builder
         * 
         */
        public Builder enableClusterMonitoring(Boolean enableClusterMonitoring) {
            return enableClusterMonitoring(Output.of(enableClusterMonitoring));
        }

        /**
         * @param enableNetworkPolicy Enable project network isolation (bool)
         * 
         * @return builder
         * 
         */
        public Builder enableNetworkPolicy(@Nullable Output<Boolean> enableNetworkPolicy) {
            $.enableNetworkPolicy = enableNetworkPolicy;
            return this;
        }

        /**
         * @param enableNetworkPolicy Enable project network isolation (bool)
         * 
         * @return builder
         * 
         */
        public Builder enableNetworkPolicy(Boolean enableNetworkPolicy) {
            return enableNetworkPolicy(Output.of(enableNetworkPolicy));
        }

        /**
         * @param fleetAgentDeploymentCustomizations Optional customization for fleet agent. For Rancher v2.7.5 and above (list)
         * 
         * @return builder
         * 
         */
        public Builder fleetAgentDeploymentCustomizations(@Nullable Output<List<ClusterFleetAgentDeploymentCustomizationArgs>> fleetAgentDeploymentCustomizations) {
            $.fleetAgentDeploymentCustomizations = fleetAgentDeploymentCustomizations;
            return this;
        }

        /**
         * @param fleetAgentDeploymentCustomizations Optional customization for fleet agent. For Rancher v2.7.5 and above (list)
         * 
         * @return builder
         * 
         */
        public Builder fleetAgentDeploymentCustomizations(List<ClusterFleetAgentDeploymentCustomizationArgs> fleetAgentDeploymentCustomizations) {
            return fleetAgentDeploymentCustomizations(Output.of(fleetAgentDeploymentCustomizations));
        }

        /**
         * @param fleetAgentDeploymentCustomizations Optional customization for fleet agent. For Rancher v2.7.5 and above (list)
         * 
         * @return builder
         * 
         */
        public Builder fleetAgentDeploymentCustomizations(ClusterFleetAgentDeploymentCustomizationArgs... fleetAgentDeploymentCustomizations) {
            return fleetAgentDeploymentCustomizations(List.of(fleetAgentDeploymentCustomizations));
        }

        /**
         * @param fleetWorkspaceName Fleet workspace name (string)
         * 
         * @return builder
         * 
         */
        public Builder fleetWorkspaceName(@Nullable Output<String> fleetWorkspaceName) {
            $.fleetWorkspaceName = fleetWorkspaceName;
            return this;
        }

        /**
         * @param fleetWorkspaceName Fleet workspace name (string)
         * 
         * @return builder
         * 
         */
        public Builder fleetWorkspaceName(String fleetWorkspaceName) {
            return fleetWorkspaceName(Output.of(fleetWorkspaceName));
        }

        /**
         * @param gkeConfig The Google GKE configuration for `gke` Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config`, `eks_config_v2`, `gke_config_v2`, `oke_config`, `k3s_config` and `rke_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder gkeConfig(@Nullable Output<ClusterGkeConfigArgs> gkeConfig) {
            $.gkeConfig = gkeConfig;
            return this;
        }

        /**
         * @param gkeConfig The Google GKE configuration for `gke` Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config`, `eks_config_v2`, `gke_config_v2`, `oke_config`, `k3s_config` and `rke_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder gkeConfig(ClusterGkeConfigArgs gkeConfig) {
            return gkeConfig(Output.of(gkeConfig));
        }

        /**
         * @param gkeConfigV2 The Google GKE V2 configuration for `gke` Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config`, `eks_config_v2`, `gke_config`, `oke_config`, `k3s_config` and `rke_config`. For Rancher v2.5.8 and above (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder gkeConfigV2(@Nullable Output<ClusterGkeConfigV2Args> gkeConfigV2) {
            $.gkeConfigV2 = gkeConfigV2;
            return this;
        }

        /**
         * @param gkeConfigV2 The Google GKE V2 configuration for `gke` Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config`, `eks_config_v2`, `gke_config`, `oke_config`, `k3s_config` and `rke_config`. For Rancher v2.5.8 and above (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder gkeConfigV2(ClusterGkeConfigV2Args gkeConfigV2) {
            return gkeConfigV2(Output.of(gkeConfigV2));
        }

        /**
         * @param k3sConfig The K3S configuration for `k3s` imported Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config`, `eks_config_v2`, `gke_config`, `gke_config_v2`, `oke_config` and `rke_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder k3sConfig(@Nullable Output<ClusterK3sConfigArgs> k3sConfig) {
            $.k3sConfig = k3sConfig;
            return this;
        }

        /**
         * @param k3sConfig The K3S configuration for `k3s` imported Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config`, `eks_config_v2`, `gke_config`, `gke_config_v2`, `oke_config` and `rke_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder k3sConfig(ClusterK3sConfigArgs k3sConfig) {
            return k3sConfig(Output.of(k3sConfig));
        }

        /**
         * @param labels Labels for the Cluster (map)
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Labels for the Cluster (map)
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param name The name of the Cluster (string)
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Cluster (string)
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param okeConfig The Oracle OKE configuration for `oke` Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config`, `eks_config_v2`, `gke_config`, `gke_config_v2`, `k3s_config` and `rke_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder okeConfig(@Nullable Output<ClusterOkeConfigArgs> okeConfig) {
            $.okeConfig = okeConfig;
            return this;
        }

        /**
         * @param okeConfig The Oracle OKE configuration for `oke` Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config`, `eks_config_v2`, `gke_config`, `gke_config_v2`, `k3s_config` and `rke_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder okeConfig(ClusterOkeConfigArgs okeConfig) {
            return okeConfig(Output.of(okeConfig));
        }

        /**
         * @param rke2Config The RKE2 configuration for `rke2` Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config`, `gke_config`, `oke_config`, `k3s_config` and `rke_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder rke2Config(@Nullable Output<ClusterRke2ConfigArgs> rke2Config) {
            $.rke2Config = rke2Config;
            return this;
        }

        /**
         * @param rke2Config The RKE2 configuration for `rke2` Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config`, `gke_config`, `oke_config`, `k3s_config` and `rke_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder rke2Config(ClusterRke2ConfigArgs rke2Config) {
            return rke2Config(Output.of(rke2Config));
        }

        /**
         * @param rkeConfig The RKE configuration for `rke` Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config`, `eks_config_v2`, `gke_config`, `gke_config_v2`, `oke_config` and `k3s_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder rkeConfig(@Nullable Output<ClusterRkeConfigArgs> rkeConfig) {
            $.rkeConfig = rkeConfig;
            return this;
        }

        /**
         * @param rkeConfig The RKE configuration for `rke` Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config`, `eks_config_v2`, `gke_config`, `gke_config_v2`, `oke_config` and `k3s_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder rkeConfig(ClusterRkeConfigArgs rkeConfig) {
            return rkeConfig(Output.of(rkeConfig));
        }

        /**
         * @param windowsPreferedCluster Windows preferred cluster. Default: `false` (bool)
         * 
         * @return builder
         * 
         */
        public Builder windowsPreferedCluster(@Nullable Output<Boolean> windowsPreferedCluster) {
            $.windowsPreferedCluster = windowsPreferedCluster;
            return this;
        }

        /**
         * @param windowsPreferedCluster Windows preferred cluster. Default: `false` (bool)
         * 
         * @return builder
         * 
         */
        public Builder windowsPreferedCluster(Boolean windowsPreferedCluster) {
            return windowsPreferedCluster(Output.of(windowsPreferedCluster));
        }

        public ClusterArgs build() {
            return $;
        }
    }

}
