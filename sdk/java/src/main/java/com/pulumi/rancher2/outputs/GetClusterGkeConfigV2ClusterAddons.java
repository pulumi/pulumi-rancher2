// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class GetClusterGkeConfigV2ClusterAddons {
    /**
     * @return Enable GKE horizontal pod autoscaling
     * 
     */
    private Boolean horizontalPodAutoscaling;
    /**
     * @return Enable GKE HTTP load balancing
     * 
     */
    private Boolean httpLoadBalancing;
    /**
     * @return Enable GKE network policy config
     * 
     */
    private Boolean networkPolicyConfig;

    private GetClusterGkeConfigV2ClusterAddons() {}
    /**
     * @return Enable GKE horizontal pod autoscaling
     * 
     */
    public Boolean horizontalPodAutoscaling() {
        return this.horizontalPodAutoscaling;
    }
    /**
     * @return Enable GKE HTTP load balancing
     * 
     */
    public Boolean httpLoadBalancing() {
        return this.httpLoadBalancing;
    }
    /**
     * @return Enable GKE network policy config
     * 
     */
    public Boolean networkPolicyConfig() {
        return this.networkPolicyConfig;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterGkeConfigV2ClusterAddons defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean horizontalPodAutoscaling;
        private Boolean httpLoadBalancing;
        private Boolean networkPolicyConfig;
        public Builder() {}
        public Builder(GetClusterGkeConfigV2ClusterAddons defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.horizontalPodAutoscaling = defaults.horizontalPodAutoscaling;
    	      this.httpLoadBalancing = defaults.httpLoadBalancing;
    	      this.networkPolicyConfig = defaults.networkPolicyConfig;
        }

        @CustomType.Setter
        public Builder horizontalPodAutoscaling(Boolean horizontalPodAutoscaling) {
            if (horizontalPodAutoscaling == null) {
              throw new MissingRequiredPropertyException("GetClusterGkeConfigV2ClusterAddons", "horizontalPodAutoscaling");
            }
            this.horizontalPodAutoscaling = horizontalPodAutoscaling;
            return this;
        }
        @CustomType.Setter
        public Builder httpLoadBalancing(Boolean httpLoadBalancing) {
            if (httpLoadBalancing == null) {
              throw new MissingRequiredPropertyException("GetClusterGkeConfigV2ClusterAddons", "httpLoadBalancing");
            }
            this.httpLoadBalancing = httpLoadBalancing;
            return this;
        }
        @CustomType.Setter
        public Builder networkPolicyConfig(Boolean networkPolicyConfig) {
            if (networkPolicyConfig == null) {
              throw new MissingRequiredPropertyException("GetClusterGkeConfigV2ClusterAddons", "networkPolicyConfig");
            }
            this.networkPolicyConfig = networkPolicyConfig;
            return this;
        }
        public GetClusterGkeConfigV2ClusterAddons build() {
            final var _resultValue = new GetClusterGkeConfigV2ClusterAddons();
            _resultValue.horizontalPodAutoscaling = horizontalPodAutoscaling;
            _resultValue.httpLoadBalancing = httpLoadBalancing;
            _resultValue.networkPolicyConfig = networkPolicyConfig;
            return _resultValue;
        }
    }
}
