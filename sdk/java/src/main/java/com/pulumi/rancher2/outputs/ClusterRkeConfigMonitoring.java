// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.rancher2.outputs.ClusterRkeConfigMonitoringToleration;
import com.pulumi.rancher2.outputs.ClusterRkeConfigMonitoringUpdateStrategy;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterRkeConfigMonitoring {
    /**
     * @return RKE monitoring node selector (map)
     * 
     */
    private final @Nullable Map<String,Object> nodeSelector;
    /**
     * @return RKE options for network (map)
     * 
     */
    private final @Nullable Map<String,Object> options;
    /**
     * @return RKE monitoring provider (string)
     * 
     */
    private final @Nullable String provider;
    /**
     * @return RKE monitoring replicas (int)
     * 
     */
    private final @Nullable Integer replicas;
    /**
     * @return Network add-on tolerations (list)
     * 
     */
    private final @Nullable List<ClusterRkeConfigMonitoringToleration> tolerations;
    /**
     * @return RKE monitoring update strategy (list Maxitems: 1)
     * 
     */
    private final @Nullable ClusterRkeConfigMonitoringUpdateStrategy updateStrategy;

    @CustomType.Constructor
    private ClusterRkeConfigMonitoring(
        @CustomType.Parameter("nodeSelector") @Nullable Map<String,Object> nodeSelector,
        @CustomType.Parameter("options") @Nullable Map<String,Object> options,
        @CustomType.Parameter("provider") @Nullable String provider,
        @CustomType.Parameter("replicas") @Nullable Integer replicas,
        @CustomType.Parameter("tolerations") @Nullable List<ClusterRkeConfigMonitoringToleration> tolerations,
        @CustomType.Parameter("updateStrategy") @Nullable ClusterRkeConfigMonitoringUpdateStrategy updateStrategy) {
        this.nodeSelector = nodeSelector;
        this.options = options;
        this.provider = provider;
        this.replicas = replicas;
        this.tolerations = tolerations;
        this.updateStrategy = updateStrategy;
    }

    /**
     * @return RKE monitoring node selector (map)
     * 
     */
    public Map<String,Object> nodeSelector() {
        return this.nodeSelector == null ? Map.of() : this.nodeSelector;
    }
    /**
     * @return RKE options for network (map)
     * 
     */
    public Map<String,Object> options() {
        return this.options == null ? Map.of() : this.options;
    }
    /**
     * @return RKE monitoring provider (string)
     * 
     */
    public Optional<String> provider() {
        return Optional.ofNullable(this.provider);
    }
    /**
     * @return RKE monitoring replicas (int)
     * 
     */
    public Optional<Integer> replicas() {
        return Optional.ofNullable(this.replicas);
    }
    /**
     * @return Network add-on tolerations (list)
     * 
     */
    public List<ClusterRkeConfigMonitoringToleration> tolerations() {
        return this.tolerations == null ? List.of() : this.tolerations;
    }
    /**
     * @return RKE monitoring update strategy (list Maxitems: 1)
     * 
     */
    public Optional<ClusterRkeConfigMonitoringUpdateStrategy> updateStrategy() {
        return Optional.ofNullable(this.updateStrategy);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterRkeConfigMonitoring defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Map<String,Object> nodeSelector;
        private @Nullable Map<String,Object> options;
        private @Nullable String provider;
        private @Nullable Integer replicas;
        private @Nullable List<ClusterRkeConfigMonitoringToleration> tolerations;
        private @Nullable ClusterRkeConfigMonitoringUpdateStrategy updateStrategy;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterRkeConfigMonitoring defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.nodeSelector = defaults.nodeSelector;
    	      this.options = defaults.options;
    	      this.provider = defaults.provider;
    	      this.replicas = defaults.replicas;
    	      this.tolerations = defaults.tolerations;
    	      this.updateStrategy = defaults.updateStrategy;
        }

        public Builder nodeSelector(@Nullable Map<String,Object> nodeSelector) {
            this.nodeSelector = nodeSelector;
            return this;
        }
        public Builder options(@Nullable Map<String,Object> options) {
            this.options = options;
            return this;
        }
        public Builder provider(@Nullable String provider) {
            this.provider = provider;
            return this;
        }
        public Builder replicas(@Nullable Integer replicas) {
            this.replicas = replicas;
            return this;
        }
        public Builder tolerations(@Nullable List<ClusterRkeConfigMonitoringToleration> tolerations) {
            this.tolerations = tolerations;
            return this;
        }
        public Builder tolerations(ClusterRkeConfigMonitoringToleration... tolerations) {
            return tolerations(List.of(tolerations));
        }
        public Builder updateStrategy(@Nullable ClusterRkeConfigMonitoringUpdateStrategy updateStrategy) {
            this.updateStrategy = updateStrategy;
            return this;
        }        public ClusterRkeConfigMonitoring build() {
            return new ClusterRkeConfigMonitoring(nodeSelector, options, provider, replicas, tolerations, updateStrategy);
        }
    }
}
