// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.rancher2.outputs.GetClusterRkeConfigServicesEtcdBackupConfig;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetClusterRkeConfigServicesEtcd {
    private GetClusterRkeConfigServicesEtcdBackupConfig backupConfig;
    /**
     * @return (Computed) K8s cluster ca cert (string)
     * 
     */
    private String caCert;
    private String cert;
    private String creation;
    private @Nullable List<String> externalUrls;
    private Map<String,Object> extraArgs;
    private @Nullable List<String> extraBinds;
    private @Nullable List<String> extraEnvs;
    private @Nullable Integer gid;
    private String image;
    private String key;
    private String path;
    private String retention;
    private Boolean snapshot;
    private @Nullable Integer uid;

    private GetClusterRkeConfigServicesEtcd() {}
    public GetClusterRkeConfigServicesEtcdBackupConfig backupConfig() {
        return this.backupConfig;
    }
    /**
     * @return (Computed) K8s cluster ca cert (string)
     * 
     */
    public String caCert() {
        return this.caCert;
    }
    public String cert() {
        return this.cert;
    }
    public String creation() {
        return this.creation;
    }
    public List<String> externalUrls() {
        return this.externalUrls == null ? List.of() : this.externalUrls;
    }
    public Map<String,Object> extraArgs() {
        return this.extraArgs;
    }
    public List<String> extraBinds() {
        return this.extraBinds == null ? List.of() : this.extraBinds;
    }
    public List<String> extraEnvs() {
        return this.extraEnvs == null ? List.of() : this.extraEnvs;
    }
    public Optional<Integer> gid() {
        return Optional.ofNullable(this.gid);
    }
    public String image() {
        return this.image;
    }
    public String key() {
        return this.key;
    }
    public String path() {
        return this.path;
    }
    public String retention() {
        return this.retention;
    }
    public Boolean snapshot() {
        return this.snapshot;
    }
    public Optional<Integer> uid() {
        return Optional.ofNullable(this.uid);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterRkeConfigServicesEtcd defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetClusterRkeConfigServicesEtcdBackupConfig backupConfig;
        private String caCert;
        private String cert;
        private String creation;
        private @Nullable List<String> externalUrls;
        private Map<String,Object> extraArgs;
        private @Nullable List<String> extraBinds;
        private @Nullable List<String> extraEnvs;
        private @Nullable Integer gid;
        private String image;
        private String key;
        private String path;
        private String retention;
        private Boolean snapshot;
        private @Nullable Integer uid;
        public Builder() {}
        public Builder(GetClusterRkeConfigServicesEtcd defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupConfig = defaults.backupConfig;
    	      this.caCert = defaults.caCert;
    	      this.cert = defaults.cert;
    	      this.creation = defaults.creation;
    	      this.externalUrls = defaults.externalUrls;
    	      this.extraArgs = defaults.extraArgs;
    	      this.extraBinds = defaults.extraBinds;
    	      this.extraEnvs = defaults.extraEnvs;
    	      this.gid = defaults.gid;
    	      this.image = defaults.image;
    	      this.key = defaults.key;
    	      this.path = defaults.path;
    	      this.retention = defaults.retention;
    	      this.snapshot = defaults.snapshot;
    	      this.uid = defaults.uid;
        }

        @CustomType.Setter
        public Builder backupConfig(GetClusterRkeConfigServicesEtcdBackupConfig backupConfig) {
            if (backupConfig == null) {
              throw new MissingRequiredPropertyException("GetClusterRkeConfigServicesEtcd", "backupConfig");
            }
            this.backupConfig = backupConfig;
            return this;
        }
        @CustomType.Setter
        public Builder caCert(String caCert) {
            if (caCert == null) {
              throw new MissingRequiredPropertyException("GetClusterRkeConfigServicesEtcd", "caCert");
            }
            this.caCert = caCert;
            return this;
        }
        @CustomType.Setter
        public Builder cert(String cert) {
            if (cert == null) {
              throw new MissingRequiredPropertyException("GetClusterRkeConfigServicesEtcd", "cert");
            }
            this.cert = cert;
            return this;
        }
        @CustomType.Setter
        public Builder creation(String creation) {
            if (creation == null) {
              throw new MissingRequiredPropertyException("GetClusterRkeConfigServicesEtcd", "creation");
            }
            this.creation = creation;
            return this;
        }
        @CustomType.Setter
        public Builder externalUrls(@Nullable List<String> externalUrls) {

            this.externalUrls = externalUrls;
            return this;
        }
        public Builder externalUrls(String... externalUrls) {
            return externalUrls(List.of(externalUrls));
        }
        @CustomType.Setter
        public Builder extraArgs(Map<String,Object> extraArgs) {
            if (extraArgs == null) {
              throw new MissingRequiredPropertyException("GetClusterRkeConfigServicesEtcd", "extraArgs");
            }
            this.extraArgs = extraArgs;
            return this;
        }
        @CustomType.Setter
        public Builder extraBinds(@Nullable List<String> extraBinds) {

            this.extraBinds = extraBinds;
            return this;
        }
        public Builder extraBinds(String... extraBinds) {
            return extraBinds(List.of(extraBinds));
        }
        @CustomType.Setter
        public Builder extraEnvs(@Nullable List<String> extraEnvs) {

            this.extraEnvs = extraEnvs;
            return this;
        }
        public Builder extraEnvs(String... extraEnvs) {
            return extraEnvs(List.of(extraEnvs));
        }
        @CustomType.Setter
        public Builder gid(@Nullable Integer gid) {

            this.gid = gid;
            return this;
        }
        @CustomType.Setter
        public Builder image(String image) {
            if (image == null) {
              throw new MissingRequiredPropertyException("GetClusterRkeConfigServicesEtcd", "image");
            }
            this.image = image;
            return this;
        }
        @CustomType.Setter
        public Builder key(String key) {
            if (key == null) {
              throw new MissingRequiredPropertyException("GetClusterRkeConfigServicesEtcd", "key");
            }
            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder path(String path) {
            if (path == null) {
              throw new MissingRequiredPropertyException("GetClusterRkeConfigServicesEtcd", "path");
            }
            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder retention(String retention) {
            if (retention == null) {
              throw new MissingRequiredPropertyException("GetClusterRkeConfigServicesEtcd", "retention");
            }
            this.retention = retention;
            return this;
        }
        @CustomType.Setter
        public Builder snapshot(Boolean snapshot) {
            if (snapshot == null) {
              throw new MissingRequiredPropertyException("GetClusterRkeConfigServicesEtcd", "snapshot");
            }
            this.snapshot = snapshot;
            return this;
        }
        @CustomType.Setter
        public Builder uid(@Nullable Integer uid) {

            this.uid = uid;
            return this;
        }
        public GetClusterRkeConfigServicesEtcd build() {
            final var _resultValue = new GetClusterRkeConfigServicesEtcd();
            _resultValue.backupConfig = backupConfig;
            _resultValue.caCert = caCert;
            _resultValue.cert = cert;
            _resultValue.creation = creation;
            _resultValue.externalUrls = externalUrls;
            _resultValue.extraArgs = extraArgs;
            _resultValue.extraBinds = extraBinds;
            _resultValue.extraEnvs = extraEnvs;
            _resultValue.gid = gid;
            _resultValue.image = image;
            _resultValue.key = key;
            _resultValue.path = path;
            _resultValue.retention = retention;
            _resultValue.snapshot = snapshot;
            _resultValue.uid = uid;
            return _resultValue;
        }
    }
}
