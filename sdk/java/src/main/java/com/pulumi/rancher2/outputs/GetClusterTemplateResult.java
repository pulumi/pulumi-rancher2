// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.rancher2.outputs.GetClusterTemplateMember;
import com.pulumi.rancher2.outputs.GetClusterTemplateTemplateRevision;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetClusterTemplateResult {
    /**
     * @return (Computed) Annotations for the cluster template (map)
     * 
     */
    private Map<String,String> annotations;
    /**
     * @return (Computed) Default cluster template revision ID (string)
     * 
     */
    private String defaultRevisionId;
    private String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return (Computed) Labels for the cluster template (map)
     * 
     */
    private Map<String,String> labels;
    /**
     * @return (Computed) Cluster template members (list)
     * 
     */
    private List<GetClusterTemplateMember> members;
    private String name;
    /**
     * @return (Computed) Cluster template revisions (list)
     * 
     */
    private List<GetClusterTemplateTemplateRevision> templateRevisions;

    private GetClusterTemplateResult() {}
    /**
     * @return (Computed) Annotations for the cluster template (map)
     * 
     */
    public Map<String,String> annotations() {
        return this.annotations;
    }
    /**
     * @return (Computed) Default cluster template revision ID (string)
     * 
     */
    public String defaultRevisionId() {
        return this.defaultRevisionId;
    }
    public String description() {
        return this.description;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return (Computed) Labels for the cluster template (map)
     * 
     */
    public Map<String,String> labels() {
        return this.labels;
    }
    /**
     * @return (Computed) Cluster template members (list)
     * 
     */
    public List<GetClusterTemplateMember> members() {
        return this.members;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return (Computed) Cluster template revisions (list)
     * 
     */
    public List<GetClusterTemplateTemplateRevision> templateRevisions() {
        return this.templateRevisions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterTemplateResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,String> annotations;
        private String defaultRevisionId;
        private String description;
        private String id;
        private Map<String,String> labels;
        private List<GetClusterTemplateMember> members;
        private String name;
        private List<GetClusterTemplateTemplateRevision> templateRevisions;
        public Builder() {}
        public Builder(GetClusterTemplateResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.annotations = defaults.annotations;
    	      this.defaultRevisionId = defaults.defaultRevisionId;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.labels = defaults.labels;
    	      this.members = defaults.members;
    	      this.name = defaults.name;
    	      this.templateRevisions = defaults.templateRevisions;
        }

        @CustomType.Setter
        public Builder annotations(Map<String,String> annotations) {
            if (annotations == null) {
              throw new MissingRequiredPropertyException("GetClusterTemplateResult", "annotations");
            }
            this.annotations = annotations;
            return this;
        }
        @CustomType.Setter
        public Builder defaultRevisionId(String defaultRevisionId) {
            if (defaultRevisionId == null) {
              throw new MissingRequiredPropertyException("GetClusterTemplateResult", "defaultRevisionId");
            }
            this.defaultRevisionId = defaultRevisionId;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetClusterTemplateResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetClusterTemplateResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder labels(Map<String,String> labels) {
            if (labels == null) {
              throw new MissingRequiredPropertyException("GetClusterTemplateResult", "labels");
            }
            this.labels = labels;
            return this;
        }
        @CustomType.Setter
        public Builder members(List<GetClusterTemplateMember> members) {
            if (members == null) {
              throw new MissingRequiredPropertyException("GetClusterTemplateResult", "members");
            }
            this.members = members;
            return this;
        }
        public Builder members(GetClusterTemplateMember... members) {
            return members(List.of(members));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetClusterTemplateResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder templateRevisions(List<GetClusterTemplateTemplateRevision> templateRevisions) {
            if (templateRevisions == null) {
              throw new MissingRequiredPropertyException("GetClusterTemplateResult", "templateRevisions");
            }
            this.templateRevisions = templateRevisions;
            return this;
        }
        public Builder templateRevisions(GetClusterTemplateTemplateRevision... templateRevisions) {
            return templateRevisions(List.of(templateRevisions));
        }
        public GetClusterTemplateResult build() {
            final var _resultValue = new GetClusterTemplateResult();
            _resultValue.annotations = annotations;
            _resultValue.defaultRevisionId = defaultRevisionId;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.labels = labels;
            _resultValue.members = members;
            _resultValue.name = name;
            _resultValue.templateRevisions = templateRevisions;
            return _resultValue;
        }
    }
}
