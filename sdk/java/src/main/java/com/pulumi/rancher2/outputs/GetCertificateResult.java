// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCertificateResult {
    /**
     * @return (Computed) Annotations for certificate object (map)
     * 
     */
    private final Map<String,Object> annotations;
    /**
     * @return (Computed) Base64 encoded certs (string)
     * 
     */
    private final String certs;
    /**
     * @return (Computed) A certificate description (string)
     * 
     */
    private final String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return (Computed) Labels for certificate object (map)
     * 
     */
    private final Map<String,Object> labels;
    private final String name;
    private final @Nullable String namespaceId;
    private final String projectId;

    @CustomType.Constructor
    private GetCertificateResult(
        @CustomType.Parameter("annotations") Map<String,Object> annotations,
        @CustomType.Parameter("certs") String certs,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("labels") Map<String,Object> labels,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("namespaceId") @Nullable String namespaceId,
        @CustomType.Parameter("projectId") String projectId) {
        this.annotations = annotations;
        this.certs = certs;
        this.description = description;
        this.id = id;
        this.labels = labels;
        this.name = name;
        this.namespaceId = namespaceId;
        this.projectId = projectId;
    }

    /**
     * @return (Computed) Annotations for certificate object (map)
     * 
     */
    public Map<String,Object> annotations() {
        return this.annotations;
    }
    /**
     * @return (Computed) Base64 encoded certs (string)
     * 
     */
    public String certs() {
        return this.certs;
    }
    /**
     * @return (Computed) A certificate description (string)
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return (Computed) Labels for certificate object (map)
     * 
     */
    public Map<String,Object> labels() {
        return this.labels;
    }
    public String name() {
        return this.name;
    }
    public Optional<String> namespaceId() {
        return Optional.ofNullable(this.namespaceId);
    }
    public String projectId() {
        return this.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCertificateResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Map<String,Object> annotations;
        private String certs;
        private String description;
        private String id;
        private Map<String,Object> labels;
        private String name;
        private @Nullable String namespaceId;
        private String projectId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetCertificateResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.annotations = defaults.annotations;
    	      this.certs = defaults.certs;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.namespaceId = defaults.namespaceId;
    	      this.projectId = defaults.projectId;
        }

        public Builder annotations(Map<String,Object> annotations) {
            this.annotations = Objects.requireNonNull(annotations);
            return this;
        }
        public Builder certs(String certs) {
            this.certs = Objects.requireNonNull(certs);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder labels(Map<String,Object> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder namespaceId(@Nullable String namespaceId) {
            this.namespaceId = namespaceId;
            return this;
        }
        public Builder projectId(String projectId) {
            this.projectId = Objects.requireNonNull(projectId);
            return this;
        }        public GetCertificateResult build() {
            return new GetCertificateResult(annotations, certs, description, id, labels, name, namespaceId, projectId);
        }
    }
}
