// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetGlobalDnsProviderCloudflareConfig {
    private String apiEmail;
    private String apiKey;
    private @Nullable Boolean proxySetting;

    private GetGlobalDnsProviderCloudflareConfig() {}
    public String apiEmail() {
        return this.apiEmail;
    }
    public String apiKey() {
        return this.apiKey;
    }
    public Optional<Boolean> proxySetting() {
        return Optional.ofNullable(this.proxySetting);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGlobalDnsProviderCloudflareConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String apiEmail;
        private String apiKey;
        private @Nullable Boolean proxySetting;
        public Builder() {}
        public Builder(GetGlobalDnsProviderCloudflareConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiEmail = defaults.apiEmail;
    	      this.apiKey = defaults.apiKey;
    	      this.proxySetting = defaults.proxySetting;
        }

        @CustomType.Setter
        public Builder apiEmail(String apiEmail) {
            if (apiEmail == null) {
              throw new MissingRequiredPropertyException("GetGlobalDnsProviderCloudflareConfig", "apiEmail");
            }
            this.apiEmail = apiEmail;
            return this;
        }
        @CustomType.Setter
        public Builder apiKey(String apiKey) {
            if (apiKey == null) {
              throw new MissingRequiredPropertyException("GetGlobalDnsProviderCloudflareConfig", "apiKey");
            }
            this.apiKey = apiKey;
            return this;
        }
        @CustomType.Setter
        public Builder proxySetting(@Nullable Boolean proxySetting) {

            this.proxySetting = proxySetting;
            return this;
        }
        public GetGlobalDnsProviderCloudflareConfig build() {
            final var _resultValue = new GetGlobalDnsProviderCloudflareConfig();
            _resultValue.apiEmail = apiEmail;
            _resultValue.apiKey = apiKey;
            _resultValue.proxySetting = proxySetting;
            return _resultValue;
        }
    }
}
