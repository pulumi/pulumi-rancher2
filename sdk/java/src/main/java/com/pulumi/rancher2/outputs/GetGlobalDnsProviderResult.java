// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.rancher2.outputs.GetGlobalDnsProviderAlidnsConfig;
import com.pulumi.rancher2.outputs.GetGlobalDnsProviderCloudflareConfig;
import com.pulumi.rancher2.outputs.GetGlobalDnsProviderRoute53Config;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetGlobalDnsProviderResult {
    private GetGlobalDnsProviderAlidnsConfig alidnsConfig;
    /**
     * @return (Computed) Annotations of the resource (map)
     * 
     */
    private Map<String,Object> annotations;
    private GetGlobalDnsProviderCloudflareConfig cloudflareConfig;
    private String dnsProvider;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return (Computed) Labels of the resource (map)
     * 
     */
    private Map<String,Object> labels;
    /**
     * @return (Computed) The name of the global DNS provider (string)
     * 
     */
    private String name;
    private String rootDomain;
    private GetGlobalDnsProviderRoute53Config route53Config;

    private GetGlobalDnsProviderResult() {}
    public GetGlobalDnsProviderAlidnsConfig alidnsConfig() {
        return this.alidnsConfig;
    }
    /**
     * @return (Computed) Annotations of the resource (map)
     * 
     */
    public Map<String,Object> annotations() {
        return this.annotations;
    }
    public GetGlobalDnsProviderCloudflareConfig cloudflareConfig() {
        return this.cloudflareConfig;
    }
    public String dnsProvider() {
        return this.dnsProvider;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return (Computed) Labels of the resource (map)
     * 
     */
    public Map<String,Object> labels() {
        return this.labels;
    }
    /**
     * @return (Computed) The name of the global DNS provider (string)
     * 
     */
    public String name() {
        return this.name;
    }
    public String rootDomain() {
        return this.rootDomain;
    }
    public GetGlobalDnsProviderRoute53Config route53Config() {
        return this.route53Config;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGlobalDnsProviderResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetGlobalDnsProviderAlidnsConfig alidnsConfig;
        private Map<String,Object> annotations;
        private GetGlobalDnsProviderCloudflareConfig cloudflareConfig;
        private String dnsProvider;
        private String id;
        private Map<String,Object> labels;
        private String name;
        private String rootDomain;
        private GetGlobalDnsProviderRoute53Config route53Config;
        public Builder() {}
        public Builder(GetGlobalDnsProviderResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alidnsConfig = defaults.alidnsConfig;
    	      this.annotations = defaults.annotations;
    	      this.cloudflareConfig = defaults.cloudflareConfig;
    	      this.dnsProvider = defaults.dnsProvider;
    	      this.id = defaults.id;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.rootDomain = defaults.rootDomain;
    	      this.route53Config = defaults.route53Config;
        }

        @CustomType.Setter
        public Builder alidnsConfig(GetGlobalDnsProviderAlidnsConfig alidnsConfig) {
            this.alidnsConfig = Objects.requireNonNull(alidnsConfig);
            return this;
        }
        @CustomType.Setter
        public Builder annotations(Map<String,Object> annotations) {
            this.annotations = Objects.requireNonNull(annotations);
            return this;
        }
        @CustomType.Setter
        public Builder cloudflareConfig(GetGlobalDnsProviderCloudflareConfig cloudflareConfig) {
            this.cloudflareConfig = Objects.requireNonNull(cloudflareConfig);
            return this;
        }
        @CustomType.Setter
        public Builder dnsProvider(String dnsProvider) {
            this.dnsProvider = Objects.requireNonNull(dnsProvider);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder labels(Map<String,Object> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder rootDomain(String rootDomain) {
            this.rootDomain = Objects.requireNonNull(rootDomain);
            return this;
        }
        @CustomType.Setter
        public Builder route53Config(GetGlobalDnsProviderRoute53Config route53Config) {
            this.route53Config = Objects.requireNonNull(route53Config);
            return this;
        }
        public GetGlobalDnsProviderResult build() {
            final var _resultValue = new GetGlobalDnsProviderResult();
            _resultValue.alidnsConfig = alidnsConfig;
            _resultValue.annotations = annotations;
            _resultValue.cloudflareConfig = cloudflareConfig;
            _resultValue.dnsProvider = dnsProvider;
            _resultValue.id = id;
            _resultValue.labels = labels;
            _resultValue.name = name;
            _resultValue.rootDomain = rootDomain;
            _resultValue.route53Config = route53Config;
            return _resultValue;
        }
    }
}
