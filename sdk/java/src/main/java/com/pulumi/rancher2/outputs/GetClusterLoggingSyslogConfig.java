// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetClusterLoggingSyslogConfig {
    private final @Nullable String certificate;
    private final @Nullable String clientCert;
    private final @Nullable String clientKey;
    private final @Nullable Boolean enableTls;
    private final String endpoint;
    private final @Nullable String program;
    private final @Nullable String protocol;
    private final @Nullable String severity;
    private final Boolean sslVerify;
    private final @Nullable String token;

    @CustomType.Constructor
    private GetClusterLoggingSyslogConfig(
        @CustomType.Parameter("certificate") @Nullable String certificate,
        @CustomType.Parameter("clientCert") @Nullable String clientCert,
        @CustomType.Parameter("clientKey") @Nullable String clientKey,
        @CustomType.Parameter("enableTls") @Nullable Boolean enableTls,
        @CustomType.Parameter("endpoint") String endpoint,
        @CustomType.Parameter("program") @Nullable String program,
        @CustomType.Parameter("protocol") @Nullable String protocol,
        @CustomType.Parameter("severity") @Nullable String severity,
        @CustomType.Parameter("sslVerify") Boolean sslVerify,
        @CustomType.Parameter("token") @Nullable String token) {
        this.certificate = certificate;
        this.clientCert = clientCert;
        this.clientKey = clientKey;
        this.enableTls = enableTls;
        this.endpoint = endpoint;
        this.program = program;
        this.protocol = protocol;
        this.severity = severity;
        this.sslVerify = sslVerify;
        this.token = token;
    }

    public Optional<String> certificate() {
        return Optional.ofNullable(this.certificate);
    }
    public Optional<String> clientCert() {
        return Optional.ofNullable(this.clientCert);
    }
    public Optional<String> clientKey() {
        return Optional.ofNullable(this.clientKey);
    }
    public Optional<Boolean> enableTls() {
        return Optional.ofNullable(this.enableTls);
    }
    public String endpoint() {
        return this.endpoint;
    }
    public Optional<String> program() {
        return Optional.ofNullable(this.program);
    }
    public Optional<String> protocol() {
        return Optional.ofNullable(this.protocol);
    }
    public Optional<String> severity() {
        return Optional.ofNullable(this.severity);
    }
    public Boolean sslVerify() {
        return this.sslVerify;
    }
    public Optional<String> token() {
        return Optional.ofNullable(this.token);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterLoggingSyslogConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String certificate;
        private @Nullable String clientCert;
        private @Nullable String clientKey;
        private @Nullable Boolean enableTls;
        private String endpoint;
        private @Nullable String program;
        private @Nullable String protocol;
        private @Nullable String severity;
        private Boolean sslVerify;
        private @Nullable String token;

        public Builder() {
    	      // Empty
        }

        public Builder(GetClusterLoggingSyslogConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificate = defaults.certificate;
    	      this.clientCert = defaults.clientCert;
    	      this.clientKey = defaults.clientKey;
    	      this.enableTls = defaults.enableTls;
    	      this.endpoint = defaults.endpoint;
    	      this.program = defaults.program;
    	      this.protocol = defaults.protocol;
    	      this.severity = defaults.severity;
    	      this.sslVerify = defaults.sslVerify;
    	      this.token = defaults.token;
        }

        public Builder certificate(@Nullable String certificate) {
            this.certificate = certificate;
            return this;
        }
        public Builder clientCert(@Nullable String clientCert) {
            this.clientCert = clientCert;
            return this;
        }
        public Builder clientKey(@Nullable String clientKey) {
            this.clientKey = clientKey;
            return this;
        }
        public Builder enableTls(@Nullable Boolean enableTls) {
            this.enableTls = enableTls;
            return this;
        }
        public Builder endpoint(String endpoint) {
            this.endpoint = Objects.requireNonNull(endpoint);
            return this;
        }
        public Builder program(@Nullable String program) {
            this.program = program;
            return this;
        }
        public Builder protocol(@Nullable String protocol) {
            this.protocol = protocol;
            return this;
        }
        public Builder severity(@Nullable String severity) {
            this.severity = severity;
            return this;
        }
        public Builder sslVerify(Boolean sslVerify) {
            this.sslVerify = Objects.requireNonNull(sslVerify);
            return this;
        }
        public Builder token(@Nullable String token) {
            this.token = token;
            return this;
        }        public GetClusterLoggingSyslogConfig build() {
            return new GetClusterLoggingSyslogConfig(certificate, clientCert, clientKey, enableTls, endpoint, program, protocol, severity, sslVerify, token);
        }
    }
}
