// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterGkeConfigV2IpAllocationPolicy {
    /**
     * @return The GKE cluster ip v4 allocation cidr block (string)
     * 
     */
    private final @Nullable String clusterIpv4CidrBlock;
    /**
     * @return The GKE cluster ip v4 allocation secondary range name(string)
     * 
     */
    private final @Nullable String clusterSecondaryRangeName;
    /**
     * @return Create GKE subnetwork? Default: `false` (bool)
     * 
     */
    private final @Nullable Boolean createSubnetwork;
    /**
     * @return The GKE node ip v4 allocation cidr block (string)
     * 
     */
    private final @Nullable String nodeIpv4CidrBlock;
    /**
     * @return The GKE services ip v4 allocation cidr block (string)
     * 
     */
    private final @Nullable String servicesIpv4CidrBlock;
    /**
     * @return The GKE services ip v4 allocation secondary range name (string)
     * 
     */
    private final @Nullable String servicesSecondaryRangeName;
    /**
     * @return The GKE cluster subnetwork name (string)
     * 
     */
    private final @Nullable String subnetworkName;
    /**
     * @return Use GKE ip aliases? Default: `true` (bool)
     * 
     */
    private final @Nullable Boolean useIpAliases;

    @CustomType.Constructor
    private ClusterGkeConfigV2IpAllocationPolicy(
        @CustomType.Parameter("clusterIpv4CidrBlock") @Nullable String clusterIpv4CidrBlock,
        @CustomType.Parameter("clusterSecondaryRangeName") @Nullable String clusterSecondaryRangeName,
        @CustomType.Parameter("createSubnetwork") @Nullable Boolean createSubnetwork,
        @CustomType.Parameter("nodeIpv4CidrBlock") @Nullable String nodeIpv4CidrBlock,
        @CustomType.Parameter("servicesIpv4CidrBlock") @Nullable String servicesIpv4CidrBlock,
        @CustomType.Parameter("servicesSecondaryRangeName") @Nullable String servicesSecondaryRangeName,
        @CustomType.Parameter("subnetworkName") @Nullable String subnetworkName,
        @CustomType.Parameter("useIpAliases") @Nullable Boolean useIpAliases) {
        this.clusterIpv4CidrBlock = clusterIpv4CidrBlock;
        this.clusterSecondaryRangeName = clusterSecondaryRangeName;
        this.createSubnetwork = createSubnetwork;
        this.nodeIpv4CidrBlock = nodeIpv4CidrBlock;
        this.servicesIpv4CidrBlock = servicesIpv4CidrBlock;
        this.servicesSecondaryRangeName = servicesSecondaryRangeName;
        this.subnetworkName = subnetworkName;
        this.useIpAliases = useIpAliases;
    }

    /**
     * @return The GKE cluster ip v4 allocation cidr block (string)
     * 
     */
    public Optional<String> clusterIpv4CidrBlock() {
        return Optional.ofNullable(this.clusterIpv4CidrBlock);
    }
    /**
     * @return The GKE cluster ip v4 allocation secondary range name(string)
     * 
     */
    public Optional<String> clusterSecondaryRangeName() {
        return Optional.ofNullable(this.clusterSecondaryRangeName);
    }
    /**
     * @return Create GKE subnetwork? Default: `false` (bool)
     * 
     */
    public Optional<Boolean> createSubnetwork() {
        return Optional.ofNullable(this.createSubnetwork);
    }
    /**
     * @return The GKE node ip v4 allocation cidr block (string)
     * 
     */
    public Optional<String> nodeIpv4CidrBlock() {
        return Optional.ofNullable(this.nodeIpv4CidrBlock);
    }
    /**
     * @return The GKE services ip v4 allocation cidr block (string)
     * 
     */
    public Optional<String> servicesIpv4CidrBlock() {
        return Optional.ofNullable(this.servicesIpv4CidrBlock);
    }
    /**
     * @return The GKE services ip v4 allocation secondary range name (string)
     * 
     */
    public Optional<String> servicesSecondaryRangeName() {
        return Optional.ofNullable(this.servicesSecondaryRangeName);
    }
    /**
     * @return The GKE cluster subnetwork name (string)
     * 
     */
    public Optional<String> subnetworkName() {
        return Optional.ofNullable(this.subnetworkName);
    }
    /**
     * @return Use GKE ip aliases? Default: `true` (bool)
     * 
     */
    public Optional<Boolean> useIpAliases() {
        return Optional.ofNullable(this.useIpAliases);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterGkeConfigV2IpAllocationPolicy defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String clusterIpv4CidrBlock;
        private @Nullable String clusterSecondaryRangeName;
        private @Nullable Boolean createSubnetwork;
        private @Nullable String nodeIpv4CidrBlock;
        private @Nullable String servicesIpv4CidrBlock;
        private @Nullable String servicesSecondaryRangeName;
        private @Nullable String subnetworkName;
        private @Nullable Boolean useIpAliases;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterGkeConfigV2IpAllocationPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterIpv4CidrBlock = defaults.clusterIpv4CidrBlock;
    	      this.clusterSecondaryRangeName = defaults.clusterSecondaryRangeName;
    	      this.createSubnetwork = defaults.createSubnetwork;
    	      this.nodeIpv4CidrBlock = defaults.nodeIpv4CidrBlock;
    	      this.servicesIpv4CidrBlock = defaults.servicesIpv4CidrBlock;
    	      this.servicesSecondaryRangeName = defaults.servicesSecondaryRangeName;
    	      this.subnetworkName = defaults.subnetworkName;
    	      this.useIpAliases = defaults.useIpAliases;
        }

        public Builder clusterIpv4CidrBlock(@Nullable String clusterIpv4CidrBlock) {
            this.clusterIpv4CidrBlock = clusterIpv4CidrBlock;
            return this;
        }
        public Builder clusterSecondaryRangeName(@Nullable String clusterSecondaryRangeName) {
            this.clusterSecondaryRangeName = clusterSecondaryRangeName;
            return this;
        }
        public Builder createSubnetwork(@Nullable Boolean createSubnetwork) {
            this.createSubnetwork = createSubnetwork;
            return this;
        }
        public Builder nodeIpv4CidrBlock(@Nullable String nodeIpv4CidrBlock) {
            this.nodeIpv4CidrBlock = nodeIpv4CidrBlock;
            return this;
        }
        public Builder servicesIpv4CidrBlock(@Nullable String servicesIpv4CidrBlock) {
            this.servicesIpv4CidrBlock = servicesIpv4CidrBlock;
            return this;
        }
        public Builder servicesSecondaryRangeName(@Nullable String servicesSecondaryRangeName) {
            this.servicesSecondaryRangeName = servicesSecondaryRangeName;
            return this;
        }
        public Builder subnetworkName(@Nullable String subnetworkName) {
            this.subnetworkName = subnetworkName;
            return this;
        }
        public Builder useIpAliases(@Nullable Boolean useIpAliases) {
            this.useIpAliases = useIpAliases;
            return this;
        }        public ClusterGkeConfigV2IpAllocationPolicy build() {
            return new ClusterGkeConfigV2IpAllocationPolicy(clusterIpv4CidrBlock, clusterSecondaryRangeName, createSubnetwork, nodeIpv4CidrBlock, servicesIpv4CidrBlock, servicesSecondaryRangeName, subnetworkName, useIpAliases);
        }
    }
}
