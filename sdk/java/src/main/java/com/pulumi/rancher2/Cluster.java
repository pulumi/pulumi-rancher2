// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.rancher2.ClusterArgs;
import com.pulumi.rancher2.Utilities;
import com.pulumi.rancher2.inputs.ClusterState;
import com.pulumi.rancher2.outputs.ClusterAgentEnvVar;
import com.pulumi.rancher2.outputs.ClusterAksConfig;
import com.pulumi.rancher2.outputs.ClusterAksConfigV2;
import com.pulumi.rancher2.outputs.ClusterClusterAuthEndpoint;
import com.pulumi.rancher2.outputs.ClusterClusterMonitoringInput;
import com.pulumi.rancher2.outputs.ClusterClusterRegistrationToken;
import com.pulumi.rancher2.outputs.ClusterClusterTemplateAnswers;
import com.pulumi.rancher2.outputs.ClusterClusterTemplateQuestion;
import com.pulumi.rancher2.outputs.ClusterEksConfig;
import com.pulumi.rancher2.outputs.ClusterEksConfigV2;
import com.pulumi.rancher2.outputs.ClusterGkeConfig;
import com.pulumi.rancher2.outputs.ClusterGkeConfigV2;
import com.pulumi.rancher2.outputs.ClusterK3sConfig;
import com.pulumi.rancher2.outputs.ClusterOkeConfig;
import com.pulumi.rancher2.outputs.ClusterRke2Config;
import com.pulumi.rancher2.outputs.ClusterRkeConfig;
import com.pulumi.rancher2.outputs.ClusterScheduledClusterScan;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Rancher v2 Cluster resource. This can be used to create Clusters for Rancher v2 environments and retrieve their information.
 * 
 * ## Example Usage
 * 
 * **Note optional/computed arguments** If any `optional/computed` argument of this resource is defined by the user, removing it from tf file will NOT reset its value. To reset it, let its definition at tf file as empty/false object. Ex: `enable_cluster_monitoring = false`, `cloud_provider {}`, `name = &#34;&#34;`
 * 
 * ## Import
 * 
 * Clusters can be imported using the Rancher Cluster ID
 * 
 * ```sh
 *  $ pulumi import rancher2:index/cluster:Cluster foo &amp;lt;CLUSTER_ID&amp;gt;
 * ```
 * 
 */
@ResourceType(type="rancher2:index/cluster:Cluster")
public class Cluster extends com.pulumi.resources.CustomResource {
    /**
     * Optional Agent Env Vars for Rancher agent. Just for Rancher v2.5.6 and above (list)
     * 
     */
    @Export(name="agentEnvVars", type=List.class, parameters={ClusterAgentEnvVar.class})
    private Output</* @Nullable */ List<ClusterAgentEnvVar>> agentEnvVars;

    /**
     * @return Optional Agent Env Vars for Rancher agent. Just for Rancher v2.5.6 and above (list)
     * 
     */
    public Output<Optional<List<ClusterAgentEnvVar>>> agentEnvVars() {
        return Codegen.optional(this.agentEnvVars);
    }
    /**
     * The Azure AKS configuration for `aks` Clusters. Conflicts with `aks_config_v2`, `eks_config`, `eks_config_v2`, `gke_config`, `gke_config_v2`, `oke_config` `k3s_config` and `rke_config` (list maxitems:1)
     * 
     */
    @Export(name="aksConfig", type=ClusterAksConfig.class, parameters={})
    private Output</* @Nullable */ ClusterAksConfig> aksConfig;

    /**
     * @return The Azure AKS configuration for `aks` Clusters. Conflicts with `aks_config_v2`, `eks_config`, `eks_config_v2`, `gke_config`, `gke_config_v2`, `oke_config` `k3s_config` and `rke_config` (list maxitems:1)
     * 
     */
    public Output<Optional<ClusterAksConfig>> aksConfig() {
        return Codegen.optional(this.aksConfig);
    }
    /**
     * The Azure AKS v2 configuration for creating/import `aks` Clusters. Conflicts with `aks_config`, `eks_config`, `eks_config_v2`, `gke_config`, `gke_config_v2`, `oke_config` `k3s_config` and `rke_config` (list maxitems:1)
     * 
     */
    @Export(name="aksConfigV2", type=ClusterAksConfigV2.class, parameters={})
    private Output</* @Nullable */ ClusterAksConfigV2> aksConfigV2;

    /**
     * @return The Azure AKS v2 configuration for creating/import `aks` Clusters. Conflicts with `aks_config`, `eks_config`, `eks_config_v2`, `gke_config`, `gke_config_v2`, `oke_config` `k3s_config` and `rke_config` (list maxitems:1)
     * 
     */
    public Output<Optional<ClusterAksConfigV2>> aksConfigV2() {
        return Codegen.optional(this.aksConfigV2);
    }
    /**
     * Annotations for cluster registration token object (map)
     * 
     */
    @Export(name="annotations", type=Map.class, parameters={String.class, Object.class})
    private Output<Map<String,Object>> annotations;

    /**
     * @return Annotations for cluster registration token object (map)
     * 
     */
    public Output<Map<String,Object>> annotations() {
        return this.annotations;
    }
    /**
     * TLS CA certificate for etcd service (string)
     * 
     */
    @Export(name="caCert", type=String.class, parameters={})
    private Output<String> caCert;

    /**
     * @return TLS CA certificate for etcd service (string)
     * 
     */
    public Output<String> caCert() {
        return this.caCert;
    }
    /**
     * Enabling the [local cluster authorized endpoint](https://rancher.com/docs/rancher/v2.x/en/cluster-provisioning/rke-clusters/options/#local-cluster-auth-endpoint) allows direct communication with the cluster, bypassing the Rancher API proxy. (list maxitems:1)
     * 
     */
    @Export(name="clusterAuthEndpoint", type=ClusterClusterAuthEndpoint.class, parameters={})
    private Output<ClusterClusterAuthEndpoint> clusterAuthEndpoint;

    /**
     * @return Enabling the [local cluster authorized endpoint](https://rancher.com/docs/rancher/v2.x/en/cluster-provisioning/rke-clusters/options/#local-cluster-auth-endpoint) allows direct communication with the cluster, bypassing the Rancher API proxy. (list maxitems:1)
     * 
     */
    public Output<ClusterClusterAuthEndpoint> clusterAuthEndpoint() {
        return this.clusterAuthEndpoint;
    }
    /**
     * Cluster monitoring config. Any parameter defined in [rancher-monitoring charts](https://github.com/rancher/system-charts/tree/dev/charts/rancher-monitoring) could be configured  (list maxitems:1)
     * 
     */
    @Export(name="clusterMonitoringInput", type=ClusterClusterMonitoringInput.class, parameters={})
    private Output</* @Nullable */ ClusterClusterMonitoringInput> clusterMonitoringInput;

    /**
     * @return Cluster monitoring config. Any parameter defined in [rancher-monitoring charts](https://github.com/rancher/system-charts/tree/dev/charts/rancher-monitoring) could be configured  (list maxitems:1)
     * 
     */
    public Output<Optional<ClusterClusterMonitoringInput>> clusterMonitoringInput() {
        return Codegen.optional(this.clusterMonitoringInput);
    }
    /**
     * (Computed) Cluster Registration Token generated for the cluster (list maxitems:1)
     * 
     */
    @Export(name="clusterRegistrationToken", type=ClusterClusterRegistrationToken.class, parameters={})
    private Output<ClusterClusterRegistrationToken> clusterRegistrationToken;

    /**
     * @return (Computed) Cluster Registration Token generated for the cluster (list maxitems:1)
     * 
     */
    public Output<ClusterClusterRegistrationToken> clusterRegistrationToken() {
        return this.clusterRegistrationToken;
    }
    /**
     * Cluster template answers. Just for Rancher v2.3.x and above (list maxitems:1)
     * 
     */
    @Export(name="clusterTemplateAnswers", type=ClusterClusterTemplateAnswers.class, parameters={})
    private Output<ClusterClusterTemplateAnswers> clusterTemplateAnswers;

    /**
     * @return Cluster template answers. Just for Rancher v2.3.x and above (list maxitems:1)
     * 
     */
    public Output<ClusterClusterTemplateAnswers> clusterTemplateAnswers() {
        return this.clusterTemplateAnswers;
    }
    /**
     * Cluster template ID. Just for Rancher v2.3.x and above (string)
     * 
     */
    @Export(name="clusterTemplateId", type=String.class, parameters={})
    private Output</* @Nullable */ String> clusterTemplateId;

    /**
     * @return Cluster template ID. Just for Rancher v2.3.x and above (string)
     * 
     */
    public Output<Optional<String>> clusterTemplateId() {
        return Codegen.optional(this.clusterTemplateId);
    }
    /**
     * Cluster template questions. Just for Rancher v2.3.x and above (list)
     * 
     */
    @Export(name="clusterTemplateQuestions", type=List.class, parameters={ClusterClusterTemplateQuestion.class})
    private Output<List<ClusterClusterTemplateQuestion>> clusterTemplateQuestions;

    /**
     * @return Cluster template questions. Just for Rancher v2.3.x and above (list)
     * 
     */
    public Output<List<ClusterClusterTemplateQuestion>> clusterTemplateQuestions() {
        return this.clusterTemplateQuestions;
    }
    /**
     * Cluster template revision ID. Just for Rancher v2.3.x and above (string)
     * 
     */
    @Export(name="clusterTemplateRevisionId", type=String.class, parameters={})
    private Output</* @Nullable */ String> clusterTemplateRevisionId;

    /**
     * @return Cluster template revision ID. Just for Rancher v2.3.x and above (string)
     * 
     */
    public Output<Optional<String>> clusterTemplateRevisionId() {
        return Codegen.optional(this.clusterTemplateRevisionId);
    }
    /**
     * [Default pod security policy template id](https://rancher.com/docs/rancher/v2.x/en/cluster-provisioning/rke-clusters/options/#pod-security-policy-support) (string)
     * 
     */
    @Export(name="defaultPodSecurityPolicyTemplateId", type=String.class, parameters={})
    private Output<String> defaultPodSecurityPolicyTemplateId;

    /**
     * @return [Default pod security policy template id](https://rancher.com/docs/rancher/v2.x/en/cluster-provisioning/rke-clusters/options/#pod-security-policy-support) (string)
     * 
     */
    public Output<String> defaultPodSecurityPolicyTemplateId() {
        return this.defaultPodSecurityPolicyTemplateId;
    }
    /**
     * (Computed) Default project ID for the cluster (string)
     * 
     */
    @Export(name="defaultProjectId", type=String.class, parameters={})
    private Output<String> defaultProjectId;

    /**
     * @return (Computed) Default project ID for the cluster (string)
     * 
     */
    public Output<String> defaultProjectId() {
        return this.defaultProjectId;
    }
    /**
     * An optional description of this cluster (string)
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return An optional description of this cluster (string)
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Desired agent image. Just for Rancher v2.3.x and above (string)
     * 
     */
    @Export(name="desiredAgentImage", type=String.class, parameters={})
    private Output<String> desiredAgentImage;

    /**
     * @return Desired agent image. Just for Rancher v2.3.x and above (string)
     * 
     */
    public Output<String> desiredAgentImage() {
        return this.desiredAgentImage;
    }
    /**
     * Desired auth image. Just for Rancher v2.3.x and above (string)
     * 
     */
    @Export(name="desiredAuthImage", type=String.class, parameters={})
    private Output<String> desiredAuthImage;

    /**
     * @return Desired auth image. Just for Rancher v2.3.x and above (string)
     * 
     */
    public Output<String> desiredAuthImage() {
        return this.desiredAuthImage;
    }
    /**
     * Desired auth image. Just for Rancher v2.3.x and above (string)
     * 
     */
    @Export(name="dockerRootDir", type=String.class, parameters={})
    private Output<String> dockerRootDir;

    /**
     * @return Desired auth image. Just for Rancher v2.3.x and above (string)
     * 
     */
    public Output<String> dockerRootDir() {
        return this.dockerRootDir;
    }
    /**
     * (Computed) The driver used for the Cluster. `imported`, `azurekubernetesservice`, `amazonelasticcontainerservice`, `googlekubernetesengine` and `rancherKubernetesEngine` are supported (string)
     * 
     */
    @Export(name="driver", type=String.class, parameters={})
    private Output<String> driver;

    /**
     * @return (Computed) The driver used for the Cluster. `imported`, `azurekubernetesservice`, `amazonelasticcontainerservice`, `googlekubernetesengine` and `rancherKubernetesEngine` are supported (string)
     * 
     */
    public Output<String> driver() {
        return this.driver;
    }
    /**
     * The Amazon EKS configuration for `eks` Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config_v2`, `gke_config`, `gke_config_v2`, `oke_config` `k3s_config` and `rke_config` (list maxitems:1)
     * 
     */
    @Export(name="eksConfig", type=ClusterEksConfig.class, parameters={})
    private Output</* @Nullable */ ClusterEksConfig> eksConfig;

    /**
     * @return The Amazon EKS configuration for `eks` Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config_v2`, `gke_config`, `gke_config_v2`, `oke_config` `k3s_config` and `rke_config` (list maxitems:1)
     * 
     */
    public Output<Optional<ClusterEksConfig>> eksConfig() {
        return Codegen.optional(this.eksConfig);
    }
    /**
     * The Amazon EKS V2 configuration to create or import `eks` Clusters. Conflicts with `aks_config`, `eks_config`, `gke_config`, `gke_config_v2`, `oke_config` `k3s_config` and `rke_config`. For Rancher v2.5.x or above (list maxitems:1)
     * 
     */
    @Export(name="eksConfigV2", type=ClusterEksConfigV2.class, parameters={})
    private Output<ClusterEksConfigV2> eksConfigV2;

    /**
     * @return The Amazon EKS V2 configuration to create or import `eks` Clusters. Conflicts with `aks_config`, `eks_config`, `gke_config`, `gke_config_v2`, `oke_config` `k3s_config` and `rke_config`. For Rancher v2.5.x or above (list maxitems:1)
     * 
     */
    public Output<ClusterEksConfigV2> eksConfigV2() {
        return this.eksConfigV2;
    }
    /**
     * Enable built-in cluster alerting (bool)
     * 
     */
    @Export(name="enableClusterAlerting", type=Boolean.class, parameters={})
    private Output<Boolean> enableClusterAlerting;

    /**
     * @return Enable built-in cluster alerting (bool)
     * 
     */
    public Output<Boolean> enableClusterAlerting() {
        return this.enableClusterAlerting;
    }
    /**
     * Deploy istio on `system` project and `istio-system` namespace, using rancher2.App resource instead. See above example.
     * 
     * @deprecated
     * Deploy istio using rancher2_app resource instead
     * 
     */
    @Deprecated /* Deploy istio using rancher2_app resource instead */
    @Export(name="enableClusterIstio", type=Boolean.class, parameters={})
    private Output<Boolean> enableClusterIstio;

    /**
     * @return Deploy istio on `system` project and `istio-system` namespace, using rancher2.App resource instead. See above example.
     * 
     */
    public Output<Boolean> enableClusterIstio() {
        return this.enableClusterIstio;
    }
    /**
     * Enable built-in cluster monitoring (bool)
     * 
     */
    @Export(name="enableClusterMonitoring", type=Boolean.class, parameters={})
    private Output<Boolean> enableClusterMonitoring;

    /**
     * @return Enable built-in cluster monitoring (bool)
     * 
     */
    public Output<Boolean> enableClusterMonitoring() {
        return this.enableClusterMonitoring;
    }
    /**
     * Enable project network isolation (bool)
     * 
     */
    @Export(name="enableNetworkPolicy", type=Boolean.class, parameters={})
    private Output<Boolean> enableNetworkPolicy;

    /**
     * @return Enable project network isolation (bool)
     * 
     */
    public Output<Boolean> enableNetworkPolicy() {
        return this.enableNetworkPolicy;
    }
    /**
     * Fleet workspace name (string)
     * 
     */
    @Export(name="fleetWorkspaceName", type=String.class, parameters={})
    private Output<String> fleetWorkspaceName;

    /**
     * @return Fleet workspace name (string)
     * 
     */
    public Output<String> fleetWorkspaceName() {
        return this.fleetWorkspaceName;
    }
    /**
     * The Google GKE configuration for `gke` Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config`, `eks_config_v2`, `gke_config_v2`, `oke_config`, `k3s_config` and `rke_config` (list maxitems:1)
     * 
     */
    @Export(name="gkeConfig", type=ClusterGkeConfig.class, parameters={})
    private Output</* @Nullable */ ClusterGkeConfig> gkeConfig;

    /**
     * @return The Google GKE configuration for `gke` Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config`, `eks_config_v2`, `gke_config_v2`, `oke_config`, `k3s_config` and `rke_config` (list maxitems:1)
     * 
     */
    public Output<Optional<ClusterGkeConfig>> gkeConfig() {
        return Codegen.optional(this.gkeConfig);
    }
    /**
     * The Google GKE V2 configuration for `gke` Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config`, `eks_config_v2`, `gke_config`, `oke_config`, `k3s_config` and `rke_config`. For Rancher v2.5.8 or above (list maxitems:1)
     * 
     */
    @Export(name="gkeConfigV2", type=ClusterGkeConfigV2.class, parameters={})
    private Output</* @Nullable */ ClusterGkeConfigV2> gkeConfigV2;

    /**
     * @return The Google GKE V2 configuration for `gke` Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config`, `eks_config_v2`, `gke_config`, `oke_config`, `k3s_config` and `rke_config`. For Rancher v2.5.8 or above (list maxitems:1)
     * 
     */
    public Output<Optional<ClusterGkeConfigV2>> gkeConfigV2() {
        return Codegen.optional(this.gkeConfigV2);
    }
    /**
     * (Computed) Is istio enabled at cluster? Just for Rancher v2.3.x and above (bool)
     * 
     */
    @Export(name="istioEnabled", type=Boolean.class, parameters={})
    private Output<Boolean> istioEnabled;

    /**
     * @return (Computed) Is istio enabled at cluster? Just for Rancher v2.3.x and above (bool)
     * 
     */
    public Output<Boolean> istioEnabled() {
        return this.istioEnabled;
    }
    /**
     * The K3S configuration for `k3s` imported Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config`, `eks_config_v2`, `gke_config`, `gke_config_v2`, `oke_config` and `rke_config` (list maxitems:1)
     * 
     */
    @Export(name="k3sConfig", type=ClusterK3sConfig.class, parameters={})
    private Output<ClusterK3sConfig> k3sConfig;

    /**
     * @return The K3S configuration for `k3s` imported Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config`, `eks_config_v2`, `gke_config`, `gke_config_v2`, `oke_config` and `rke_config` (list maxitems:1)
     * 
     */
    public Output<ClusterK3sConfig> k3sConfig() {
        return this.k3sConfig;
    }
    /**
     * (Computed/Sensitive) Kube Config generated for the cluster. Note: For Rancher 2.6.0 and above, when the cluster has `cluster_auth_endpoint` enabled, the kube_config will not be available until the cluster is `connected` (string)
     * 
     */
    @Export(name="kubeConfig", type=String.class, parameters={})
    private Output<String> kubeConfig;

    /**
     * @return (Computed/Sensitive) Kube Config generated for the cluster. Note: For Rancher 2.6.0 and above, when the cluster has `cluster_auth_endpoint` enabled, the kube_config will not be available until the cluster is `connected` (string)
     * 
     */
    public Output<String> kubeConfig() {
        return this.kubeConfig;
    }
    /**
     * Labels for cluster registration token object (map)
     * 
     */
    @Export(name="labels", type=Map.class, parameters={String.class, Object.class})
    private Output<Map<String,Object>> labels;

    /**
     * @return Labels for cluster registration token object (map)
     * 
     */
    public Output<Map<String,Object>> labels() {
        return this.labels;
    }
    /**
     * Name of cluster registration token (string)
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of cluster registration token (string)
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The Oracle OKE configuration for `oke` Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config`, `eks_config_v2`, `gke_config`, `gke_config_v2`, `k3s_config` and `rke_config` (list maxitems:1)
     * 
     */
    @Export(name="okeConfig", type=ClusterOkeConfig.class, parameters={})
    private Output</* @Nullable */ ClusterOkeConfig> okeConfig;

    /**
     * @return The Oracle OKE configuration for `oke` Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config`, `eks_config_v2`, `gke_config`, `gke_config_v2`, `k3s_config` and `rke_config` (list maxitems:1)
     * 
     */
    public Output<Optional<ClusterOkeConfig>> okeConfig() {
        return Codegen.optional(this.okeConfig);
    }
    /**
     * The RKE2 configuration for `rke2` Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config`, `gke_config`, `oke_config`, `k3s_config` and `rke_config` (list maxitems:1)
     * 
     */
    @Export(name="rke2Config", type=ClusterRke2Config.class, parameters={})
    private Output<ClusterRke2Config> rke2Config;

    /**
     * @return The RKE2 configuration for `rke2` Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config`, `gke_config`, `oke_config`, `k3s_config` and `rke_config` (list maxitems:1)
     * 
     */
    public Output<ClusterRke2Config> rke2Config() {
        return this.rke2Config;
    }
    /**
     * The RKE configuration for `rke` Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config`, `eks_config_v2`, `gke_config`, `gke_config_v2`, `oke_config` and `k3s_config` (list maxitems:1)
     * 
     */
    @Export(name="rkeConfig", type=ClusterRkeConfig.class, parameters={})
    private Output<ClusterRkeConfig> rkeConfig;

    /**
     * @return The RKE configuration for `rke` Clusters. Conflicts with `aks_config`, `aks_config_v2`, `eks_config`, `eks_config_v2`, `gke_config`, `gke_config_v2`, `oke_config` and `k3s_config` (list maxitems:1)
     * 
     */
    public Output<ClusterRkeConfig> rkeConfig() {
        return this.rkeConfig;
    }
    /**
     * Cluster scheduled cis scan. For Rancher v2.4.0 or above (List maxitems:1)
     * 
     */
    @Export(name="scheduledClusterScan", type=ClusterScheduledClusterScan.class, parameters={})
    private Output<ClusterScheduledClusterScan> scheduledClusterScan;

    /**
     * @return Cluster scheduled cis scan. For Rancher v2.4.0 or above (List maxitems:1)
     * 
     */
    public Output<ClusterScheduledClusterScan> scheduledClusterScan() {
        return this.scheduledClusterScan;
    }
    /**
     * (Computed) System project ID for the cluster (string)
     * 
     */
    @Export(name="systemProjectId", type=String.class, parameters={})
    private Output<String> systemProjectId;

    /**
     * @return (Computed) System project ID for the cluster (string)
     * 
     */
    public Output<String> systemProjectId() {
        return this.systemProjectId;
    }
    /**
     * Windows preferred cluster. Default: `false` (bool)
     * 
     */
    @Export(name="windowsPreferedCluster", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> windowsPreferedCluster;

    /**
     * @return Windows preferred cluster. Default: `false` (bool)
     * 
     */
    public Output<Optional<Boolean>> windowsPreferedCluster() {
        return Codegen.optional(this.windowsPreferedCluster);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Cluster(String name) {
        this(name, ClusterArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Cluster(String name, @Nullable ClusterArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Cluster(String name, @Nullable ClusterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("rancher2:index/cluster:Cluster", name, args == null ? ClusterArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Cluster(String name, Output<String> id, @Nullable ClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("rancher2:index/cluster:Cluster", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Cluster get(String name, Output<String> id, @Nullable ClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Cluster(name, id, state, options);
    }
}
