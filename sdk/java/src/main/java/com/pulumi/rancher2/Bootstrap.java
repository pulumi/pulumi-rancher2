// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.rancher2.BootstrapArgs;
import com.pulumi.rancher2.Utilities;
import com.pulumi.rancher2.inputs.BootstrapState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.rancher2.Bootstrap;
 * import com.pulumi.rancher2.BootstrapArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         // Create a new rancher2_bootstrap
 *         var admin = new Bootstrap("admin", BootstrapArgs.builder()
 *             .password("blahblah")
 *             .telemetry(true)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.rancher2.Bootstrap;
 * import com.pulumi.rancher2.BootstrapArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         // Create a new rancher2_bootstrap for Rancher v2.6.0 and above
 *         var admin = new Bootstrap("admin", BootstrapArgs.builder()
 *             .initialPassword("<INSTALL_PASSWORD>")
 *             .password("blahblah")
 *             .telemetry(true)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.rancher2.Bootstrap;
 * import com.pulumi.rancher2.BootstrapArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         // Create a new rancher2_bootstrap using bootstrap provider config
 *         var admin = new Bootstrap("admin", BootstrapArgs.builder()
 *             .password("blahblah")
 *             .telemetry(true)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="rancher2:index/bootstrap:Bootstrap")
public class Bootstrap extends com.pulumi.resources.CustomResource {
    /**
     * (Computed/Sensitive) Current password for Admin user (string)
     * 
     */
    @Export(name="currentPassword", refs={String.class}, tree="[0]")
    private Output<String> currentPassword;

    /**
     * @return (Computed/Sensitive) Current password for Admin user (string)
     * 
     */
    public Output<String> currentPassword() {
        return this.currentPassword;
    }
    /**
     * Initial password for Admin user. Default: `admin` (string)
     * 
     */
    @Export(name="initialPassword", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> initialPassword;

    /**
     * @return Initial password for Admin user. Default: `admin` (string)
     * 
     */
    public Output<Optional<String>> initialPassword() {
        return Codegen.optional(this.initialPassword);
    }
    /**
     * Password for Admin user or random generated if empty (string)
     * 
     */
    @Export(name="password", refs={String.class}, tree="[0]")
    private Output<String> password;

    /**
     * @return Password for Admin user or random generated if empty (string)
     * 
     */
    public Output<String> password() {
        return this.password;
    }
    /**
     * Send telemetry anonymous data. Default: `false` (bool)
     * 
     */
    @Export(name="telemetry", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> telemetry;

    /**
     * @return Send telemetry anonymous data. Default: `false` (bool)
     * 
     */
    public Output<Optional<Boolean>> telemetry() {
        return Codegen.optional(this.telemetry);
    }
    /**
     * (Computed) Generated API temporary token as helper. Should be empty (string)
     * 
     */
    @Export(name="tempToken", refs={String.class}, tree="[0]")
    private Output<String> tempToken;

    /**
     * @return (Computed) Generated API temporary token as helper. Should be empty (string)
     * 
     */
    public Output<String> tempToken() {
        return this.tempToken;
    }
    /**
     * (Computed) Generated API temporary token id as helper. Should be empty (string)
     * 
     */
    @Export(name="tempTokenId", refs={String.class}, tree="[0]")
    private Output<String> tempTokenId;

    /**
     * @return (Computed) Generated API temporary token id as helper. Should be empty (string)
     * 
     */
    public Output<String> tempTokenId() {
        return this.tempTokenId;
    }
    /**
     * (Computed) Generated API token for Admin User (string)
     * 
     */
    @Export(name="token", refs={String.class}, tree="[0]")
    private Output<String> token;

    /**
     * @return (Computed) Generated API token for Admin User (string)
     * 
     */
    public Output<String> token() {
        return this.token;
    }
    /**
     * (Computed) Generated API token id for Admin User (string)
     * 
     */
    @Export(name="tokenId", refs={String.class}, tree="[0]")
    private Output<String> tokenId;

    /**
     * @return (Computed) Generated API token id for Admin User (string)
     * 
     */
    public Output<String> tokenId() {
        return this.tokenId;
    }
    /**
     * TTL in seconds for generated admin token. Default: `0`  (int)
     * 
     */
    @Export(name="tokenTtl", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> tokenTtl;

    /**
     * @return TTL in seconds for generated admin token. Default: `0`  (int)
     * 
     */
    public Output<Optional<Integer>> tokenTtl() {
        return Codegen.optional(this.tokenTtl);
    }
    /**
     * Regenerate admin token. Default: `false` (bool)
     * 
     */
    @Export(name="tokenUpdate", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> tokenUpdate;

    /**
     * @return Regenerate admin token. Default: `false` (bool)
     * 
     */
    public Output<Optional<Boolean>> tokenUpdate() {
        return Codegen.optional(this.tokenUpdate);
    }
    /**
     * Default UI landing for k8s clusters. Available options: `ember` (cluster manager ui)  and `vue` (cluster explorer ui). Default: `ember` (string)
     * 
     */
    @Export(name="uiDefaultLanding", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> uiDefaultLanding;

    /**
     * @return Default UI landing for k8s clusters. Available options: `ember` (cluster manager ui)  and `vue` (cluster explorer ui). Default: `ember` (string)
     * 
     */
    public Output<Optional<String>> uiDefaultLanding() {
        return Codegen.optional(this.uiDefaultLanding);
    }
    /**
     * (Computed) URL set as server-url (string)
     * 
     */
    @Export(name="url", refs={String.class}, tree="[0]")
    private Output<String> url;

    /**
     * @return (Computed) URL set as server-url (string)
     * 
     */
    public Output<String> url() {
        return this.url;
    }
    /**
     * (Computed) Admin username (string)
     * 
     */
    @Export(name="user", refs={String.class}, tree="[0]")
    private Output<String> user;

    /**
     * @return (Computed) Admin username (string)
     * 
     */
    public Output<String> user() {
        return this.user;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Bootstrap(java.lang.String name) {
        this(name, BootstrapArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Bootstrap(java.lang.String name, @Nullable BootstrapArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Bootstrap(java.lang.String name, @Nullable BootstrapArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("rancher2:index/bootstrap:Bootstrap", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Bootstrap(java.lang.String name, Output<java.lang.String> id, @Nullable BootstrapState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("rancher2:index/bootstrap:Bootstrap", name, state, makeResourceOptions(options, id), false);
    }

    private static BootstrapArgs makeArgs(@Nullable BootstrapArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? BootstrapArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "currentPassword",
                "initialPassword",
                "password",
                "tempToken",
                "token"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Bootstrap get(java.lang.String name, Output<java.lang.String> id, @Nullable BootstrapState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Bootstrap(name, id, state, options);
    }
}
