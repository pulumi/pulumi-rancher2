// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.rancher2.outputs.GetClusterRkeConfigDnsLinearAutoscalerParams;
import com.pulumi.rancher2.outputs.GetClusterRkeConfigDnsNodelocal;
import com.pulumi.rancher2.outputs.GetClusterRkeConfigDnsToleration;
import com.pulumi.rancher2.outputs.GetClusterRkeConfigDnsUpdateStrategy;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetClusterRkeConfigDns {
    private final @Nullable GetClusterRkeConfigDnsLinearAutoscalerParams linearAutoscalerParams;
    private final Map<String,Object> nodeSelector;
    private final @Nullable GetClusterRkeConfigDnsNodelocal nodelocal;
    private final Map<String,Object> options;
    private final @Nullable String provider;
    private final List<String> reverseCidrs;
    private final @Nullable List<GetClusterRkeConfigDnsToleration> tolerations;
    private final @Nullable GetClusterRkeConfigDnsUpdateStrategy updateStrategy;
    private final List<String> upstreamNameservers;

    @CustomType.Constructor
    private GetClusterRkeConfigDns(
        @CustomType.Parameter("linearAutoscalerParams") @Nullable GetClusterRkeConfigDnsLinearAutoscalerParams linearAutoscalerParams,
        @CustomType.Parameter("nodeSelector") Map<String,Object> nodeSelector,
        @CustomType.Parameter("nodelocal") @Nullable GetClusterRkeConfigDnsNodelocal nodelocal,
        @CustomType.Parameter("options") Map<String,Object> options,
        @CustomType.Parameter("provider") @Nullable String provider,
        @CustomType.Parameter("reverseCidrs") List<String> reverseCidrs,
        @CustomType.Parameter("tolerations") @Nullable List<GetClusterRkeConfigDnsToleration> tolerations,
        @CustomType.Parameter("updateStrategy") @Nullable GetClusterRkeConfigDnsUpdateStrategy updateStrategy,
        @CustomType.Parameter("upstreamNameservers") List<String> upstreamNameservers) {
        this.linearAutoscalerParams = linearAutoscalerParams;
        this.nodeSelector = nodeSelector;
        this.nodelocal = nodelocal;
        this.options = options;
        this.provider = provider;
        this.reverseCidrs = reverseCidrs;
        this.tolerations = tolerations;
        this.updateStrategy = updateStrategy;
        this.upstreamNameservers = upstreamNameservers;
    }

    public Optional<GetClusterRkeConfigDnsLinearAutoscalerParams> linearAutoscalerParams() {
        return Optional.ofNullable(this.linearAutoscalerParams);
    }
    public Map<String,Object> nodeSelector() {
        return this.nodeSelector;
    }
    public Optional<GetClusterRkeConfigDnsNodelocal> nodelocal() {
        return Optional.ofNullable(this.nodelocal);
    }
    public Map<String,Object> options() {
        return this.options;
    }
    public Optional<String> provider() {
        return Optional.ofNullable(this.provider);
    }
    public List<String> reverseCidrs() {
        return this.reverseCidrs;
    }
    public List<GetClusterRkeConfigDnsToleration> tolerations() {
        return this.tolerations == null ? List.of() : this.tolerations;
    }
    public Optional<GetClusterRkeConfigDnsUpdateStrategy> updateStrategy() {
        return Optional.ofNullable(this.updateStrategy);
    }
    public List<String> upstreamNameservers() {
        return this.upstreamNameservers;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterRkeConfigDns defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable GetClusterRkeConfigDnsLinearAutoscalerParams linearAutoscalerParams;
        private Map<String,Object> nodeSelector;
        private @Nullable GetClusterRkeConfigDnsNodelocal nodelocal;
        private Map<String,Object> options;
        private @Nullable String provider;
        private List<String> reverseCidrs;
        private @Nullable List<GetClusterRkeConfigDnsToleration> tolerations;
        private @Nullable GetClusterRkeConfigDnsUpdateStrategy updateStrategy;
        private List<String> upstreamNameservers;

        public Builder() {
    	      // Empty
        }

        public Builder(GetClusterRkeConfigDns defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.linearAutoscalerParams = defaults.linearAutoscalerParams;
    	      this.nodeSelector = defaults.nodeSelector;
    	      this.nodelocal = defaults.nodelocal;
    	      this.options = defaults.options;
    	      this.provider = defaults.provider;
    	      this.reverseCidrs = defaults.reverseCidrs;
    	      this.tolerations = defaults.tolerations;
    	      this.updateStrategy = defaults.updateStrategy;
    	      this.upstreamNameservers = defaults.upstreamNameservers;
        }

        public Builder linearAutoscalerParams(@Nullable GetClusterRkeConfigDnsLinearAutoscalerParams linearAutoscalerParams) {
            this.linearAutoscalerParams = linearAutoscalerParams;
            return this;
        }
        public Builder nodeSelector(Map<String,Object> nodeSelector) {
            this.nodeSelector = Objects.requireNonNull(nodeSelector);
            return this;
        }
        public Builder nodelocal(@Nullable GetClusterRkeConfigDnsNodelocal nodelocal) {
            this.nodelocal = nodelocal;
            return this;
        }
        public Builder options(Map<String,Object> options) {
            this.options = Objects.requireNonNull(options);
            return this;
        }
        public Builder provider(@Nullable String provider) {
            this.provider = provider;
            return this;
        }
        public Builder reverseCidrs(List<String> reverseCidrs) {
            this.reverseCidrs = Objects.requireNonNull(reverseCidrs);
            return this;
        }
        public Builder reverseCidrs(String... reverseCidrs) {
            return reverseCidrs(List.of(reverseCidrs));
        }
        public Builder tolerations(@Nullable List<GetClusterRkeConfigDnsToleration> tolerations) {
            this.tolerations = tolerations;
            return this;
        }
        public Builder tolerations(GetClusterRkeConfigDnsToleration... tolerations) {
            return tolerations(List.of(tolerations));
        }
        public Builder updateStrategy(@Nullable GetClusterRkeConfigDnsUpdateStrategy updateStrategy) {
            this.updateStrategy = updateStrategy;
            return this;
        }
        public Builder upstreamNameservers(List<String> upstreamNameservers) {
            this.upstreamNameservers = Objects.requireNonNull(upstreamNameservers);
            return this;
        }
        public Builder upstreamNameservers(String... upstreamNameservers) {
            return upstreamNameservers(List.of(upstreamNameservers));
        }        public GetClusterRkeConfigDns build() {
            return new GetClusterRkeConfigDns(linearAutoscalerParams, nodeSelector, nodelocal, options, provider, reverseCidrs, tolerations, updateStrategy, upstreamNameservers);
        }
    }
}
