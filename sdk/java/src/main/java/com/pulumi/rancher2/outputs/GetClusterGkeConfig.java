// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetClusterGkeConfig {
    private final String clusterIpv4Cidr;
    private final String credential;
    /**
     * @return (Computed) The description for Cluster (string)
     * 
     */
    private final @Nullable String description;
    private final @Nullable Integer diskSizeGb;
    private final String diskType;
    private final @Nullable Boolean enableAlphaFeature;
    private final @Nullable Boolean enableAutoRepair;
    private final @Nullable Boolean enableAutoUpgrade;
    private final @Nullable Boolean enableHorizontalPodAutoscaling;
    private final @Nullable Boolean enableHttpLoadBalancing;
    private final @Nullable Boolean enableKubernetesDashboard;
    private final @Nullable Boolean enableLegacyAbac;
    private final @Nullable Boolean enableMasterAuthorizedNetwork;
    private final @Nullable Boolean enableNetworkPolicyConfig;
    private final @Nullable Boolean enableNodepoolAutoscaling;
    private final @Nullable Boolean enablePrivateEndpoint;
    private final @Nullable Boolean enablePrivateNodes;
    private final @Nullable Boolean enableStackdriverLogging;
    private final @Nullable Boolean enableStackdriverMonitoring;
    private final String imageType;
    private final String ipPolicyClusterIpv4CidrBlock;
    private final String ipPolicyClusterSecondaryRangeName;
    private final @Nullable Boolean ipPolicyCreateSubnetwork;
    private final String ipPolicyNodeIpv4CidrBlock;
    private final String ipPolicyServicesIpv4CidrBlock;
    private final String ipPolicyServicesSecondaryRangeName;
    private final String ipPolicySubnetworkName;
    private final @Nullable Boolean issueClientCertificate;
    private final @Nullable Boolean kubernetesDashboard;
    /**
     * @return (Computed) Labels for Node Pool object (map)
     * 
     */
    private final Map<String,Object> labels;
    private final @Nullable Integer localSsdCount;
    private final List<String> locations;
    private final String machineType;
    private final String maintenanceWindow;
    private final @Nullable List<String> masterAuthorizedNetworkCidrBlocks;
    private final String masterIpv4CidrBlock;
    private final String masterVersion;
    private final @Nullable Integer maxNodeCount;
    private final @Nullable Integer minNodeCount;
    private final String network;
    private final @Nullable Integer nodeCount;
    private final String nodePool;
    private final String nodeVersion;
    private final List<String> oauthScopes;
    private final @Nullable Boolean preemptible;
    private final String projectId;
    private final @Nullable String region;
    private final Map<String,Object> resourceLabels;
    private final String serviceAccount;
    private final String subNetwork;
    private final @Nullable List<String> taints;
    private final @Nullable Boolean useIpAliases;
    private final @Nullable String zone;

    @CustomType.Constructor
    private GetClusterGkeConfig(
        @CustomType.Parameter("clusterIpv4Cidr") String clusterIpv4Cidr,
        @CustomType.Parameter("credential") String credential,
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("diskSizeGb") @Nullable Integer diskSizeGb,
        @CustomType.Parameter("diskType") String diskType,
        @CustomType.Parameter("enableAlphaFeature") @Nullable Boolean enableAlphaFeature,
        @CustomType.Parameter("enableAutoRepair") @Nullable Boolean enableAutoRepair,
        @CustomType.Parameter("enableAutoUpgrade") @Nullable Boolean enableAutoUpgrade,
        @CustomType.Parameter("enableHorizontalPodAutoscaling") @Nullable Boolean enableHorizontalPodAutoscaling,
        @CustomType.Parameter("enableHttpLoadBalancing") @Nullable Boolean enableHttpLoadBalancing,
        @CustomType.Parameter("enableKubernetesDashboard") @Nullable Boolean enableKubernetesDashboard,
        @CustomType.Parameter("enableLegacyAbac") @Nullable Boolean enableLegacyAbac,
        @CustomType.Parameter("enableMasterAuthorizedNetwork") @Nullable Boolean enableMasterAuthorizedNetwork,
        @CustomType.Parameter("enableNetworkPolicyConfig") @Nullable Boolean enableNetworkPolicyConfig,
        @CustomType.Parameter("enableNodepoolAutoscaling") @Nullable Boolean enableNodepoolAutoscaling,
        @CustomType.Parameter("enablePrivateEndpoint") @Nullable Boolean enablePrivateEndpoint,
        @CustomType.Parameter("enablePrivateNodes") @Nullable Boolean enablePrivateNodes,
        @CustomType.Parameter("enableStackdriverLogging") @Nullable Boolean enableStackdriverLogging,
        @CustomType.Parameter("enableStackdriverMonitoring") @Nullable Boolean enableStackdriverMonitoring,
        @CustomType.Parameter("imageType") String imageType,
        @CustomType.Parameter("ipPolicyClusterIpv4CidrBlock") String ipPolicyClusterIpv4CidrBlock,
        @CustomType.Parameter("ipPolicyClusterSecondaryRangeName") String ipPolicyClusterSecondaryRangeName,
        @CustomType.Parameter("ipPolicyCreateSubnetwork") @Nullable Boolean ipPolicyCreateSubnetwork,
        @CustomType.Parameter("ipPolicyNodeIpv4CidrBlock") String ipPolicyNodeIpv4CidrBlock,
        @CustomType.Parameter("ipPolicyServicesIpv4CidrBlock") String ipPolicyServicesIpv4CidrBlock,
        @CustomType.Parameter("ipPolicyServicesSecondaryRangeName") String ipPolicyServicesSecondaryRangeName,
        @CustomType.Parameter("ipPolicySubnetworkName") String ipPolicySubnetworkName,
        @CustomType.Parameter("issueClientCertificate") @Nullable Boolean issueClientCertificate,
        @CustomType.Parameter("kubernetesDashboard") @Nullable Boolean kubernetesDashboard,
        @CustomType.Parameter("labels") Map<String,Object> labels,
        @CustomType.Parameter("localSsdCount") @Nullable Integer localSsdCount,
        @CustomType.Parameter("locations") List<String> locations,
        @CustomType.Parameter("machineType") String machineType,
        @CustomType.Parameter("maintenanceWindow") String maintenanceWindow,
        @CustomType.Parameter("masterAuthorizedNetworkCidrBlocks") @Nullable List<String> masterAuthorizedNetworkCidrBlocks,
        @CustomType.Parameter("masterIpv4CidrBlock") String masterIpv4CidrBlock,
        @CustomType.Parameter("masterVersion") String masterVersion,
        @CustomType.Parameter("maxNodeCount") @Nullable Integer maxNodeCount,
        @CustomType.Parameter("minNodeCount") @Nullable Integer minNodeCount,
        @CustomType.Parameter("network") String network,
        @CustomType.Parameter("nodeCount") @Nullable Integer nodeCount,
        @CustomType.Parameter("nodePool") String nodePool,
        @CustomType.Parameter("nodeVersion") String nodeVersion,
        @CustomType.Parameter("oauthScopes") List<String> oauthScopes,
        @CustomType.Parameter("preemptible") @Nullable Boolean preemptible,
        @CustomType.Parameter("projectId") String projectId,
        @CustomType.Parameter("region") @Nullable String region,
        @CustomType.Parameter("resourceLabels") Map<String,Object> resourceLabels,
        @CustomType.Parameter("serviceAccount") String serviceAccount,
        @CustomType.Parameter("subNetwork") String subNetwork,
        @CustomType.Parameter("taints") @Nullable List<String> taints,
        @CustomType.Parameter("useIpAliases") @Nullable Boolean useIpAliases,
        @CustomType.Parameter("zone") @Nullable String zone) {
        this.clusterIpv4Cidr = clusterIpv4Cidr;
        this.credential = credential;
        this.description = description;
        this.diskSizeGb = diskSizeGb;
        this.diskType = diskType;
        this.enableAlphaFeature = enableAlphaFeature;
        this.enableAutoRepair = enableAutoRepair;
        this.enableAutoUpgrade = enableAutoUpgrade;
        this.enableHorizontalPodAutoscaling = enableHorizontalPodAutoscaling;
        this.enableHttpLoadBalancing = enableHttpLoadBalancing;
        this.enableKubernetesDashboard = enableKubernetesDashboard;
        this.enableLegacyAbac = enableLegacyAbac;
        this.enableMasterAuthorizedNetwork = enableMasterAuthorizedNetwork;
        this.enableNetworkPolicyConfig = enableNetworkPolicyConfig;
        this.enableNodepoolAutoscaling = enableNodepoolAutoscaling;
        this.enablePrivateEndpoint = enablePrivateEndpoint;
        this.enablePrivateNodes = enablePrivateNodes;
        this.enableStackdriverLogging = enableStackdriverLogging;
        this.enableStackdriverMonitoring = enableStackdriverMonitoring;
        this.imageType = imageType;
        this.ipPolicyClusterIpv4CidrBlock = ipPolicyClusterIpv4CidrBlock;
        this.ipPolicyClusterSecondaryRangeName = ipPolicyClusterSecondaryRangeName;
        this.ipPolicyCreateSubnetwork = ipPolicyCreateSubnetwork;
        this.ipPolicyNodeIpv4CidrBlock = ipPolicyNodeIpv4CidrBlock;
        this.ipPolicyServicesIpv4CidrBlock = ipPolicyServicesIpv4CidrBlock;
        this.ipPolicyServicesSecondaryRangeName = ipPolicyServicesSecondaryRangeName;
        this.ipPolicySubnetworkName = ipPolicySubnetworkName;
        this.issueClientCertificate = issueClientCertificate;
        this.kubernetesDashboard = kubernetesDashboard;
        this.labels = labels;
        this.localSsdCount = localSsdCount;
        this.locations = locations;
        this.machineType = machineType;
        this.maintenanceWindow = maintenanceWindow;
        this.masterAuthorizedNetworkCidrBlocks = masterAuthorizedNetworkCidrBlocks;
        this.masterIpv4CidrBlock = masterIpv4CidrBlock;
        this.masterVersion = masterVersion;
        this.maxNodeCount = maxNodeCount;
        this.minNodeCount = minNodeCount;
        this.network = network;
        this.nodeCount = nodeCount;
        this.nodePool = nodePool;
        this.nodeVersion = nodeVersion;
        this.oauthScopes = oauthScopes;
        this.preemptible = preemptible;
        this.projectId = projectId;
        this.region = region;
        this.resourceLabels = resourceLabels;
        this.serviceAccount = serviceAccount;
        this.subNetwork = subNetwork;
        this.taints = taints;
        this.useIpAliases = useIpAliases;
        this.zone = zone;
    }

    public String clusterIpv4Cidr() {
        return this.clusterIpv4Cidr;
    }
    public String credential() {
        return this.credential;
    }
    /**
     * @return (Computed) The description for Cluster (string)
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    public Optional<Integer> diskSizeGb() {
        return Optional.ofNullable(this.diskSizeGb);
    }
    public String diskType() {
        return this.diskType;
    }
    public Optional<Boolean> enableAlphaFeature() {
        return Optional.ofNullable(this.enableAlphaFeature);
    }
    public Optional<Boolean> enableAutoRepair() {
        return Optional.ofNullable(this.enableAutoRepair);
    }
    public Optional<Boolean> enableAutoUpgrade() {
        return Optional.ofNullable(this.enableAutoUpgrade);
    }
    public Optional<Boolean> enableHorizontalPodAutoscaling() {
        return Optional.ofNullable(this.enableHorizontalPodAutoscaling);
    }
    public Optional<Boolean> enableHttpLoadBalancing() {
        return Optional.ofNullable(this.enableHttpLoadBalancing);
    }
    public Optional<Boolean> enableKubernetesDashboard() {
        return Optional.ofNullable(this.enableKubernetesDashboard);
    }
    public Optional<Boolean> enableLegacyAbac() {
        return Optional.ofNullable(this.enableLegacyAbac);
    }
    public Optional<Boolean> enableMasterAuthorizedNetwork() {
        return Optional.ofNullable(this.enableMasterAuthorizedNetwork);
    }
    public Optional<Boolean> enableNetworkPolicyConfig() {
        return Optional.ofNullable(this.enableNetworkPolicyConfig);
    }
    public Optional<Boolean> enableNodepoolAutoscaling() {
        return Optional.ofNullable(this.enableNodepoolAutoscaling);
    }
    public Optional<Boolean> enablePrivateEndpoint() {
        return Optional.ofNullable(this.enablePrivateEndpoint);
    }
    public Optional<Boolean> enablePrivateNodes() {
        return Optional.ofNullable(this.enablePrivateNodes);
    }
    public Optional<Boolean> enableStackdriverLogging() {
        return Optional.ofNullable(this.enableStackdriverLogging);
    }
    public Optional<Boolean> enableStackdriverMonitoring() {
        return Optional.ofNullable(this.enableStackdriverMonitoring);
    }
    public String imageType() {
        return this.imageType;
    }
    public String ipPolicyClusterIpv4CidrBlock() {
        return this.ipPolicyClusterIpv4CidrBlock;
    }
    public String ipPolicyClusterSecondaryRangeName() {
        return this.ipPolicyClusterSecondaryRangeName;
    }
    public Optional<Boolean> ipPolicyCreateSubnetwork() {
        return Optional.ofNullable(this.ipPolicyCreateSubnetwork);
    }
    public String ipPolicyNodeIpv4CidrBlock() {
        return this.ipPolicyNodeIpv4CidrBlock;
    }
    public String ipPolicyServicesIpv4CidrBlock() {
        return this.ipPolicyServicesIpv4CidrBlock;
    }
    public String ipPolicyServicesSecondaryRangeName() {
        return this.ipPolicyServicesSecondaryRangeName;
    }
    public String ipPolicySubnetworkName() {
        return this.ipPolicySubnetworkName;
    }
    public Optional<Boolean> issueClientCertificate() {
        return Optional.ofNullable(this.issueClientCertificate);
    }
    public Optional<Boolean> kubernetesDashboard() {
        return Optional.ofNullable(this.kubernetesDashboard);
    }
    /**
     * @return (Computed) Labels for Node Pool object (map)
     * 
     */
    public Map<String,Object> labels() {
        return this.labels;
    }
    public Optional<Integer> localSsdCount() {
        return Optional.ofNullable(this.localSsdCount);
    }
    public List<String> locations() {
        return this.locations;
    }
    public String machineType() {
        return this.machineType;
    }
    public String maintenanceWindow() {
        return this.maintenanceWindow;
    }
    public List<String> masterAuthorizedNetworkCidrBlocks() {
        return this.masterAuthorizedNetworkCidrBlocks == null ? List.of() : this.masterAuthorizedNetworkCidrBlocks;
    }
    public String masterIpv4CidrBlock() {
        return this.masterIpv4CidrBlock;
    }
    public String masterVersion() {
        return this.masterVersion;
    }
    public Optional<Integer> maxNodeCount() {
        return Optional.ofNullable(this.maxNodeCount);
    }
    public Optional<Integer> minNodeCount() {
        return Optional.ofNullable(this.minNodeCount);
    }
    public String network() {
        return this.network;
    }
    public Optional<Integer> nodeCount() {
        return Optional.ofNullable(this.nodeCount);
    }
    public String nodePool() {
        return this.nodePool;
    }
    public String nodeVersion() {
        return this.nodeVersion;
    }
    public List<String> oauthScopes() {
        return this.oauthScopes;
    }
    public Optional<Boolean> preemptible() {
        return Optional.ofNullable(this.preemptible);
    }
    public String projectId() {
        return this.projectId;
    }
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    public Map<String,Object> resourceLabels() {
        return this.resourceLabels;
    }
    public String serviceAccount() {
        return this.serviceAccount;
    }
    public String subNetwork() {
        return this.subNetwork;
    }
    public List<String> taints() {
        return this.taints == null ? List.of() : this.taints;
    }
    public Optional<Boolean> useIpAliases() {
        return Optional.ofNullable(this.useIpAliases);
    }
    public Optional<String> zone() {
        return Optional.ofNullable(this.zone);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterGkeConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String clusterIpv4Cidr;
        private String credential;
        private @Nullable String description;
        private @Nullable Integer diskSizeGb;
        private String diskType;
        private @Nullable Boolean enableAlphaFeature;
        private @Nullable Boolean enableAutoRepair;
        private @Nullable Boolean enableAutoUpgrade;
        private @Nullable Boolean enableHorizontalPodAutoscaling;
        private @Nullable Boolean enableHttpLoadBalancing;
        private @Nullable Boolean enableKubernetesDashboard;
        private @Nullable Boolean enableLegacyAbac;
        private @Nullable Boolean enableMasterAuthorizedNetwork;
        private @Nullable Boolean enableNetworkPolicyConfig;
        private @Nullable Boolean enableNodepoolAutoscaling;
        private @Nullable Boolean enablePrivateEndpoint;
        private @Nullable Boolean enablePrivateNodes;
        private @Nullable Boolean enableStackdriverLogging;
        private @Nullable Boolean enableStackdriverMonitoring;
        private String imageType;
        private String ipPolicyClusterIpv4CidrBlock;
        private String ipPolicyClusterSecondaryRangeName;
        private @Nullable Boolean ipPolicyCreateSubnetwork;
        private String ipPolicyNodeIpv4CidrBlock;
        private String ipPolicyServicesIpv4CidrBlock;
        private String ipPolicyServicesSecondaryRangeName;
        private String ipPolicySubnetworkName;
        private @Nullable Boolean issueClientCertificate;
        private @Nullable Boolean kubernetesDashboard;
        private Map<String,Object> labels;
        private @Nullable Integer localSsdCount;
        private List<String> locations;
        private String machineType;
        private String maintenanceWindow;
        private @Nullable List<String> masterAuthorizedNetworkCidrBlocks;
        private String masterIpv4CidrBlock;
        private String masterVersion;
        private @Nullable Integer maxNodeCount;
        private @Nullable Integer minNodeCount;
        private String network;
        private @Nullable Integer nodeCount;
        private String nodePool;
        private String nodeVersion;
        private List<String> oauthScopes;
        private @Nullable Boolean preemptible;
        private String projectId;
        private @Nullable String region;
        private Map<String,Object> resourceLabels;
        private String serviceAccount;
        private String subNetwork;
        private @Nullable List<String> taints;
        private @Nullable Boolean useIpAliases;
        private @Nullable String zone;

        public Builder() {
    	      // Empty
        }

        public Builder(GetClusterGkeConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterIpv4Cidr = defaults.clusterIpv4Cidr;
    	      this.credential = defaults.credential;
    	      this.description = defaults.description;
    	      this.diskSizeGb = defaults.diskSizeGb;
    	      this.diskType = defaults.diskType;
    	      this.enableAlphaFeature = defaults.enableAlphaFeature;
    	      this.enableAutoRepair = defaults.enableAutoRepair;
    	      this.enableAutoUpgrade = defaults.enableAutoUpgrade;
    	      this.enableHorizontalPodAutoscaling = defaults.enableHorizontalPodAutoscaling;
    	      this.enableHttpLoadBalancing = defaults.enableHttpLoadBalancing;
    	      this.enableKubernetesDashboard = defaults.enableKubernetesDashboard;
    	      this.enableLegacyAbac = defaults.enableLegacyAbac;
    	      this.enableMasterAuthorizedNetwork = defaults.enableMasterAuthorizedNetwork;
    	      this.enableNetworkPolicyConfig = defaults.enableNetworkPolicyConfig;
    	      this.enableNodepoolAutoscaling = defaults.enableNodepoolAutoscaling;
    	      this.enablePrivateEndpoint = defaults.enablePrivateEndpoint;
    	      this.enablePrivateNodes = defaults.enablePrivateNodes;
    	      this.enableStackdriverLogging = defaults.enableStackdriverLogging;
    	      this.enableStackdriverMonitoring = defaults.enableStackdriverMonitoring;
    	      this.imageType = defaults.imageType;
    	      this.ipPolicyClusterIpv4CidrBlock = defaults.ipPolicyClusterIpv4CidrBlock;
    	      this.ipPolicyClusterSecondaryRangeName = defaults.ipPolicyClusterSecondaryRangeName;
    	      this.ipPolicyCreateSubnetwork = defaults.ipPolicyCreateSubnetwork;
    	      this.ipPolicyNodeIpv4CidrBlock = defaults.ipPolicyNodeIpv4CidrBlock;
    	      this.ipPolicyServicesIpv4CidrBlock = defaults.ipPolicyServicesIpv4CidrBlock;
    	      this.ipPolicyServicesSecondaryRangeName = defaults.ipPolicyServicesSecondaryRangeName;
    	      this.ipPolicySubnetworkName = defaults.ipPolicySubnetworkName;
    	      this.issueClientCertificate = defaults.issueClientCertificate;
    	      this.kubernetesDashboard = defaults.kubernetesDashboard;
    	      this.labels = defaults.labels;
    	      this.localSsdCount = defaults.localSsdCount;
    	      this.locations = defaults.locations;
    	      this.machineType = defaults.machineType;
    	      this.maintenanceWindow = defaults.maintenanceWindow;
    	      this.masterAuthorizedNetworkCidrBlocks = defaults.masterAuthorizedNetworkCidrBlocks;
    	      this.masterIpv4CidrBlock = defaults.masterIpv4CidrBlock;
    	      this.masterVersion = defaults.masterVersion;
    	      this.maxNodeCount = defaults.maxNodeCount;
    	      this.minNodeCount = defaults.minNodeCount;
    	      this.network = defaults.network;
    	      this.nodeCount = defaults.nodeCount;
    	      this.nodePool = defaults.nodePool;
    	      this.nodeVersion = defaults.nodeVersion;
    	      this.oauthScopes = defaults.oauthScopes;
    	      this.preemptible = defaults.preemptible;
    	      this.projectId = defaults.projectId;
    	      this.region = defaults.region;
    	      this.resourceLabels = defaults.resourceLabels;
    	      this.serviceAccount = defaults.serviceAccount;
    	      this.subNetwork = defaults.subNetwork;
    	      this.taints = defaults.taints;
    	      this.useIpAliases = defaults.useIpAliases;
    	      this.zone = defaults.zone;
        }

        public Builder clusterIpv4Cidr(String clusterIpv4Cidr) {
            this.clusterIpv4Cidr = Objects.requireNonNull(clusterIpv4Cidr);
            return this;
        }
        public Builder credential(String credential) {
            this.credential = Objects.requireNonNull(credential);
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder diskSizeGb(@Nullable Integer diskSizeGb) {
            this.diskSizeGb = diskSizeGb;
            return this;
        }
        public Builder diskType(String diskType) {
            this.diskType = Objects.requireNonNull(diskType);
            return this;
        }
        public Builder enableAlphaFeature(@Nullable Boolean enableAlphaFeature) {
            this.enableAlphaFeature = enableAlphaFeature;
            return this;
        }
        public Builder enableAutoRepair(@Nullable Boolean enableAutoRepair) {
            this.enableAutoRepair = enableAutoRepair;
            return this;
        }
        public Builder enableAutoUpgrade(@Nullable Boolean enableAutoUpgrade) {
            this.enableAutoUpgrade = enableAutoUpgrade;
            return this;
        }
        public Builder enableHorizontalPodAutoscaling(@Nullable Boolean enableHorizontalPodAutoscaling) {
            this.enableHorizontalPodAutoscaling = enableHorizontalPodAutoscaling;
            return this;
        }
        public Builder enableHttpLoadBalancing(@Nullable Boolean enableHttpLoadBalancing) {
            this.enableHttpLoadBalancing = enableHttpLoadBalancing;
            return this;
        }
        public Builder enableKubernetesDashboard(@Nullable Boolean enableKubernetesDashboard) {
            this.enableKubernetesDashboard = enableKubernetesDashboard;
            return this;
        }
        public Builder enableLegacyAbac(@Nullable Boolean enableLegacyAbac) {
            this.enableLegacyAbac = enableLegacyAbac;
            return this;
        }
        public Builder enableMasterAuthorizedNetwork(@Nullable Boolean enableMasterAuthorizedNetwork) {
            this.enableMasterAuthorizedNetwork = enableMasterAuthorizedNetwork;
            return this;
        }
        public Builder enableNetworkPolicyConfig(@Nullable Boolean enableNetworkPolicyConfig) {
            this.enableNetworkPolicyConfig = enableNetworkPolicyConfig;
            return this;
        }
        public Builder enableNodepoolAutoscaling(@Nullable Boolean enableNodepoolAutoscaling) {
            this.enableNodepoolAutoscaling = enableNodepoolAutoscaling;
            return this;
        }
        public Builder enablePrivateEndpoint(@Nullable Boolean enablePrivateEndpoint) {
            this.enablePrivateEndpoint = enablePrivateEndpoint;
            return this;
        }
        public Builder enablePrivateNodes(@Nullable Boolean enablePrivateNodes) {
            this.enablePrivateNodes = enablePrivateNodes;
            return this;
        }
        public Builder enableStackdriverLogging(@Nullable Boolean enableStackdriverLogging) {
            this.enableStackdriverLogging = enableStackdriverLogging;
            return this;
        }
        public Builder enableStackdriverMonitoring(@Nullable Boolean enableStackdriverMonitoring) {
            this.enableStackdriverMonitoring = enableStackdriverMonitoring;
            return this;
        }
        public Builder imageType(String imageType) {
            this.imageType = Objects.requireNonNull(imageType);
            return this;
        }
        public Builder ipPolicyClusterIpv4CidrBlock(String ipPolicyClusterIpv4CidrBlock) {
            this.ipPolicyClusterIpv4CidrBlock = Objects.requireNonNull(ipPolicyClusterIpv4CidrBlock);
            return this;
        }
        public Builder ipPolicyClusterSecondaryRangeName(String ipPolicyClusterSecondaryRangeName) {
            this.ipPolicyClusterSecondaryRangeName = Objects.requireNonNull(ipPolicyClusterSecondaryRangeName);
            return this;
        }
        public Builder ipPolicyCreateSubnetwork(@Nullable Boolean ipPolicyCreateSubnetwork) {
            this.ipPolicyCreateSubnetwork = ipPolicyCreateSubnetwork;
            return this;
        }
        public Builder ipPolicyNodeIpv4CidrBlock(String ipPolicyNodeIpv4CidrBlock) {
            this.ipPolicyNodeIpv4CidrBlock = Objects.requireNonNull(ipPolicyNodeIpv4CidrBlock);
            return this;
        }
        public Builder ipPolicyServicesIpv4CidrBlock(String ipPolicyServicesIpv4CidrBlock) {
            this.ipPolicyServicesIpv4CidrBlock = Objects.requireNonNull(ipPolicyServicesIpv4CidrBlock);
            return this;
        }
        public Builder ipPolicyServicesSecondaryRangeName(String ipPolicyServicesSecondaryRangeName) {
            this.ipPolicyServicesSecondaryRangeName = Objects.requireNonNull(ipPolicyServicesSecondaryRangeName);
            return this;
        }
        public Builder ipPolicySubnetworkName(String ipPolicySubnetworkName) {
            this.ipPolicySubnetworkName = Objects.requireNonNull(ipPolicySubnetworkName);
            return this;
        }
        public Builder issueClientCertificate(@Nullable Boolean issueClientCertificate) {
            this.issueClientCertificate = issueClientCertificate;
            return this;
        }
        public Builder kubernetesDashboard(@Nullable Boolean kubernetesDashboard) {
            this.kubernetesDashboard = kubernetesDashboard;
            return this;
        }
        public Builder labels(Map<String,Object> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }
        public Builder localSsdCount(@Nullable Integer localSsdCount) {
            this.localSsdCount = localSsdCount;
            return this;
        }
        public Builder locations(List<String> locations) {
            this.locations = Objects.requireNonNull(locations);
            return this;
        }
        public Builder locations(String... locations) {
            return locations(List.of(locations));
        }
        public Builder machineType(String machineType) {
            this.machineType = Objects.requireNonNull(machineType);
            return this;
        }
        public Builder maintenanceWindow(String maintenanceWindow) {
            this.maintenanceWindow = Objects.requireNonNull(maintenanceWindow);
            return this;
        }
        public Builder masterAuthorizedNetworkCidrBlocks(@Nullable List<String> masterAuthorizedNetworkCidrBlocks) {
            this.masterAuthorizedNetworkCidrBlocks = masterAuthorizedNetworkCidrBlocks;
            return this;
        }
        public Builder masterAuthorizedNetworkCidrBlocks(String... masterAuthorizedNetworkCidrBlocks) {
            return masterAuthorizedNetworkCidrBlocks(List.of(masterAuthorizedNetworkCidrBlocks));
        }
        public Builder masterIpv4CidrBlock(String masterIpv4CidrBlock) {
            this.masterIpv4CidrBlock = Objects.requireNonNull(masterIpv4CidrBlock);
            return this;
        }
        public Builder masterVersion(String masterVersion) {
            this.masterVersion = Objects.requireNonNull(masterVersion);
            return this;
        }
        public Builder maxNodeCount(@Nullable Integer maxNodeCount) {
            this.maxNodeCount = maxNodeCount;
            return this;
        }
        public Builder minNodeCount(@Nullable Integer minNodeCount) {
            this.minNodeCount = minNodeCount;
            return this;
        }
        public Builder network(String network) {
            this.network = Objects.requireNonNull(network);
            return this;
        }
        public Builder nodeCount(@Nullable Integer nodeCount) {
            this.nodeCount = nodeCount;
            return this;
        }
        public Builder nodePool(String nodePool) {
            this.nodePool = Objects.requireNonNull(nodePool);
            return this;
        }
        public Builder nodeVersion(String nodeVersion) {
            this.nodeVersion = Objects.requireNonNull(nodeVersion);
            return this;
        }
        public Builder oauthScopes(List<String> oauthScopes) {
            this.oauthScopes = Objects.requireNonNull(oauthScopes);
            return this;
        }
        public Builder oauthScopes(String... oauthScopes) {
            return oauthScopes(List.of(oauthScopes));
        }
        public Builder preemptible(@Nullable Boolean preemptible) {
            this.preemptible = preemptible;
            return this;
        }
        public Builder projectId(String projectId) {
            this.projectId = Objects.requireNonNull(projectId);
            return this;
        }
        public Builder region(@Nullable String region) {
            this.region = region;
            return this;
        }
        public Builder resourceLabels(Map<String,Object> resourceLabels) {
            this.resourceLabels = Objects.requireNonNull(resourceLabels);
            return this;
        }
        public Builder serviceAccount(String serviceAccount) {
            this.serviceAccount = Objects.requireNonNull(serviceAccount);
            return this;
        }
        public Builder subNetwork(String subNetwork) {
            this.subNetwork = Objects.requireNonNull(subNetwork);
            return this;
        }
        public Builder taints(@Nullable List<String> taints) {
            this.taints = taints;
            return this;
        }
        public Builder taints(String... taints) {
            return taints(List.of(taints));
        }
        public Builder useIpAliases(@Nullable Boolean useIpAliases) {
            this.useIpAliases = useIpAliases;
            return this;
        }
        public Builder zone(@Nullable String zone) {
            this.zone = zone;
            return this;
        }        public GetClusterGkeConfig build() {
            return new GetClusterGkeConfig(clusterIpv4Cidr, credential, description, diskSizeGb, diskType, enableAlphaFeature, enableAutoRepair, enableAutoUpgrade, enableHorizontalPodAutoscaling, enableHttpLoadBalancing, enableKubernetesDashboard, enableLegacyAbac, enableMasterAuthorizedNetwork, enableNetworkPolicyConfig, enableNodepoolAutoscaling, enablePrivateEndpoint, enablePrivateNodes, enableStackdriverLogging, enableStackdriverMonitoring, imageType, ipPolicyClusterIpv4CidrBlock, ipPolicyClusterSecondaryRangeName, ipPolicyCreateSubnetwork, ipPolicyNodeIpv4CidrBlock, ipPolicyServicesIpv4CidrBlock, ipPolicyServicesSecondaryRangeName, ipPolicySubnetworkName, issueClientCertificate, kubernetesDashboard, labels, localSsdCount, locations, machineType, maintenanceWindow, masterAuthorizedNetworkCidrBlocks, masterIpv4CidrBlock, masterVersion, maxNodeCount, minNodeCount, network, nodeCount, nodePool, nodeVersion, oauthScopes, preemptible, projectId, region, resourceLabels, serviceAccount, subNetwork, taints, useIpAliases, zone);
        }
    }
}
