// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetClusterOkeConfig {
    private final String compartmentId;
    private final @Nullable Integer customBootVolumeSize;
    /**
     * @return (Computed) The description for Cluster (string)
     * 
     */
    private final @Nullable String description;
    private final @Nullable Boolean enableKubernetesDashboard;
    private final @Nullable Boolean enablePrivateControlPlane;
    private final @Nullable Boolean enablePrivateNodes;
    private final String fingerprint;
    private final @Nullable Integer flexOcpus;
    private final @Nullable String kmsKeyId;
    private final String kubernetesVersion;
    private final @Nullable Integer limitNodeCount;
    private final @Nullable String loadBalancerSubnetName1;
    private final @Nullable String loadBalancerSubnetName2;
    private final String nodeImage;
    private final @Nullable String nodePoolDnsDomainName;
    private final @Nullable String nodePoolSubnetName;
    private final @Nullable String nodePublicKeyContents;
    private final String nodeShape;
    private final @Nullable String podCidr;
    private final String privateKeyContents;
    private final @Nullable String privateKeyPassphrase;
    private final @Nullable Integer quantityOfNodeSubnets;
    private final @Nullable Integer quantityPerSubnet;
    private final String region;
    private final @Nullable String serviceCidr;
    private final @Nullable String serviceDnsDomainName;
    private final @Nullable Boolean skipVcnDelete;
    private final String tenancyId;
    private final String userOcid;
    private final @Nullable String vcnCompartmentId;
    private final @Nullable String vcnName;
    private final @Nullable String workerNodeIngressCidr;

    @CustomType.Constructor
    private GetClusterOkeConfig(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("customBootVolumeSize") @Nullable Integer customBootVolumeSize,
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("enableKubernetesDashboard") @Nullable Boolean enableKubernetesDashboard,
        @CustomType.Parameter("enablePrivateControlPlane") @Nullable Boolean enablePrivateControlPlane,
        @CustomType.Parameter("enablePrivateNodes") @Nullable Boolean enablePrivateNodes,
        @CustomType.Parameter("fingerprint") String fingerprint,
        @CustomType.Parameter("flexOcpus") @Nullable Integer flexOcpus,
        @CustomType.Parameter("kmsKeyId") @Nullable String kmsKeyId,
        @CustomType.Parameter("kubernetesVersion") String kubernetesVersion,
        @CustomType.Parameter("limitNodeCount") @Nullable Integer limitNodeCount,
        @CustomType.Parameter("loadBalancerSubnetName1") @Nullable String loadBalancerSubnetName1,
        @CustomType.Parameter("loadBalancerSubnetName2") @Nullable String loadBalancerSubnetName2,
        @CustomType.Parameter("nodeImage") String nodeImage,
        @CustomType.Parameter("nodePoolDnsDomainName") @Nullable String nodePoolDnsDomainName,
        @CustomType.Parameter("nodePoolSubnetName") @Nullable String nodePoolSubnetName,
        @CustomType.Parameter("nodePublicKeyContents") @Nullable String nodePublicKeyContents,
        @CustomType.Parameter("nodeShape") String nodeShape,
        @CustomType.Parameter("podCidr") @Nullable String podCidr,
        @CustomType.Parameter("privateKeyContents") String privateKeyContents,
        @CustomType.Parameter("privateKeyPassphrase") @Nullable String privateKeyPassphrase,
        @CustomType.Parameter("quantityOfNodeSubnets") @Nullable Integer quantityOfNodeSubnets,
        @CustomType.Parameter("quantityPerSubnet") @Nullable Integer quantityPerSubnet,
        @CustomType.Parameter("region") String region,
        @CustomType.Parameter("serviceCidr") @Nullable String serviceCidr,
        @CustomType.Parameter("serviceDnsDomainName") @Nullable String serviceDnsDomainName,
        @CustomType.Parameter("skipVcnDelete") @Nullable Boolean skipVcnDelete,
        @CustomType.Parameter("tenancyId") String tenancyId,
        @CustomType.Parameter("userOcid") String userOcid,
        @CustomType.Parameter("vcnCompartmentId") @Nullable String vcnCompartmentId,
        @CustomType.Parameter("vcnName") @Nullable String vcnName,
        @CustomType.Parameter("workerNodeIngressCidr") @Nullable String workerNodeIngressCidr) {
        this.compartmentId = compartmentId;
        this.customBootVolumeSize = customBootVolumeSize;
        this.description = description;
        this.enableKubernetesDashboard = enableKubernetesDashboard;
        this.enablePrivateControlPlane = enablePrivateControlPlane;
        this.enablePrivateNodes = enablePrivateNodes;
        this.fingerprint = fingerprint;
        this.flexOcpus = flexOcpus;
        this.kmsKeyId = kmsKeyId;
        this.kubernetesVersion = kubernetesVersion;
        this.limitNodeCount = limitNodeCount;
        this.loadBalancerSubnetName1 = loadBalancerSubnetName1;
        this.loadBalancerSubnetName2 = loadBalancerSubnetName2;
        this.nodeImage = nodeImage;
        this.nodePoolDnsDomainName = nodePoolDnsDomainName;
        this.nodePoolSubnetName = nodePoolSubnetName;
        this.nodePublicKeyContents = nodePublicKeyContents;
        this.nodeShape = nodeShape;
        this.podCidr = podCidr;
        this.privateKeyContents = privateKeyContents;
        this.privateKeyPassphrase = privateKeyPassphrase;
        this.quantityOfNodeSubnets = quantityOfNodeSubnets;
        this.quantityPerSubnet = quantityPerSubnet;
        this.region = region;
        this.serviceCidr = serviceCidr;
        this.serviceDnsDomainName = serviceDnsDomainName;
        this.skipVcnDelete = skipVcnDelete;
        this.tenancyId = tenancyId;
        this.userOcid = userOcid;
        this.vcnCompartmentId = vcnCompartmentId;
        this.vcnName = vcnName;
        this.workerNodeIngressCidr = workerNodeIngressCidr;
    }

    public String compartmentId() {
        return this.compartmentId;
    }
    public Optional<Integer> customBootVolumeSize() {
        return Optional.ofNullable(this.customBootVolumeSize);
    }
    /**
     * @return (Computed) The description for Cluster (string)
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    public Optional<Boolean> enableKubernetesDashboard() {
        return Optional.ofNullable(this.enableKubernetesDashboard);
    }
    public Optional<Boolean> enablePrivateControlPlane() {
        return Optional.ofNullable(this.enablePrivateControlPlane);
    }
    public Optional<Boolean> enablePrivateNodes() {
        return Optional.ofNullable(this.enablePrivateNodes);
    }
    public String fingerprint() {
        return this.fingerprint;
    }
    public Optional<Integer> flexOcpus() {
        return Optional.ofNullable(this.flexOcpus);
    }
    public Optional<String> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }
    public String kubernetesVersion() {
        return this.kubernetesVersion;
    }
    public Optional<Integer> limitNodeCount() {
        return Optional.ofNullable(this.limitNodeCount);
    }
    public Optional<String> loadBalancerSubnetName1() {
        return Optional.ofNullable(this.loadBalancerSubnetName1);
    }
    public Optional<String> loadBalancerSubnetName2() {
        return Optional.ofNullable(this.loadBalancerSubnetName2);
    }
    public String nodeImage() {
        return this.nodeImage;
    }
    public Optional<String> nodePoolDnsDomainName() {
        return Optional.ofNullable(this.nodePoolDnsDomainName);
    }
    public Optional<String> nodePoolSubnetName() {
        return Optional.ofNullable(this.nodePoolSubnetName);
    }
    public Optional<String> nodePublicKeyContents() {
        return Optional.ofNullable(this.nodePublicKeyContents);
    }
    public String nodeShape() {
        return this.nodeShape;
    }
    public Optional<String> podCidr() {
        return Optional.ofNullable(this.podCidr);
    }
    public String privateKeyContents() {
        return this.privateKeyContents;
    }
    public Optional<String> privateKeyPassphrase() {
        return Optional.ofNullable(this.privateKeyPassphrase);
    }
    public Optional<Integer> quantityOfNodeSubnets() {
        return Optional.ofNullable(this.quantityOfNodeSubnets);
    }
    public Optional<Integer> quantityPerSubnet() {
        return Optional.ofNullable(this.quantityPerSubnet);
    }
    public String region() {
        return this.region;
    }
    public Optional<String> serviceCidr() {
        return Optional.ofNullable(this.serviceCidr);
    }
    public Optional<String> serviceDnsDomainName() {
        return Optional.ofNullable(this.serviceDnsDomainName);
    }
    public Optional<Boolean> skipVcnDelete() {
        return Optional.ofNullable(this.skipVcnDelete);
    }
    public String tenancyId() {
        return this.tenancyId;
    }
    public String userOcid() {
        return this.userOcid;
    }
    public Optional<String> vcnCompartmentId() {
        return Optional.ofNullable(this.vcnCompartmentId);
    }
    public Optional<String> vcnName() {
        return Optional.ofNullable(this.vcnName);
    }
    public Optional<String> workerNodeIngressCidr() {
        return Optional.ofNullable(this.workerNodeIngressCidr);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterOkeConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private @Nullable Integer customBootVolumeSize;
        private @Nullable String description;
        private @Nullable Boolean enableKubernetesDashboard;
        private @Nullable Boolean enablePrivateControlPlane;
        private @Nullable Boolean enablePrivateNodes;
        private String fingerprint;
        private @Nullable Integer flexOcpus;
        private @Nullable String kmsKeyId;
        private String kubernetesVersion;
        private @Nullable Integer limitNodeCount;
        private @Nullable String loadBalancerSubnetName1;
        private @Nullable String loadBalancerSubnetName2;
        private String nodeImage;
        private @Nullable String nodePoolDnsDomainName;
        private @Nullable String nodePoolSubnetName;
        private @Nullable String nodePublicKeyContents;
        private String nodeShape;
        private @Nullable String podCidr;
        private String privateKeyContents;
        private @Nullable String privateKeyPassphrase;
        private @Nullable Integer quantityOfNodeSubnets;
        private @Nullable Integer quantityPerSubnet;
        private String region;
        private @Nullable String serviceCidr;
        private @Nullable String serviceDnsDomainName;
        private @Nullable Boolean skipVcnDelete;
        private String tenancyId;
        private String userOcid;
        private @Nullable String vcnCompartmentId;
        private @Nullable String vcnName;
        private @Nullable String workerNodeIngressCidr;

        public Builder() {
    	      // Empty
        }

        public Builder(GetClusterOkeConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.customBootVolumeSize = defaults.customBootVolumeSize;
    	      this.description = defaults.description;
    	      this.enableKubernetesDashboard = defaults.enableKubernetesDashboard;
    	      this.enablePrivateControlPlane = defaults.enablePrivateControlPlane;
    	      this.enablePrivateNodes = defaults.enablePrivateNodes;
    	      this.fingerprint = defaults.fingerprint;
    	      this.flexOcpus = defaults.flexOcpus;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.kubernetesVersion = defaults.kubernetesVersion;
    	      this.limitNodeCount = defaults.limitNodeCount;
    	      this.loadBalancerSubnetName1 = defaults.loadBalancerSubnetName1;
    	      this.loadBalancerSubnetName2 = defaults.loadBalancerSubnetName2;
    	      this.nodeImage = defaults.nodeImage;
    	      this.nodePoolDnsDomainName = defaults.nodePoolDnsDomainName;
    	      this.nodePoolSubnetName = defaults.nodePoolSubnetName;
    	      this.nodePublicKeyContents = defaults.nodePublicKeyContents;
    	      this.nodeShape = defaults.nodeShape;
    	      this.podCidr = defaults.podCidr;
    	      this.privateKeyContents = defaults.privateKeyContents;
    	      this.privateKeyPassphrase = defaults.privateKeyPassphrase;
    	      this.quantityOfNodeSubnets = defaults.quantityOfNodeSubnets;
    	      this.quantityPerSubnet = defaults.quantityPerSubnet;
    	      this.region = defaults.region;
    	      this.serviceCidr = defaults.serviceCidr;
    	      this.serviceDnsDomainName = defaults.serviceDnsDomainName;
    	      this.skipVcnDelete = defaults.skipVcnDelete;
    	      this.tenancyId = defaults.tenancyId;
    	      this.userOcid = defaults.userOcid;
    	      this.vcnCompartmentId = defaults.vcnCompartmentId;
    	      this.vcnName = defaults.vcnName;
    	      this.workerNodeIngressCidr = defaults.workerNodeIngressCidr;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder customBootVolumeSize(@Nullable Integer customBootVolumeSize) {
            this.customBootVolumeSize = customBootVolumeSize;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder enableKubernetesDashboard(@Nullable Boolean enableKubernetesDashboard) {
            this.enableKubernetesDashboard = enableKubernetesDashboard;
            return this;
        }
        public Builder enablePrivateControlPlane(@Nullable Boolean enablePrivateControlPlane) {
            this.enablePrivateControlPlane = enablePrivateControlPlane;
            return this;
        }
        public Builder enablePrivateNodes(@Nullable Boolean enablePrivateNodes) {
            this.enablePrivateNodes = enablePrivateNodes;
            return this;
        }
        public Builder fingerprint(String fingerprint) {
            this.fingerprint = Objects.requireNonNull(fingerprint);
            return this;
        }
        public Builder flexOcpus(@Nullable Integer flexOcpus) {
            this.flexOcpus = flexOcpus;
            return this;
        }
        public Builder kmsKeyId(@Nullable String kmsKeyId) {
            this.kmsKeyId = kmsKeyId;
            return this;
        }
        public Builder kubernetesVersion(String kubernetesVersion) {
            this.kubernetesVersion = Objects.requireNonNull(kubernetesVersion);
            return this;
        }
        public Builder limitNodeCount(@Nullable Integer limitNodeCount) {
            this.limitNodeCount = limitNodeCount;
            return this;
        }
        public Builder loadBalancerSubnetName1(@Nullable String loadBalancerSubnetName1) {
            this.loadBalancerSubnetName1 = loadBalancerSubnetName1;
            return this;
        }
        public Builder loadBalancerSubnetName2(@Nullable String loadBalancerSubnetName2) {
            this.loadBalancerSubnetName2 = loadBalancerSubnetName2;
            return this;
        }
        public Builder nodeImage(String nodeImage) {
            this.nodeImage = Objects.requireNonNull(nodeImage);
            return this;
        }
        public Builder nodePoolDnsDomainName(@Nullable String nodePoolDnsDomainName) {
            this.nodePoolDnsDomainName = nodePoolDnsDomainName;
            return this;
        }
        public Builder nodePoolSubnetName(@Nullable String nodePoolSubnetName) {
            this.nodePoolSubnetName = nodePoolSubnetName;
            return this;
        }
        public Builder nodePublicKeyContents(@Nullable String nodePublicKeyContents) {
            this.nodePublicKeyContents = nodePublicKeyContents;
            return this;
        }
        public Builder nodeShape(String nodeShape) {
            this.nodeShape = Objects.requireNonNull(nodeShape);
            return this;
        }
        public Builder podCidr(@Nullable String podCidr) {
            this.podCidr = podCidr;
            return this;
        }
        public Builder privateKeyContents(String privateKeyContents) {
            this.privateKeyContents = Objects.requireNonNull(privateKeyContents);
            return this;
        }
        public Builder privateKeyPassphrase(@Nullable String privateKeyPassphrase) {
            this.privateKeyPassphrase = privateKeyPassphrase;
            return this;
        }
        public Builder quantityOfNodeSubnets(@Nullable Integer quantityOfNodeSubnets) {
            this.quantityOfNodeSubnets = quantityOfNodeSubnets;
            return this;
        }
        public Builder quantityPerSubnet(@Nullable Integer quantityPerSubnet) {
            this.quantityPerSubnet = quantityPerSubnet;
            return this;
        }
        public Builder region(String region) {
            this.region = Objects.requireNonNull(region);
            return this;
        }
        public Builder serviceCidr(@Nullable String serviceCidr) {
            this.serviceCidr = serviceCidr;
            return this;
        }
        public Builder serviceDnsDomainName(@Nullable String serviceDnsDomainName) {
            this.serviceDnsDomainName = serviceDnsDomainName;
            return this;
        }
        public Builder skipVcnDelete(@Nullable Boolean skipVcnDelete) {
            this.skipVcnDelete = skipVcnDelete;
            return this;
        }
        public Builder tenancyId(String tenancyId) {
            this.tenancyId = Objects.requireNonNull(tenancyId);
            return this;
        }
        public Builder userOcid(String userOcid) {
            this.userOcid = Objects.requireNonNull(userOcid);
            return this;
        }
        public Builder vcnCompartmentId(@Nullable String vcnCompartmentId) {
            this.vcnCompartmentId = vcnCompartmentId;
            return this;
        }
        public Builder vcnName(@Nullable String vcnName) {
            this.vcnName = vcnName;
            return this;
        }
        public Builder workerNodeIngressCidr(@Nullable String workerNodeIngressCidr) {
            this.workerNodeIngressCidr = workerNodeIngressCidr;
            return this;
        }        public GetClusterOkeConfig build() {
            return new GetClusterOkeConfig(compartmentId, customBootVolumeSize, description, enableKubernetesDashboard, enablePrivateControlPlane, enablePrivateNodes, fingerprint, flexOcpus, kmsKeyId, kubernetesVersion, limitNodeCount, loadBalancerSubnetName1, loadBalancerSubnetName2, nodeImage, nodePoolDnsDomainName, nodePoolSubnetName, nodePublicKeyContents, nodeShape, podCidr, privateKeyContents, privateKeyPassphrase, quantityOfNodeSubnets, quantityPerSubnet, region, serviceCidr, serviceDnsDomainName, skipVcnDelete, tenancyId, userOcid, vcnCompartmentId, vcnName, workerNodeIngressCidr);
        }
    }
}
