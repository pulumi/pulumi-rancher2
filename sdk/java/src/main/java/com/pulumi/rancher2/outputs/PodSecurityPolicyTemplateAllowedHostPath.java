// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PodSecurityPolicyTemplateAllowedHostPath {
    /**
     * @return (string)
     * 
     */
    private String pathPrefix;
    /**
     * @return (string)
     * 
     */
    private @Nullable Boolean readOnly;

    private PodSecurityPolicyTemplateAllowedHostPath() {}
    /**
     * @return (string)
     * 
     */
    public String pathPrefix() {
        return this.pathPrefix;
    }
    /**
     * @return (string)
     * 
     */
    public Optional<Boolean> readOnly() {
        return Optional.ofNullable(this.readOnly);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PodSecurityPolicyTemplateAllowedHostPath defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String pathPrefix;
        private @Nullable Boolean readOnly;
        public Builder() {}
        public Builder(PodSecurityPolicyTemplateAllowedHostPath defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.pathPrefix = defaults.pathPrefix;
    	      this.readOnly = defaults.readOnly;
        }

        @CustomType.Setter
        public Builder pathPrefix(String pathPrefix) {
            this.pathPrefix = Objects.requireNonNull(pathPrefix);
            return this;
        }
        @CustomType.Setter
        public Builder readOnly(@Nullable Boolean readOnly) {
            this.readOnly = readOnly;
            return this;
        }
        public PodSecurityPolicyTemplateAllowedHostPath build() {
            final var o = new PodSecurityPolicyTemplateAllowedHostPath();
            o.pathPrefix = pathPrefix;
            o.readOnly = readOnly;
            return o;
        }
    }
}
