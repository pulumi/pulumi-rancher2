// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.rancher2.outputs.GetClusterRkeConfigCloudProviderVsphereCloudProviderDisk;
import com.pulumi.rancher2.outputs.GetClusterRkeConfigCloudProviderVsphereCloudProviderGlobal;
import com.pulumi.rancher2.outputs.GetClusterRkeConfigCloudProviderVsphereCloudProviderNetwork;
import com.pulumi.rancher2.outputs.GetClusterRkeConfigCloudProviderVsphereCloudProviderVirtualCenter;
import com.pulumi.rancher2.outputs.GetClusterRkeConfigCloudProviderVsphereCloudProviderWorkspace;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetClusterRkeConfigCloudProviderVsphereCloudProvider {
    private GetClusterRkeConfigCloudProviderVsphereCloudProviderDisk disk;
    private GetClusterRkeConfigCloudProviderVsphereCloudProviderGlobal global;
    private GetClusterRkeConfigCloudProviderVsphereCloudProviderNetwork network;
    private List<GetClusterRkeConfigCloudProviderVsphereCloudProviderVirtualCenter> virtualCenters;
    private GetClusterRkeConfigCloudProviderVsphereCloudProviderWorkspace workspace;

    private GetClusterRkeConfigCloudProviderVsphereCloudProvider() {}
    public GetClusterRkeConfigCloudProviderVsphereCloudProviderDisk disk() {
        return this.disk;
    }
    public GetClusterRkeConfigCloudProviderVsphereCloudProviderGlobal global() {
        return this.global;
    }
    public GetClusterRkeConfigCloudProviderVsphereCloudProviderNetwork network() {
        return this.network;
    }
    public List<GetClusterRkeConfigCloudProviderVsphereCloudProviderVirtualCenter> virtualCenters() {
        return this.virtualCenters;
    }
    public GetClusterRkeConfigCloudProviderVsphereCloudProviderWorkspace workspace() {
        return this.workspace;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterRkeConfigCloudProviderVsphereCloudProvider defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetClusterRkeConfigCloudProviderVsphereCloudProviderDisk disk;
        private GetClusterRkeConfigCloudProviderVsphereCloudProviderGlobal global;
        private GetClusterRkeConfigCloudProviderVsphereCloudProviderNetwork network;
        private List<GetClusterRkeConfigCloudProviderVsphereCloudProviderVirtualCenter> virtualCenters;
        private GetClusterRkeConfigCloudProviderVsphereCloudProviderWorkspace workspace;
        public Builder() {}
        public Builder(GetClusterRkeConfigCloudProviderVsphereCloudProvider defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.disk = defaults.disk;
    	      this.global = defaults.global;
    	      this.network = defaults.network;
    	      this.virtualCenters = defaults.virtualCenters;
    	      this.workspace = defaults.workspace;
        }

        @CustomType.Setter
        public Builder disk(GetClusterRkeConfigCloudProviderVsphereCloudProviderDisk disk) {
            this.disk = Objects.requireNonNull(disk);
            return this;
        }
        @CustomType.Setter
        public Builder global(GetClusterRkeConfigCloudProviderVsphereCloudProviderGlobal global) {
            this.global = Objects.requireNonNull(global);
            return this;
        }
        @CustomType.Setter
        public Builder network(GetClusterRkeConfigCloudProviderVsphereCloudProviderNetwork network) {
            this.network = Objects.requireNonNull(network);
            return this;
        }
        @CustomType.Setter
        public Builder virtualCenters(List<GetClusterRkeConfigCloudProviderVsphereCloudProviderVirtualCenter> virtualCenters) {
            this.virtualCenters = Objects.requireNonNull(virtualCenters);
            return this;
        }
        public Builder virtualCenters(GetClusterRkeConfigCloudProviderVsphereCloudProviderVirtualCenter... virtualCenters) {
            return virtualCenters(List.of(virtualCenters));
        }
        @CustomType.Setter
        public Builder workspace(GetClusterRkeConfigCloudProviderVsphereCloudProviderWorkspace workspace) {
            this.workspace = Objects.requireNonNull(workspace);
            return this;
        }
        public GetClusterRkeConfigCloudProviderVsphereCloudProvider build() {
            final var o = new GetClusterRkeConfigCloudProviderVsphereCloudProvider();
            o.disk = disk;
            o.global = global;
            o.network = network;
            o.virtualCenters = virtualCenters;
            o.workspace = workspace;
            return o;
        }
    }
}
