// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterAksConfig {
    /**
     * @return The secret of an Azure Active Directory server application (string)
     * 
     */
    private final @Nullable String aadServerAppSecret;
    /**
     * @return The ID of an Azure Active Directory tenant (string)
     * 
     */
    private final @Nullable String aadTenantId;
    /**
     * @return The ID of an Azure Active Directory client application of type \&#34;Native\&#34;. This application is for user login via kubectl (string)
     * 
     */
    private final @Nullable String addClientAppId;
    /**
     * @return The ID of an Azure Active Directory server application of type \&#34;Web app/API\&#34;. This application represents the managed cluster&#39;s apiserver (Server application) (string)
     * 
     */
    private final @Nullable String addServerAppId;
    /**
     * @return The administrator username to use for Linux hosts. Default `azureuser` (string)
     * 
     */
    private final @Nullable String adminUsername;
    /**
     * @return DNS prefix to be used to create the FQDN for the agent pool (string)
     * 
     */
    private final String agentDnsPrefix;
    /**
     * @return GB size to be used to specify the disk for every machine in the agent pool. If you specify 0, it will apply the default according to the \&#34;agent vm size\&#34; specified. Default `0` (int)
     * 
     */
    private final @Nullable Integer agentOsDiskSize;
    /**
     * @return Name for the agent pool, upto 12 alphanumeric characters. Default `agentpool0` (string)
     * 
     */
    private final @Nullable String agentPoolName;
    /**
     * @return Storage profile specifies what kind of storage used on machine in the agent pool. Chooses from [ManagedDisks StorageAccount]. Default `ManagedDisks` (string)
     * 
     */
    private final @Nullable String agentStorageProfile;
    /**
     * @return Size of machine in the agent pool. Default `Standard_D1_v2` (string)
     * 
     */
    private final @Nullable String agentVmSize;
    /**
     * @return The AKS auth base url (string)
     * 
     */
    private final @Nullable String authBaseUrl;
    /**
     * @return The AKS base url (string)
     * 
     */
    private final @Nullable String baseUrl;
    /**
     * @return Azure client ID to use (string)
     * 
     */
    private final String clientId;
    /**
     * @return Azure client secret associated with the \&#34;client id\&#34; (string)
     * 
     */
    private final String clientSecret;
    /**
     * @return The AKS node pool count. Default: `1` (int)
     * 
     */
    private final @Nullable Integer count;
    /**
     * @return An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes Service address range specified in \&#34;service cidr\&#34;. Default `10.0.0.10` (string)
     * 
     */
    private final @Nullable String dnsServiceIp;
    /**
     * @return A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes Service address range specified in \&#34;service cidr\&#34;. Default `172.17.0.1/16` (string)
     * 
     */
    private final @Nullable String dockerBridgeCidr;
    /**
     * @return Enable the Kubernetes ingress with automatic public DNS name creation. Default `false` (bool)
     * 
     */
    private final @Nullable Boolean enableHttpApplicationRouting;
    /**
     * @return Turn on Azure Log Analytics monitoring. Uses the Log Analytics \&#34;Default\&#34; workspace if it exists, else creates one. if using an existing workspace, specifies \&#34;log analytics workspace resource id\&#34;. Default `true` (bool)
     * 
     */
    private final @Nullable Boolean enableMonitoring;
    /**
     * @return The Kubernetes version that will be used for your master *and* OKE worker nodes (string)
     * 
     */
    private final String kubernetesVersion;
    /**
     * @return The AKS load balancer sku (string)
     * 
     */
    private final @Nullable String loadBalancerSku;
    /**
     * @return Azure Kubernetes cluster location. Default `eastus` (string)
     * 
     */
    private final @Nullable String location;
    /**
     * @return The name of an existing Azure Log Analytics Workspace to use for storing monitoring data. If not specified, uses &#39;{resource group}-{subscription id}-{location code}&#39; (string)
     * 
     */
    private final @Nullable String logAnalyticsWorkspace;
    /**
     * @return The resource group of an existing Azure Log Analytics Workspace to use for storing monitoring data. If not specified, uses the &#39;Cluster&#39; resource group (string)
     * 
     */
    private final @Nullable String logAnalyticsWorkspaceResourceGroup;
    /**
     * @return DNS prefix to use the Kubernetes cluster control pane (string)
     * 
     */
    private final String masterDnsPrefix;
    /**
     * @return The AKS node pool max pods. Default: `110` (int)
     * 
     */
    private final @Nullable Integer maxPods;
    /**
     * @return The AKS network plugin. Required if `imported=false` (string)
     * 
     */
    private final @Nullable String networkPlugin;
    /**
     * @return The AKS network policy (string)
     * 
     */
    private final @Nullable String networkPolicy;
    /**
     * @return A CIDR IP range from which to assign Kubernetes Pod IPs (string)
     * 
     */
    private final @Nullable String podCidr;
    /**
     * @return The AKS resource group (string)
     * 
     */
    private final String resourceGroup;
    /**
     * @return A CIDR IP range from which to assign Kubernetes Service IPs (string)
     * 
     */
    private final @Nullable String serviceCidr;
    /**
     * @return Contents of the SSH public key used to authenticate with Linux hosts (string)
     * 
     */
    private final String sshPublicKeyContents;
    /**
     * @return The AKS subnet (string)
     * 
     */
    private final String subnet;
    /**
     * @return Subscription credentials which uniquely identify Microsoft Azure subscription (string)
     * 
     */
    private final String subscriptionId;
    /**
     * @return Use `tags` argument instead as []string
     * 
     * @deprecated
     * Use tags argument instead as []string
     * 
     */
    @Deprecated /* Use tags argument instead as []string */
    private final @Nullable Map<String,Object> tag;
    /**
     * @return The GKE node config tags (List)
     * 
     */
    private final @Nullable List<String> tags;
    /**
     * @return Azure tenant ID to use (string)
     * 
     */
    private final String tenantId;
    /**
     * @return The name of the virtual network to use. If it&#39;s not specified Rancher will create a new VPC (string)
     * 
     */
    private final String virtualNetwork;
    /**
     * @return The AKS virtual network resource group (string)
     * 
     */
    private final String virtualNetworkResourceGroup;

    @CustomType.Constructor
    private ClusterAksConfig(
        @CustomType.Parameter("aadServerAppSecret") @Nullable String aadServerAppSecret,
        @CustomType.Parameter("aadTenantId") @Nullable String aadTenantId,
        @CustomType.Parameter("addClientAppId") @Nullable String addClientAppId,
        @CustomType.Parameter("addServerAppId") @Nullable String addServerAppId,
        @CustomType.Parameter("adminUsername") @Nullable String adminUsername,
        @CustomType.Parameter("agentDnsPrefix") String agentDnsPrefix,
        @CustomType.Parameter("agentOsDiskSize") @Nullable Integer agentOsDiskSize,
        @CustomType.Parameter("agentPoolName") @Nullable String agentPoolName,
        @CustomType.Parameter("agentStorageProfile") @Nullable String agentStorageProfile,
        @CustomType.Parameter("agentVmSize") @Nullable String agentVmSize,
        @CustomType.Parameter("authBaseUrl") @Nullable String authBaseUrl,
        @CustomType.Parameter("baseUrl") @Nullable String baseUrl,
        @CustomType.Parameter("clientId") String clientId,
        @CustomType.Parameter("clientSecret") String clientSecret,
        @CustomType.Parameter("count") @Nullable Integer count,
        @CustomType.Parameter("dnsServiceIp") @Nullable String dnsServiceIp,
        @CustomType.Parameter("dockerBridgeCidr") @Nullable String dockerBridgeCidr,
        @CustomType.Parameter("enableHttpApplicationRouting") @Nullable Boolean enableHttpApplicationRouting,
        @CustomType.Parameter("enableMonitoring") @Nullable Boolean enableMonitoring,
        @CustomType.Parameter("kubernetesVersion") String kubernetesVersion,
        @CustomType.Parameter("loadBalancerSku") @Nullable String loadBalancerSku,
        @CustomType.Parameter("location") @Nullable String location,
        @CustomType.Parameter("logAnalyticsWorkspace") @Nullable String logAnalyticsWorkspace,
        @CustomType.Parameter("logAnalyticsWorkspaceResourceGroup") @Nullable String logAnalyticsWorkspaceResourceGroup,
        @CustomType.Parameter("masterDnsPrefix") String masterDnsPrefix,
        @CustomType.Parameter("maxPods") @Nullable Integer maxPods,
        @CustomType.Parameter("networkPlugin") @Nullable String networkPlugin,
        @CustomType.Parameter("networkPolicy") @Nullable String networkPolicy,
        @CustomType.Parameter("podCidr") @Nullable String podCidr,
        @CustomType.Parameter("resourceGroup") String resourceGroup,
        @CustomType.Parameter("serviceCidr") @Nullable String serviceCidr,
        @CustomType.Parameter("sshPublicKeyContents") String sshPublicKeyContents,
        @CustomType.Parameter("subnet") String subnet,
        @CustomType.Parameter("subscriptionId") String subscriptionId,
        @CustomType.Parameter("tag") @Nullable Map<String,Object> tag,
        @CustomType.Parameter("tags") @Nullable List<String> tags,
        @CustomType.Parameter("tenantId") String tenantId,
        @CustomType.Parameter("virtualNetwork") String virtualNetwork,
        @CustomType.Parameter("virtualNetworkResourceGroup") String virtualNetworkResourceGroup) {
        this.aadServerAppSecret = aadServerAppSecret;
        this.aadTenantId = aadTenantId;
        this.addClientAppId = addClientAppId;
        this.addServerAppId = addServerAppId;
        this.adminUsername = adminUsername;
        this.agentDnsPrefix = agentDnsPrefix;
        this.agentOsDiskSize = agentOsDiskSize;
        this.agentPoolName = agentPoolName;
        this.agentStorageProfile = agentStorageProfile;
        this.agentVmSize = agentVmSize;
        this.authBaseUrl = authBaseUrl;
        this.baseUrl = baseUrl;
        this.clientId = clientId;
        this.clientSecret = clientSecret;
        this.count = count;
        this.dnsServiceIp = dnsServiceIp;
        this.dockerBridgeCidr = dockerBridgeCidr;
        this.enableHttpApplicationRouting = enableHttpApplicationRouting;
        this.enableMonitoring = enableMonitoring;
        this.kubernetesVersion = kubernetesVersion;
        this.loadBalancerSku = loadBalancerSku;
        this.location = location;
        this.logAnalyticsWorkspace = logAnalyticsWorkspace;
        this.logAnalyticsWorkspaceResourceGroup = logAnalyticsWorkspaceResourceGroup;
        this.masterDnsPrefix = masterDnsPrefix;
        this.maxPods = maxPods;
        this.networkPlugin = networkPlugin;
        this.networkPolicy = networkPolicy;
        this.podCidr = podCidr;
        this.resourceGroup = resourceGroup;
        this.serviceCidr = serviceCidr;
        this.sshPublicKeyContents = sshPublicKeyContents;
        this.subnet = subnet;
        this.subscriptionId = subscriptionId;
        this.tag = tag;
        this.tags = tags;
        this.tenantId = tenantId;
        this.virtualNetwork = virtualNetwork;
        this.virtualNetworkResourceGroup = virtualNetworkResourceGroup;
    }

    /**
     * @return The secret of an Azure Active Directory server application (string)
     * 
     */
    public Optional<String> aadServerAppSecret() {
        return Optional.ofNullable(this.aadServerAppSecret);
    }
    /**
     * @return The ID of an Azure Active Directory tenant (string)
     * 
     */
    public Optional<String> aadTenantId() {
        return Optional.ofNullable(this.aadTenantId);
    }
    /**
     * @return The ID of an Azure Active Directory client application of type \&#34;Native\&#34;. This application is for user login via kubectl (string)
     * 
     */
    public Optional<String> addClientAppId() {
        return Optional.ofNullable(this.addClientAppId);
    }
    /**
     * @return The ID of an Azure Active Directory server application of type \&#34;Web app/API\&#34;. This application represents the managed cluster&#39;s apiserver (Server application) (string)
     * 
     */
    public Optional<String> addServerAppId() {
        return Optional.ofNullable(this.addServerAppId);
    }
    /**
     * @return The administrator username to use for Linux hosts. Default `azureuser` (string)
     * 
     */
    public Optional<String> adminUsername() {
        return Optional.ofNullable(this.adminUsername);
    }
    /**
     * @return DNS prefix to be used to create the FQDN for the agent pool (string)
     * 
     */
    public String agentDnsPrefix() {
        return this.agentDnsPrefix;
    }
    /**
     * @return GB size to be used to specify the disk for every machine in the agent pool. If you specify 0, it will apply the default according to the \&#34;agent vm size\&#34; specified. Default `0` (int)
     * 
     */
    public Optional<Integer> agentOsDiskSize() {
        return Optional.ofNullable(this.agentOsDiskSize);
    }
    /**
     * @return Name for the agent pool, upto 12 alphanumeric characters. Default `agentpool0` (string)
     * 
     */
    public Optional<String> agentPoolName() {
        return Optional.ofNullable(this.agentPoolName);
    }
    /**
     * @return Storage profile specifies what kind of storage used on machine in the agent pool. Chooses from [ManagedDisks StorageAccount]. Default `ManagedDisks` (string)
     * 
     */
    public Optional<String> agentStorageProfile() {
        return Optional.ofNullable(this.agentStorageProfile);
    }
    /**
     * @return Size of machine in the agent pool. Default `Standard_D1_v2` (string)
     * 
     */
    public Optional<String> agentVmSize() {
        return Optional.ofNullable(this.agentVmSize);
    }
    /**
     * @return The AKS auth base url (string)
     * 
     */
    public Optional<String> authBaseUrl() {
        return Optional.ofNullable(this.authBaseUrl);
    }
    /**
     * @return The AKS base url (string)
     * 
     */
    public Optional<String> baseUrl() {
        return Optional.ofNullable(this.baseUrl);
    }
    /**
     * @return Azure client ID to use (string)
     * 
     */
    public String clientId() {
        return this.clientId;
    }
    /**
     * @return Azure client secret associated with the \&#34;client id\&#34; (string)
     * 
     */
    public String clientSecret() {
        return this.clientSecret;
    }
    /**
     * @return The AKS node pool count. Default: `1` (int)
     * 
     */
    public Optional<Integer> count() {
        return Optional.ofNullable(this.count);
    }
    /**
     * @return An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes Service address range specified in \&#34;service cidr\&#34;. Default `10.0.0.10` (string)
     * 
     */
    public Optional<String> dnsServiceIp() {
        return Optional.ofNullable(this.dnsServiceIp);
    }
    /**
     * @return A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes Service address range specified in \&#34;service cidr\&#34;. Default `172.17.0.1/16` (string)
     * 
     */
    public Optional<String> dockerBridgeCidr() {
        return Optional.ofNullable(this.dockerBridgeCidr);
    }
    /**
     * @return Enable the Kubernetes ingress with automatic public DNS name creation. Default `false` (bool)
     * 
     */
    public Optional<Boolean> enableHttpApplicationRouting() {
        return Optional.ofNullable(this.enableHttpApplicationRouting);
    }
    /**
     * @return Turn on Azure Log Analytics monitoring. Uses the Log Analytics \&#34;Default\&#34; workspace if it exists, else creates one. if using an existing workspace, specifies \&#34;log analytics workspace resource id\&#34;. Default `true` (bool)
     * 
     */
    public Optional<Boolean> enableMonitoring() {
        return Optional.ofNullable(this.enableMonitoring);
    }
    /**
     * @return The Kubernetes version that will be used for your master *and* OKE worker nodes (string)
     * 
     */
    public String kubernetesVersion() {
        return this.kubernetesVersion;
    }
    /**
     * @return The AKS load balancer sku (string)
     * 
     */
    public Optional<String> loadBalancerSku() {
        return Optional.ofNullable(this.loadBalancerSku);
    }
    /**
     * @return Azure Kubernetes cluster location. Default `eastus` (string)
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return The name of an existing Azure Log Analytics Workspace to use for storing monitoring data. If not specified, uses &#39;{resource group}-{subscription id}-{location code}&#39; (string)
     * 
     */
    public Optional<String> logAnalyticsWorkspace() {
        return Optional.ofNullable(this.logAnalyticsWorkspace);
    }
    /**
     * @return The resource group of an existing Azure Log Analytics Workspace to use for storing monitoring data. If not specified, uses the &#39;Cluster&#39; resource group (string)
     * 
     */
    public Optional<String> logAnalyticsWorkspaceResourceGroup() {
        return Optional.ofNullable(this.logAnalyticsWorkspaceResourceGroup);
    }
    /**
     * @return DNS prefix to use the Kubernetes cluster control pane (string)
     * 
     */
    public String masterDnsPrefix() {
        return this.masterDnsPrefix;
    }
    /**
     * @return The AKS node pool max pods. Default: `110` (int)
     * 
     */
    public Optional<Integer> maxPods() {
        return Optional.ofNullable(this.maxPods);
    }
    /**
     * @return The AKS network plugin. Required if `imported=false` (string)
     * 
     */
    public Optional<String> networkPlugin() {
        return Optional.ofNullable(this.networkPlugin);
    }
    /**
     * @return The AKS network policy (string)
     * 
     */
    public Optional<String> networkPolicy() {
        return Optional.ofNullable(this.networkPolicy);
    }
    /**
     * @return A CIDR IP range from which to assign Kubernetes Pod IPs (string)
     * 
     */
    public Optional<String> podCidr() {
        return Optional.ofNullable(this.podCidr);
    }
    /**
     * @return The AKS resource group (string)
     * 
     */
    public String resourceGroup() {
        return this.resourceGroup;
    }
    /**
     * @return A CIDR IP range from which to assign Kubernetes Service IPs (string)
     * 
     */
    public Optional<String> serviceCidr() {
        return Optional.ofNullable(this.serviceCidr);
    }
    /**
     * @return Contents of the SSH public key used to authenticate with Linux hosts (string)
     * 
     */
    public String sshPublicKeyContents() {
        return this.sshPublicKeyContents;
    }
    /**
     * @return The AKS subnet (string)
     * 
     */
    public String subnet() {
        return this.subnet;
    }
    /**
     * @return Subscription credentials which uniquely identify Microsoft Azure subscription (string)
     * 
     */
    public String subscriptionId() {
        return this.subscriptionId;
    }
    /**
     * @return Use `tags` argument instead as []string
     * 
     * @deprecated
     * Use tags argument instead as []string
     * 
     */
    @Deprecated /* Use tags argument instead as []string */
    public Map<String,Object> tag() {
        return this.tag == null ? Map.of() : this.tag;
    }
    /**
     * @return The GKE node config tags (List)
     * 
     */
    public List<String> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * @return Azure tenant ID to use (string)
     * 
     */
    public String tenantId() {
        return this.tenantId;
    }
    /**
     * @return The name of the virtual network to use. If it&#39;s not specified Rancher will create a new VPC (string)
     * 
     */
    public String virtualNetwork() {
        return this.virtualNetwork;
    }
    /**
     * @return The AKS virtual network resource group (string)
     * 
     */
    public String virtualNetworkResourceGroup() {
        return this.virtualNetworkResourceGroup;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterAksConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String aadServerAppSecret;
        private @Nullable String aadTenantId;
        private @Nullable String addClientAppId;
        private @Nullable String addServerAppId;
        private @Nullable String adminUsername;
        private String agentDnsPrefix;
        private @Nullable Integer agentOsDiskSize;
        private @Nullable String agentPoolName;
        private @Nullable String agentStorageProfile;
        private @Nullable String agentVmSize;
        private @Nullable String authBaseUrl;
        private @Nullable String baseUrl;
        private String clientId;
        private String clientSecret;
        private @Nullable Integer count;
        private @Nullable String dnsServiceIp;
        private @Nullable String dockerBridgeCidr;
        private @Nullable Boolean enableHttpApplicationRouting;
        private @Nullable Boolean enableMonitoring;
        private String kubernetesVersion;
        private @Nullable String loadBalancerSku;
        private @Nullable String location;
        private @Nullable String logAnalyticsWorkspace;
        private @Nullable String logAnalyticsWorkspaceResourceGroup;
        private String masterDnsPrefix;
        private @Nullable Integer maxPods;
        private @Nullable String networkPlugin;
        private @Nullable String networkPolicy;
        private @Nullable String podCidr;
        private String resourceGroup;
        private @Nullable String serviceCidr;
        private String sshPublicKeyContents;
        private String subnet;
        private String subscriptionId;
        private @Nullable Map<String,Object> tag;
        private @Nullable List<String> tags;
        private String tenantId;
        private String virtualNetwork;
        private String virtualNetworkResourceGroup;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterAksConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aadServerAppSecret = defaults.aadServerAppSecret;
    	      this.aadTenantId = defaults.aadTenantId;
    	      this.addClientAppId = defaults.addClientAppId;
    	      this.addServerAppId = defaults.addServerAppId;
    	      this.adminUsername = defaults.adminUsername;
    	      this.agentDnsPrefix = defaults.agentDnsPrefix;
    	      this.agentOsDiskSize = defaults.agentOsDiskSize;
    	      this.agentPoolName = defaults.agentPoolName;
    	      this.agentStorageProfile = defaults.agentStorageProfile;
    	      this.agentVmSize = defaults.agentVmSize;
    	      this.authBaseUrl = defaults.authBaseUrl;
    	      this.baseUrl = defaults.baseUrl;
    	      this.clientId = defaults.clientId;
    	      this.clientSecret = defaults.clientSecret;
    	      this.count = defaults.count;
    	      this.dnsServiceIp = defaults.dnsServiceIp;
    	      this.dockerBridgeCidr = defaults.dockerBridgeCidr;
    	      this.enableHttpApplicationRouting = defaults.enableHttpApplicationRouting;
    	      this.enableMonitoring = defaults.enableMonitoring;
    	      this.kubernetesVersion = defaults.kubernetesVersion;
    	      this.loadBalancerSku = defaults.loadBalancerSku;
    	      this.location = defaults.location;
    	      this.logAnalyticsWorkspace = defaults.logAnalyticsWorkspace;
    	      this.logAnalyticsWorkspaceResourceGroup = defaults.logAnalyticsWorkspaceResourceGroup;
    	      this.masterDnsPrefix = defaults.masterDnsPrefix;
    	      this.maxPods = defaults.maxPods;
    	      this.networkPlugin = defaults.networkPlugin;
    	      this.networkPolicy = defaults.networkPolicy;
    	      this.podCidr = defaults.podCidr;
    	      this.resourceGroup = defaults.resourceGroup;
    	      this.serviceCidr = defaults.serviceCidr;
    	      this.sshPublicKeyContents = defaults.sshPublicKeyContents;
    	      this.subnet = defaults.subnet;
    	      this.subscriptionId = defaults.subscriptionId;
    	      this.tag = defaults.tag;
    	      this.tags = defaults.tags;
    	      this.tenantId = defaults.tenantId;
    	      this.virtualNetwork = defaults.virtualNetwork;
    	      this.virtualNetworkResourceGroup = defaults.virtualNetworkResourceGroup;
        }

        public Builder aadServerAppSecret(@Nullable String aadServerAppSecret) {
            this.aadServerAppSecret = aadServerAppSecret;
            return this;
        }
        public Builder aadTenantId(@Nullable String aadTenantId) {
            this.aadTenantId = aadTenantId;
            return this;
        }
        public Builder addClientAppId(@Nullable String addClientAppId) {
            this.addClientAppId = addClientAppId;
            return this;
        }
        public Builder addServerAppId(@Nullable String addServerAppId) {
            this.addServerAppId = addServerAppId;
            return this;
        }
        public Builder adminUsername(@Nullable String adminUsername) {
            this.adminUsername = adminUsername;
            return this;
        }
        public Builder agentDnsPrefix(String agentDnsPrefix) {
            this.agentDnsPrefix = Objects.requireNonNull(agentDnsPrefix);
            return this;
        }
        public Builder agentOsDiskSize(@Nullable Integer agentOsDiskSize) {
            this.agentOsDiskSize = agentOsDiskSize;
            return this;
        }
        public Builder agentPoolName(@Nullable String agentPoolName) {
            this.agentPoolName = agentPoolName;
            return this;
        }
        public Builder agentStorageProfile(@Nullable String agentStorageProfile) {
            this.agentStorageProfile = agentStorageProfile;
            return this;
        }
        public Builder agentVmSize(@Nullable String agentVmSize) {
            this.agentVmSize = agentVmSize;
            return this;
        }
        public Builder authBaseUrl(@Nullable String authBaseUrl) {
            this.authBaseUrl = authBaseUrl;
            return this;
        }
        public Builder baseUrl(@Nullable String baseUrl) {
            this.baseUrl = baseUrl;
            return this;
        }
        public Builder clientId(String clientId) {
            this.clientId = Objects.requireNonNull(clientId);
            return this;
        }
        public Builder clientSecret(String clientSecret) {
            this.clientSecret = Objects.requireNonNull(clientSecret);
            return this;
        }
        public Builder count(@Nullable Integer count) {
            this.count = count;
            return this;
        }
        public Builder dnsServiceIp(@Nullable String dnsServiceIp) {
            this.dnsServiceIp = dnsServiceIp;
            return this;
        }
        public Builder dockerBridgeCidr(@Nullable String dockerBridgeCidr) {
            this.dockerBridgeCidr = dockerBridgeCidr;
            return this;
        }
        public Builder enableHttpApplicationRouting(@Nullable Boolean enableHttpApplicationRouting) {
            this.enableHttpApplicationRouting = enableHttpApplicationRouting;
            return this;
        }
        public Builder enableMonitoring(@Nullable Boolean enableMonitoring) {
            this.enableMonitoring = enableMonitoring;
            return this;
        }
        public Builder kubernetesVersion(String kubernetesVersion) {
            this.kubernetesVersion = Objects.requireNonNull(kubernetesVersion);
            return this;
        }
        public Builder loadBalancerSku(@Nullable String loadBalancerSku) {
            this.loadBalancerSku = loadBalancerSku;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        public Builder logAnalyticsWorkspace(@Nullable String logAnalyticsWorkspace) {
            this.logAnalyticsWorkspace = logAnalyticsWorkspace;
            return this;
        }
        public Builder logAnalyticsWorkspaceResourceGroup(@Nullable String logAnalyticsWorkspaceResourceGroup) {
            this.logAnalyticsWorkspaceResourceGroup = logAnalyticsWorkspaceResourceGroup;
            return this;
        }
        public Builder masterDnsPrefix(String masterDnsPrefix) {
            this.masterDnsPrefix = Objects.requireNonNull(masterDnsPrefix);
            return this;
        }
        public Builder maxPods(@Nullable Integer maxPods) {
            this.maxPods = maxPods;
            return this;
        }
        public Builder networkPlugin(@Nullable String networkPlugin) {
            this.networkPlugin = networkPlugin;
            return this;
        }
        public Builder networkPolicy(@Nullable String networkPolicy) {
            this.networkPolicy = networkPolicy;
            return this;
        }
        public Builder podCidr(@Nullable String podCidr) {
            this.podCidr = podCidr;
            return this;
        }
        public Builder resourceGroup(String resourceGroup) {
            this.resourceGroup = Objects.requireNonNull(resourceGroup);
            return this;
        }
        public Builder serviceCidr(@Nullable String serviceCidr) {
            this.serviceCidr = serviceCidr;
            return this;
        }
        public Builder sshPublicKeyContents(String sshPublicKeyContents) {
            this.sshPublicKeyContents = Objects.requireNonNull(sshPublicKeyContents);
            return this;
        }
        public Builder subnet(String subnet) {
            this.subnet = Objects.requireNonNull(subnet);
            return this;
        }
        public Builder subscriptionId(String subscriptionId) {
            this.subscriptionId = Objects.requireNonNull(subscriptionId);
            return this;
        }
        public Builder tag(@Nullable Map<String,Object> tag) {
            this.tag = tag;
            return this;
        }
        public Builder tags(@Nullable List<String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        public Builder tenantId(String tenantId) {
            this.tenantId = Objects.requireNonNull(tenantId);
            return this;
        }
        public Builder virtualNetwork(String virtualNetwork) {
            this.virtualNetwork = Objects.requireNonNull(virtualNetwork);
            return this;
        }
        public Builder virtualNetworkResourceGroup(String virtualNetworkResourceGroup) {
            this.virtualNetworkResourceGroup = Objects.requireNonNull(virtualNetworkResourceGroup);
            return this;
        }        public ClusterAksConfig build() {
            return new ClusterAksConfig(aadServerAppSecret, aadTenantId, addClientAppId, addServerAppId, adminUsername, agentDnsPrefix, agentOsDiskSize, agentPoolName, agentStorageProfile, agentVmSize, authBaseUrl, baseUrl, clientId, clientSecret, count, dnsServiceIp, dockerBridgeCidr, enableHttpApplicationRouting, enableMonitoring, kubernetesVersion, loadBalancerSku, location, logAnalyticsWorkspace, logAnalyticsWorkspaceResourceGroup, masterDnsPrefix, maxPods, networkPlugin, networkPolicy, podCidr, resourceGroup, serviceCidr, sshPublicKeyContents, subnet, subscriptionId, tag, tags, tenantId, virtualNetwork, virtualNetworkResourceGroup);
        }
    }
}
