// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.rancher2.outputs.ClusterV2RkeConfigEtcdS3Config;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterV2RkeConfigEtcd {
    /**
     * @return Disable ETCD snapshots. Default: `false` (bool)
     * 
     */
    private final @Nullable Boolean disableSnapshots;
    /**
     * @return Creation option for etcd service (list maxitems:1)
     * 
     */
    private final @Nullable ClusterV2RkeConfigEtcdS3Config s3Config;
    /**
     * @return ETCD snapshot retention (int)
     * 
     */
    private final @Nullable Integer snapshotRetention;
    /**
     * @return ETCD snapshot schedule cron (e.g `\&#34;0 *{@literal /}5 * * *\&#34;`) (string)
     * 
     */
    private final @Nullable String snapshotScheduleCron;

    @CustomType.Constructor
    private ClusterV2RkeConfigEtcd(
        @CustomType.Parameter("disableSnapshots") @Nullable Boolean disableSnapshots,
        @CustomType.Parameter("s3Config") @Nullable ClusterV2RkeConfigEtcdS3Config s3Config,
        @CustomType.Parameter("snapshotRetention") @Nullable Integer snapshotRetention,
        @CustomType.Parameter("snapshotScheduleCron") @Nullable String snapshotScheduleCron) {
        this.disableSnapshots = disableSnapshots;
        this.s3Config = s3Config;
        this.snapshotRetention = snapshotRetention;
        this.snapshotScheduleCron = snapshotScheduleCron;
    }

    /**
     * @return Disable ETCD snapshots. Default: `false` (bool)
     * 
     */
    public Optional<Boolean> disableSnapshots() {
        return Optional.ofNullable(this.disableSnapshots);
    }
    /**
     * @return Creation option for etcd service (list maxitems:1)
     * 
     */
    public Optional<ClusterV2RkeConfigEtcdS3Config> s3Config() {
        return Optional.ofNullable(this.s3Config);
    }
    /**
     * @return ETCD snapshot retention (int)
     * 
     */
    public Optional<Integer> snapshotRetention() {
        return Optional.ofNullable(this.snapshotRetention);
    }
    /**
     * @return ETCD snapshot schedule cron (e.g `\&#34;0 *{@literal /}5 * * *\&#34;`) (string)
     * 
     */
    public Optional<String> snapshotScheduleCron() {
        return Optional.ofNullable(this.snapshotScheduleCron);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterV2RkeConfigEtcd defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean disableSnapshots;
        private @Nullable ClusterV2RkeConfigEtcdS3Config s3Config;
        private @Nullable Integer snapshotRetention;
        private @Nullable String snapshotScheduleCron;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterV2RkeConfigEtcd defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.disableSnapshots = defaults.disableSnapshots;
    	      this.s3Config = defaults.s3Config;
    	      this.snapshotRetention = defaults.snapshotRetention;
    	      this.snapshotScheduleCron = defaults.snapshotScheduleCron;
        }

        public Builder disableSnapshots(@Nullable Boolean disableSnapshots) {
            this.disableSnapshots = disableSnapshots;
            return this;
        }
        public Builder s3Config(@Nullable ClusterV2RkeConfigEtcdS3Config s3Config) {
            this.s3Config = s3Config;
            return this;
        }
        public Builder snapshotRetention(@Nullable Integer snapshotRetention) {
            this.snapshotRetention = snapshotRetention;
            return this;
        }
        public Builder snapshotScheduleCron(@Nullable String snapshotScheduleCron) {
            this.snapshotScheduleCron = snapshotScheduleCron;
            return this;
        }        public ClusterV2RkeConfigEtcd build() {
            return new ClusterV2RkeConfigEtcd(disableSnapshots, s3Config, snapshotRetention, snapshotScheduleCron);
        }
    }
}
