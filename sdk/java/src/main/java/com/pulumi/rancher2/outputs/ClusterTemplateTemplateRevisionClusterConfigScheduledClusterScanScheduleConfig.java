// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterTemplateTemplateRevisionClusterConfigScheduledClusterScanScheduleConfig {
    private String cronSchedule;
    private @Nullable Integer retention;

    private ClusterTemplateTemplateRevisionClusterConfigScheduledClusterScanScheduleConfig() {}
    public String cronSchedule() {
        return this.cronSchedule;
    }
    public Optional<Integer> retention() {
        return Optional.ofNullable(this.retention);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterTemplateTemplateRevisionClusterConfigScheduledClusterScanScheduleConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cronSchedule;
        private @Nullable Integer retention;
        public Builder() {}
        public Builder(ClusterTemplateTemplateRevisionClusterConfigScheduledClusterScanScheduleConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cronSchedule = defaults.cronSchedule;
    	      this.retention = defaults.retention;
        }

        @CustomType.Setter
        public Builder cronSchedule(String cronSchedule) {
            this.cronSchedule = Objects.requireNonNull(cronSchedule);
            return this;
        }
        @CustomType.Setter
        public Builder retention(@Nullable Integer retention) {
            this.retention = retention;
            return this;
        }
        public ClusterTemplateTemplateRevisionClusterConfigScheduledClusterScanScheduleConfig build() {
            final var o = new ClusterTemplateTemplateRevisionClusterConfigScheduledClusterScanScheduleConfig();
            o.cronSchedule = cronSchedule;
            o.retention = retention;
            return o;
        }
    }
}
