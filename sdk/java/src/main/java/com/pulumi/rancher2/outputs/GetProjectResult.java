// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.rancher2.outputs.GetProjectContainerResourceLimit;
import com.pulumi.rancher2.outputs.GetProjectResourceQuota;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetProjectResult {
    /**
     * @return (Computed) Annotations of the rancher2 project (map)
     * 
     */
    private final Map<String,Object> annotations;
    private final String clusterId;
    /**
     * @return (Computed) Default containers resource limits on project (List maxitem:1)
     * 
     */
    private final GetProjectContainerResourceLimit containerResourceLimit;
    /**
     * @return (Computed) The project&#39;s description (string)
     * 
     */
    private final String description;
    /**
     * @return (Computed) Enable built-in project monitoring. Default `false` (bool)
     * 
     */
    private final Boolean enableProjectMonitoring;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return (Computed) Labels of the rancher2 project (map)
     * 
     */
    private final Map<String,Object> labels;
    private final String name;
    /**
     * @return (Computed) Default Pod Security Policy ID for the project (string)
     * 
     */
    private final String podSecurityPolicyTemplateId;
    /**
     * @return (Computed) Resource quota for project. Rancher v2.1.x or higher (list maxitems:1)
     * 
     */
    private final GetProjectResourceQuota resourceQuota;
    /**
     * @return (Computed) UUID of the project as stored by Rancher 2 (string)
     * 
     */
    private final String uuid;

    @CustomType.Constructor
    private GetProjectResult(
        @CustomType.Parameter("annotations") Map<String,Object> annotations,
        @CustomType.Parameter("clusterId") String clusterId,
        @CustomType.Parameter("containerResourceLimit") GetProjectContainerResourceLimit containerResourceLimit,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("enableProjectMonitoring") Boolean enableProjectMonitoring,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("labels") Map<String,Object> labels,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("podSecurityPolicyTemplateId") String podSecurityPolicyTemplateId,
        @CustomType.Parameter("resourceQuota") GetProjectResourceQuota resourceQuota,
        @CustomType.Parameter("uuid") String uuid) {
        this.annotations = annotations;
        this.clusterId = clusterId;
        this.containerResourceLimit = containerResourceLimit;
        this.description = description;
        this.enableProjectMonitoring = enableProjectMonitoring;
        this.id = id;
        this.labels = labels;
        this.name = name;
        this.podSecurityPolicyTemplateId = podSecurityPolicyTemplateId;
        this.resourceQuota = resourceQuota;
        this.uuid = uuid;
    }

    /**
     * @return (Computed) Annotations of the rancher2 project (map)
     * 
     */
    public Map<String,Object> annotations() {
        return this.annotations;
    }
    public String clusterId() {
        return this.clusterId;
    }
    /**
     * @return (Computed) Default containers resource limits on project (List maxitem:1)
     * 
     */
    public GetProjectContainerResourceLimit containerResourceLimit() {
        return this.containerResourceLimit;
    }
    /**
     * @return (Computed) The project&#39;s description (string)
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return (Computed) Enable built-in project monitoring. Default `false` (bool)
     * 
     */
    public Boolean enableProjectMonitoring() {
        return this.enableProjectMonitoring;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return (Computed) Labels of the rancher2 project (map)
     * 
     */
    public Map<String,Object> labels() {
        return this.labels;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return (Computed) Default Pod Security Policy ID for the project (string)
     * 
     */
    public String podSecurityPolicyTemplateId() {
        return this.podSecurityPolicyTemplateId;
    }
    /**
     * @return (Computed) Resource quota for project. Rancher v2.1.x or higher (list maxitems:1)
     * 
     */
    public GetProjectResourceQuota resourceQuota() {
        return this.resourceQuota;
    }
    /**
     * @return (Computed) UUID of the project as stored by Rancher 2 (string)
     * 
     */
    public String uuid() {
        return this.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProjectResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Map<String,Object> annotations;
        private String clusterId;
        private GetProjectContainerResourceLimit containerResourceLimit;
        private String description;
        private Boolean enableProjectMonitoring;
        private String id;
        private Map<String,Object> labels;
        private String name;
        private String podSecurityPolicyTemplateId;
        private GetProjectResourceQuota resourceQuota;
        private String uuid;

        public Builder() {
    	      // Empty
        }

        public Builder(GetProjectResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.annotations = defaults.annotations;
    	      this.clusterId = defaults.clusterId;
    	      this.containerResourceLimit = defaults.containerResourceLimit;
    	      this.description = defaults.description;
    	      this.enableProjectMonitoring = defaults.enableProjectMonitoring;
    	      this.id = defaults.id;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.podSecurityPolicyTemplateId = defaults.podSecurityPolicyTemplateId;
    	      this.resourceQuota = defaults.resourceQuota;
    	      this.uuid = defaults.uuid;
        }

        public Builder annotations(Map<String,Object> annotations) {
            this.annotations = Objects.requireNonNull(annotations);
            return this;
        }
        public Builder clusterId(String clusterId) {
            this.clusterId = Objects.requireNonNull(clusterId);
            return this;
        }
        public Builder containerResourceLimit(GetProjectContainerResourceLimit containerResourceLimit) {
            this.containerResourceLimit = Objects.requireNonNull(containerResourceLimit);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder enableProjectMonitoring(Boolean enableProjectMonitoring) {
            this.enableProjectMonitoring = Objects.requireNonNull(enableProjectMonitoring);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder labels(Map<String,Object> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder podSecurityPolicyTemplateId(String podSecurityPolicyTemplateId) {
            this.podSecurityPolicyTemplateId = Objects.requireNonNull(podSecurityPolicyTemplateId);
            return this;
        }
        public Builder resourceQuota(GetProjectResourceQuota resourceQuota) {
            this.resourceQuota = Objects.requireNonNull(resourceQuota);
            return this;
        }
        public Builder uuid(String uuid) {
            this.uuid = Objects.requireNonNull(uuid);
            return this;
        }        public GetProjectResult build() {
            return new GetProjectResult(annotations, clusterId, containerResourceLimit, description, enableProjectMonitoring, id, labels, name, podSecurityPolicyTemplateId, resourceQuota, uuid);
        }
    }
}
