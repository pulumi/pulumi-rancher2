// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetProjectLoggingElasticsearchConfig {
    private final @Nullable String authPassword;
    private final @Nullable String authUsername;
    private final @Nullable String certificate;
    private final @Nullable String clientCert;
    private final @Nullable String clientKey;
    private final @Nullable String clientKeyPass;
    private final @Nullable String dateFormat;
    private final String endpoint;
    private final @Nullable String indexPrefix;
    private final Boolean sslVerify;
    private final @Nullable String sslVersion;

    @CustomType.Constructor
    private GetProjectLoggingElasticsearchConfig(
        @CustomType.Parameter("authPassword") @Nullable String authPassword,
        @CustomType.Parameter("authUsername") @Nullable String authUsername,
        @CustomType.Parameter("certificate") @Nullable String certificate,
        @CustomType.Parameter("clientCert") @Nullable String clientCert,
        @CustomType.Parameter("clientKey") @Nullable String clientKey,
        @CustomType.Parameter("clientKeyPass") @Nullable String clientKeyPass,
        @CustomType.Parameter("dateFormat") @Nullable String dateFormat,
        @CustomType.Parameter("endpoint") String endpoint,
        @CustomType.Parameter("indexPrefix") @Nullable String indexPrefix,
        @CustomType.Parameter("sslVerify") Boolean sslVerify,
        @CustomType.Parameter("sslVersion") @Nullable String sslVersion) {
        this.authPassword = authPassword;
        this.authUsername = authUsername;
        this.certificate = certificate;
        this.clientCert = clientCert;
        this.clientKey = clientKey;
        this.clientKeyPass = clientKeyPass;
        this.dateFormat = dateFormat;
        this.endpoint = endpoint;
        this.indexPrefix = indexPrefix;
        this.sslVerify = sslVerify;
        this.sslVersion = sslVersion;
    }

    public Optional<String> authPassword() {
        return Optional.ofNullable(this.authPassword);
    }
    public Optional<String> authUsername() {
        return Optional.ofNullable(this.authUsername);
    }
    public Optional<String> certificate() {
        return Optional.ofNullable(this.certificate);
    }
    public Optional<String> clientCert() {
        return Optional.ofNullable(this.clientCert);
    }
    public Optional<String> clientKey() {
        return Optional.ofNullable(this.clientKey);
    }
    public Optional<String> clientKeyPass() {
        return Optional.ofNullable(this.clientKeyPass);
    }
    public Optional<String> dateFormat() {
        return Optional.ofNullable(this.dateFormat);
    }
    public String endpoint() {
        return this.endpoint;
    }
    public Optional<String> indexPrefix() {
        return Optional.ofNullable(this.indexPrefix);
    }
    public Boolean sslVerify() {
        return this.sslVerify;
    }
    public Optional<String> sslVersion() {
        return Optional.ofNullable(this.sslVersion);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProjectLoggingElasticsearchConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String authPassword;
        private @Nullable String authUsername;
        private @Nullable String certificate;
        private @Nullable String clientCert;
        private @Nullable String clientKey;
        private @Nullable String clientKeyPass;
        private @Nullable String dateFormat;
        private String endpoint;
        private @Nullable String indexPrefix;
        private Boolean sslVerify;
        private @Nullable String sslVersion;

        public Builder() {
    	      // Empty
        }

        public Builder(GetProjectLoggingElasticsearchConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authPassword = defaults.authPassword;
    	      this.authUsername = defaults.authUsername;
    	      this.certificate = defaults.certificate;
    	      this.clientCert = defaults.clientCert;
    	      this.clientKey = defaults.clientKey;
    	      this.clientKeyPass = defaults.clientKeyPass;
    	      this.dateFormat = defaults.dateFormat;
    	      this.endpoint = defaults.endpoint;
    	      this.indexPrefix = defaults.indexPrefix;
    	      this.sslVerify = defaults.sslVerify;
    	      this.sslVersion = defaults.sslVersion;
        }

        public Builder authPassword(@Nullable String authPassword) {
            this.authPassword = authPassword;
            return this;
        }
        public Builder authUsername(@Nullable String authUsername) {
            this.authUsername = authUsername;
            return this;
        }
        public Builder certificate(@Nullable String certificate) {
            this.certificate = certificate;
            return this;
        }
        public Builder clientCert(@Nullable String clientCert) {
            this.clientCert = clientCert;
            return this;
        }
        public Builder clientKey(@Nullable String clientKey) {
            this.clientKey = clientKey;
            return this;
        }
        public Builder clientKeyPass(@Nullable String clientKeyPass) {
            this.clientKeyPass = clientKeyPass;
            return this;
        }
        public Builder dateFormat(@Nullable String dateFormat) {
            this.dateFormat = dateFormat;
            return this;
        }
        public Builder endpoint(String endpoint) {
            this.endpoint = Objects.requireNonNull(endpoint);
            return this;
        }
        public Builder indexPrefix(@Nullable String indexPrefix) {
            this.indexPrefix = indexPrefix;
            return this;
        }
        public Builder sslVerify(Boolean sslVerify) {
            this.sslVerify = Objects.requireNonNull(sslVerify);
            return this;
        }
        public Builder sslVersion(@Nullable String sslVersion) {
            this.sslVersion = sslVersion;
            return this;
        }        public GetProjectLoggingElasticsearchConfig build() {
            return new GetProjectLoggingElasticsearchConfig(authPassword, authUsername, certificate, clientCert, clientKey, clientKeyPass, dateFormat, endpoint, indexPrefix, sslVerify, sslVersion);
        }
    }
}
