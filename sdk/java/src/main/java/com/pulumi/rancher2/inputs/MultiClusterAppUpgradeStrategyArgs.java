// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.rancher2.inputs.MultiClusterAppUpgradeStrategyRollingUpdateArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MultiClusterAppUpgradeStrategyArgs extends com.pulumi.resources.ResourceArgs {

    public static final MultiClusterAppUpgradeStrategyArgs Empty = new MultiClusterAppUpgradeStrategyArgs();

    /**
     * Upgrade strategy rolling update (list MaxItems:1)
     * 
     */
    @Import(name="rollingUpdate")
    private @Nullable Output<MultiClusterAppUpgradeStrategyRollingUpdateArgs> rollingUpdate;

    /**
     * @return Upgrade strategy rolling update (list MaxItems:1)
     * 
     */
    public Optional<Output<MultiClusterAppUpgradeStrategyRollingUpdateArgs>> rollingUpdate() {
        return Optional.ofNullable(this.rollingUpdate);
    }

    private MultiClusterAppUpgradeStrategyArgs() {}

    private MultiClusterAppUpgradeStrategyArgs(MultiClusterAppUpgradeStrategyArgs $) {
        this.rollingUpdate = $.rollingUpdate;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MultiClusterAppUpgradeStrategyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MultiClusterAppUpgradeStrategyArgs $;

        public Builder() {
            $ = new MultiClusterAppUpgradeStrategyArgs();
        }

        public Builder(MultiClusterAppUpgradeStrategyArgs defaults) {
            $ = new MultiClusterAppUpgradeStrategyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param rollingUpdate Upgrade strategy rolling update (list MaxItems:1)
         * 
         * @return builder
         * 
         */
        public Builder rollingUpdate(@Nullable Output<MultiClusterAppUpgradeStrategyRollingUpdateArgs> rollingUpdate) {
            $.rollingUpdate = rollingUpdate;
            return this;
        }

        /**
         * @param rollingUpdate Upgrade strategy rolling update (list MaxItems:1)
         * 
         * @return builder
         * 
         */
        public Builder rollingUpdate(MultiClusterAppUpgradeStrategyRollingUpdateArgs rollingUpdate) {
            return rollingUpdate(Output.of(rollingUpdate));
        }

        public MultiClusterAppUpgradeStrategyArgs build() {
            return $;
        }
    }

}
