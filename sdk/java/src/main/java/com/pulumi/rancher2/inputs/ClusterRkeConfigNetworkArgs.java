// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.rancher2.inputs.ClusterRkeConfigNetworkAciNetworkProviderArgs;
import com.pulumi.rancher2.inputs.ClusterRkeConfigNetworkCalicoNetworkProviderArgs;
import com.pulumi.rancher2.inputs.ClusterRkeConfigNetworkCanalNetworkProviderArgs;
import com.pulumi.rancher2.inputs.ClusterRkeConfigNetworkFlannelNetworkProviderArgs;
import com.pulumi.rancher2.inputs.ClusterRkeConfigNetworkTolerationArgs;
import com.pulumi.rancher2.inputs.ClusterRkeConfigNetworkWeaveNetworkProviderArgs;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterRkeConfigNetworkArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterRkeConfigNetworkArgs Empty = new ClusterRkeConfigNetworkArgs();

    @Import(name="aciNetworkProvider")
    private @Nullable Output<ClusterRkeConfigNetworkAciNetworkProviderArgs> aciNetworkProvider;

    public Optional<Output<ClusterRkeConfigNetworkAciNetworkProviderArgs>> aciNetworkProvider() {
        return Optional.ofNullable(this.aciNetworkProvider);
    }

    @Import(name="calicoNetworkProvider")
    private @Nullable Output<ClusterRkeConfigNetworkCalicoNetworkProviderArgs> calicoNetworkProvider;

    public Optional<Output<ClusterRkeConfigNetworkCalicoNetworkProviderArgs>> calicoNetworkProvider() {
        return Optional.ofNullable(this.calicoNetworkProvider);
    }

    @Import(name="canalNetworkProvider")
    private @Nullable Output<ClusterRkeConfigNetworkCanalNetworkProviderArgs> canalNetworkProvider;

    public Optional<Output<ClusterRkeConfigNetworkCanalNetworkProviderArgs>> canalNetworkProvider() {
        return Optional.ofNullable(this.canalNetworkProvider);
    }

    @Import(name="flannelNetworkProvider")
    private @Nullable Output<ClusterRkeConfigNetworkFlannelNetworkProviderArgs> flannelNetworkProvider;

    public Optional<Output<ClusterRkeConfigNetworkFlannelNetworkProviderArgs>> flannelNetworkProvider() {
        return Optional.ofNullable(this.flannelNetworkProvider);
    }

    @Import(name="mtu")
    private @Nullable Output<Integer> mtu;

    public Optional<Output<Integer>> mtu() {
        return Optional.ofNullable(this.mtu);
    }

    @Import(name="options")
    private @Nullable Output<Map<String,Object>> options;

    public Optional<Output<Map<String,Object>>> options() {
        return Optional.ofNullable(this.options);
    }

    @Import(name="plugin")
    private @Nullable Output<String> plugin;

    public Optional<Output<String>> plugin() {
        return Optional.ofNullable(this.plugin);
    }

    /**
     * Network add-on tolerations
     * 
     */
    @Import(name="tolerations")
    private @Nullable Output<List<ClusterRkeConfigNetworkTolerationArgs>> tolerations;

    /**
     * @return Network add-on tolerations
     * 
     */
    public Optional<Output<List<ClusterRkeConfigNetworkTolerationArgs>>> tolerations() {
        return Optional.ofNullable(this.tolerations);
    }

    @Import(name="weaveNetworkProvider")
    private @Nullable Output<ClusterRkeConfigNetworkWeaveNetworkProviderArgs> weaveNetworkProvider;

    public Optional<Output<ClusterRkeConfigNetworkWeaveNetworkProviderArgs>> weaveNetworkProvider() {
        return Optional.ofNullable(this.weaveNetworkProvider);
    }

    private ClusterRkeConfigNetworkArgs() {}

    private ClusterRkeConfigNetworkArgs(ClusterRkeConfigNetworkArgs $) {
        this.aciNetworkProvider = $.aciNetworkProvider;
        this.calicoNetworkProvider = $.calicoNetworkProvider;
        this.canalNetworkProvider = $.canalNetworkProvider;
        this.flannelNetworkProvider = $.flannelNetworkProvider;
        this.mtu = $.mtu;
        this.options = $.options;
        this.plugin = $.plugin;
        this.tolerations = $.tolerations;
        this.weaveNetworkProvider = $.weaveNetworkProvider;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterRkeConfigNetworkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterRkeConfigNetworkArgs $;

        public Builder() {
            $ = new ClusterRkeConfigNetworkArgs();
        }

        public Builder(ClusterRkeConfigNetworkArgs defaults) {
            $ = new ClusterRkeConfigNetworkArgs(Objects.requireNonNull(defaults));
        }

        public Builder aciNetworkProvider(@Nullable Output<ClusterRkeConfigNetworkAciNetworkProviderArgs> aciNetworkProvider) {
            $.aciNetworkProvider = aciNetworkProvider;
            return this;
        }

        public Builder aciNetworkProvider(ClusterRkeConfigNetworkAciNetworkProviderArgs aciNetworkProvider) {
            return aciNetworkProvider(Output.of(aciNetworkProvider));
        }

        public Builder calicoNetworkProvider(@Nullable Output<ClusterRkeConfigNetworkCalicoNetworkProviderArgs> calicoNetworkProvider) {
            $.calicoNetworkProvider = calicoNetworkProvider;
            return this;
        }

        public Builder calicoNetworkProvider(ClusterRkeConfigNetworkCalicoNetworkProviderArgs calicoNetworkProvider) {
            return calicoNetworkProvider(Output.of(calicoNetworkProvider));
        }

        public Builder canalNetworkProvider(@Nullable Output<ClusterRkeConfigNetworkCanalNetworkProviderArgs> canalNetworkProvider) {
            $.canalNetworkProvider = canalNetworkProvider;
            return this;
        }

        public Builder canalNetworkProvider(ClusterRkeConfigNetworkCanalNetworkProviderArgs canalNetworkProvider) {
            return canalNetworkProvider(Output.of(canalNetworkProvider));
        }

        public Builder flannelNetworkProvider(@Nullable Output<ClusterRkeConfigNetworkFlannelNetworkProviderArgs> flannelNetworkProvider) {
            $.flannelNetworkProvider = flannelNetworkProvider;
            return this;
        }

        public Builder flannelNetworkProvider(ClusterRkeConfigNetworkFlannelNetworkProviderArgs flannelNetworkProvider) {
            return flannelNetworkProvider(Output.of(flannelNetworkProvider));
        }

        public Builder mtu(@Nullable Output<Integer> mtu) {
            $.mtu = mtu;
            return this;
        }

        public Builder mtu(Integer mtu) {
            return mtu(Output.of(mtu));
        }

        public Builder options(@Nullable Output<Map<String,Object>> options) {
            $.options = options;
            return this;
        }

        public Builder options(Map<String,Object> options) {
            return options(Output.of(options));
        }

        public Builder plugin(@Nullable Output<String> plugin) {
            $.plugin = plugin;
            return this;
        }

        public Builder plugin(String plugin) {
            return plugin(Output.of(plugin));
        }

        /**
         * @param tolerations Network add-on tolerations
         * 
         * @return builder
         * 
         */
        public Builder tolerations(@Nullable Output<List<ClusterRkeConfigNetworkTolerationArgs>> tolerations) {
            $.tolerations = tolerations;
            return this;
        }

        /**
         * @param tolerations Network add-on tolerations
         * 
         * @return builder
         * 
         */
        public Builder tolerations(List<ClusterRkeConfigNetworkTolerationArgs> tolerations) {
            return tolerations(Output.of(tolerations));
        }

        /**
         * @param tolerations Network add-on tolerations
         * 
         * @return builder
         * 
         */
        public Builder tolerations(ClusterRkeConfigNetworkTolerationArgs... tolerations) {
            return tolerations(List.of(tolerations));
        }

        public Builder weaveNetworkProvider(@Nullable Output<ClusterRkeConfigNetworkWeaveNetworkProviderArgs> weaveNetworkProvider) {
            $.weaveNetworkProvider = weaveNetworkProvider;
            return this;
        }

        public Builder weaveNetworkProvider(ClusterRkeConfigNetworkWeaveNetworkProviderArgs weaveNetworkProvider) {
            return weaveNetworkProvider(Output.of(weaveNetworkProvider));
        }

        public ClusterRkeConfigNetworkArgs build() {
            return $;
        }
    }

}
