// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GlobalDnsProviderRoute53ConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final GlobalDnsProviderRoute53ConfigArgs Empty = new GlobalDnsProviderRoute53ConfigArgs();

    @Import(name="accessKey", required=true)
    private Output<String> accessKey;

    public Output<String> accessKey() {
        return this.accessKey;
    }

    @Import(name="credentialsPath")
    private @Nullable Output<String> credentialsPath;

    public Optional<Output<String>> credentialsPath() {
        return Optional.ofNullable(this.credentialsPath);
    }

    @Import(name="region")
    private @Nullable Output<String> region;

    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    @Import(name="roleArn")
    private @Nullable Output<String> roleArn;

    public Optional<Output<String>> roleArn() {
        return Optional.ofNullable(this.roleArn);
    }

    @Import(name="secretKey", required=true)
    private Output<String> secretKey;

    public Output<String> secretKey() {
        return this.secretKey;
    }

    @Import(name="zoneType")
    private @Nullable Output<String> zoneType;

    public Optional<Output<String>> zoneType() {
        return Optional.ofNullable(this.zoneType);
    }

    private GlobalDnsProviderRoute53ConfigArgs() {}

    private GlobalDnsProviderRoute53ConfigArgs(GlobalDnsProviderRoute53ConfigArgs $) {
        this.accessKey = $.accessKey;
        this.credentialsPath = $.credentialsPath;
        this.region = $.region;
        this.roleArn = $.roleArn;
        this.secretKey = $.secretKey;
        this.zoneType = $.zoneType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GlobalDnsProviderRoute53ConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GlobalDnsProviderRoute53ConfigArgs $;

        public Builder() {
            $ = new GlobalDnsProviderRoute53ConfigArgs();
        }

        public Builder(GlobalDnsProviderRoute53ConfigArgs defaults) {
            $ = new GlobalDnsProviderRoute53ConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder accessKey(Output<String> accessKey) {
            $.accessKey = accessKey;
            return this;
        }

        public Builder accessKey(String accessKey) {
            return accessKey(Output.of(accessKey));
        }

        public Builder credentialsPath(@Nullable Output<String> credentialsPath) {
            $.credentialsPath = credentialsPath;
            return this;
        }

        public Builder credentialsPath(String credentialsPath) {
            return credentialsPath(Output.of(credentialsPath));
        }

        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        public Builder region(String region) {
            return region(Output.of(region));
        }

        public Builder roleArn(@Nullable Output<String> roleArn) {
            $.roleArn = roleArn;
            return this;
        }

        public Builder roleArn(String roleArn) {
            return roleArn(Output.of(roleArn));
        }

        public Builder secretKey(Output<String> secretKey) {
            $.secretKey = secretKey;
            return this;
        }

        public Builder secretKey(String secretKey) {
            return secretKey(Output.of(secretKey));
        }

        public Builder zoneType(@Nullable Output<String> zoneType) {
            $.zoneType = zoneType;
            return this;
        }

        public Builder zoneType(String zoneType) {
            return zoneType(Output.of(zoneType));
        }

        public GlobalDnsProviderRoute53ConfigArgs build() {
            if ($.accessKey == null) {
                throw new MissingRequiredPropertyException("GlobalDnsProviderRoute53ConfigArgs", "accessKey");
            }
            if ($.secretKey == null) {
                throw new MissingRequiredPropertyException("GlobalDnsProviderRoute53ConfigArgs", "secretKey");
            }
            return $;
        }
    }

}
