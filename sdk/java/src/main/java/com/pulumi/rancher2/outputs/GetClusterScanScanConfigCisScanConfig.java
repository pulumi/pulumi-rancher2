// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetClusterScanScanConfigCisScanConfig {
    /**
     * @return Debug master. Default: `false` (bool)
     * 
     */
    private final @Nullable Boolean debugMaster;
    /**
     * @return Debug worker. Default: `false` (bool)
     * 
     */
    private final @Nullable Boolean debugWorker;
    /**
     * @return Override benchmark version (string)
     * 
     */
    private final @Nullable String overrideBenchmarkVersion;
    /**
     * @return Override skip (string)
     * 
     */
    private final @Nullable List<String> overrideSkips;
    /**
     * @return Cis scan profile. Allowed values: `&#34;permissive&#34; (default) || &#34;hardened&#34;` (string)
     * 
     */
    private final @Nullable String profile;

    @CustomType.Constructor
    private GetClusterScanScanConfigCisScanConfig(
        @CustomType.Parameter("debugMaster") @Nullable Boolean debugMaster,
        @CustomType.Parameter("debugWorker") @Nullable Boolean debugWorker,
        @CustomType.Parameter("overrideBenchmarkVersion") @Nullable String overrideBenchmarkVersion,
        @CustomType.Parameter("overrideSkips") @Nullable List<String> overrideSkips,
        @CustomType.Parameter("profile") @Nullable String profile) {
        this.debugMaster = debugMaster;
        this.debugWorker = debugWorker;
        this.overrideBenchmarkVersion = overrideBenchmarkVersion;
        this.overrideSkips = overrideSkips;
        this.profile = profile;
    }

    /**
     * @return Debug master. Default: `false` (bool)
     * 
     */
    public Optional<Boolean> debugMaster() {
        return Optional.ofNullable(this.debugMaster);
    }
    /**
     * @return Debug worker. Default: `false` (bool)
     * 
     */
    public Optional<Boolean> debugWorker() {
        return Optional.ofNullable(this.debugWorker);
    }
    /**
     * @return Override benchmark version (string)
     * 
     */
    public Optional<String> overrideBenchmarkVersion() {
        return Optional.ofNullable(this.overrideBenchmarkVersion);
    }
    /**
     * @return Override skip (string)
     * 
     */
    public List<String> overrideSkips() {
        return this.overrideSkips == null ? List.of() : this.overrideSkips;
    }
    /**
     * @return Cis scan profile. Allowed values: `&#34;permissive&#34; (default) || &#34;hardened&#34;` (string)
     * 
     */
    public Optional<String> profile() {
        return Optional.ofNullable(this.profile);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterScanScanConfigCisScanConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean debugMaster;
        private @Nullable Boolean debugWorker;
        private @Nullable String overrideBenchmarkVersion;
        private @Nullable List<String> overrideSkips;
        private @Nullable String profile;

        public Builder() {
    	      // Empty
        }

        public Builder(GetClusterScanScanConfigCisScanConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.debugMaster = defaults.debugMaster;
    	      this.debugWorker = defaults.debugWorker;
    	      this.overrideBenchmarkVersion = defaults.overrideBenchmarkVersion;
    	      this.overrideSkips = defaults.overrideSkips;
    	      this.profile = defaults.profile;
        }

        public Builder debugMaster(@Nullable Boolean debugMaster) {
            this.debugMaster = debugMaster;
            return this;
        }
        public Builder debugWorker(@Nullable Boolean debugWorker) {
            this.debugWorker = debugWorker;
            return this;
        }
        public Builder overrideBenchmarkVersion(@Nullable String overrideBenchmarkVersion) {
            this.overrideBenchmarkVersion = overrideBenchmarkVersion;
            return this;
        }
        public Builder overrideSkips(@Nullable List<String> overrideSkips) {
            this.overrideSkips = overrideSkips;
            return this;
        }
        public Builder overrideSkips(String... overrideSkips) {
            return overrideSkips(List.of(overrideSkips));
        }
        public Builder profile(@Nullable String profile) {
            this.profile = profile;
            return this;
        }        public GetClusterScanScanConfigCisScanConfig build() {
            return new GetClusterScanScanConfigCisScanConfig(debugMaster, debugWorker, overrideBenchmarkVersion, overrideSkips, profile);
        }
    }
}
