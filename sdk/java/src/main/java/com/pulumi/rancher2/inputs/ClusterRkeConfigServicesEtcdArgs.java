// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.rancher2.inputs.ClusterRkeConfigServicesEtcdBackupConfigArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterRkeConfigServicesEtcdArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterRkeConfigServicesEtcdArgs Empty = new ClusterRkeConfigServicesEtcdArgs();

    /**
     * Backup options for etcd service. Just for Rancher v2.2.x (list maxitems:1)
     * 
     */
    @Import(name="backupConfig")
    private @Nullable Output<ClusterRkeConfigServicesEtcdBackupConfigArgs> backupConfig;

    /**
     * @return Backup options for etcd service. Just for Rancher v2.2.x (list maxitems:1)
     * 
     */
    public Optional<Output<ClusterRkeConfigServicesEtcdBackupConfigArgs>> backupConfig() {
        return Optional.ofNullable(this.backupConfig);
    }

    /**
     * TLS CA certificate for etcd service (string)
     * 
     */
    @Import(name="caCert")
    private @Nullable Output<String> caCert;

    /**
     * @return TLS CA certificate for etcd service (string)
     * 
     */
    public Optional<Output<String>> caCert() {
        return Optional.ofNullable(this.caCert);
    }

    /**
     * TLS certificate for etcd service (string)
     * 
     */
    @Import(name="cert")
    private @Nullable Output<String> cert;

    /**
     * @return TLS certificate for etcd service (string)
     * 
     */
    public Optional<Output<String>> cert() {
        return Optional.ofNullable(this.cert);
    }

    /**
     * Creation option for etcd service (string)
     * 
     */
    @Import(name="creation")
    private @Nullable Output<String> creation;

    /**
     * @return Creation option for etcd service (string)
     * 
     */
    public Optional<Output<String>> creation() {
        return Optional.ofNullable(this.creation);
    }

    /**
     * External urls for etcd service (list)
     * 
     */
    @Import(name="externalUrls")
    private @Nullable Output<List<String>> externalUrls;

    /**
     * @return External urls for etcd service (list)
     * 
     */
    public Optional<Output<List<String>>> externalUrls() {
        return Optional.ofNullable(this.externalUrls);
    }

    /**
     * Extra arguments for RKE Ingress (map)
     * 
     */
    @Import(name="extraArgs")
    private @Nullable Output<Map<String,Object>> extraArgs;

    /**
     * @return Extra arguments for RKE Ingress (map)
     * 
     */
    public Optional<Output<Map<String,Object>>> extraArgs() {
        return Optional.ofNullable(this.extraArgs);
    }

    /**
     * Extra binds for etcd service (list)
     * 
     */
    @Import(name="extraBinds")
    private @Nullable Output<List<String>> extraBinds;

    /**
     * @return Extra binds for etcd service (list)
     * 
     */
    public Optional<Output<List<String>>> extraBinds() {
        return Optional.ofNullable(this.extraBinds);
    }

    /**
     * Extra environment for etcd service (list)
     * 
     */
    @Import(name="extraEnvs")
    private @Nullable Output<List<String>> extraEnvs;

    /**
     * @return Extra environment for etcd service (list)
     * 
     */
    public Optional<Output<List<String>>> extraEnvs() {
        return Optional.ofNullable(this.extraEnvs);
    }

    /**
     * Etcd service GID. Default: `0`. For Rancher v2.3.x or above (int)
     * 
     */
    @Import(name="gid")
    private @Nullable Output<Integer> gid;

    /**
     * @return Etcd service GID. Default: `0`. For Rancher v2.3.x or above (int)
     * 
     */
    public Optional<Output<Integer>> gid() {
        return Optional.ofNullable(this.gid);
    }

    /**
     * Docker image for etcd service (string)
     * 
     */
    @Import(name="image")
    private @Nullable Output<String> image;

    /**
     * @return Docker image for etcd service (string)
     * 
     */
    public Optional<Output<String>> image() {
        return Optional.ofNullable(this.image);
    }

    /**
     * The toleration key (string)
     * 
     */
    @Import(name="key")
    private @Nullable Output<String> key;

    /**
     * @return The toleration key (string)
     * 
     */
    public Optional<Output<String>> key() {
        return Optional.ofNullable(this.key);
    }

    /**
     * Path for etcd service (string)
     * 
     */
    @Import(name="path")
    private @Nullable Output<String> path;

    /**
     * @return Path for etcd service (string)
     * 
     */
    public Optional<Output<String>> path() {
        return Optional.ofNullable(this.path);
    }

    /**
     * Retention option for etcd service (string)
     * 
     */
    @Import(name="retention")
    private @Nullable Output<String> retention;

    /**
     * @return Retention option for etcd service (string)
     * 
     */
    public Optional<Output<String>> retention() {
        return Optional.ofNullable(this.retention);
    }

    /**
     * Snapshot option for etcd service (bool)
     * 
     */
    @Import(name="snapshot")
    private @Nullable Output<Boolean> snapshot;

    /**
     * @return Snapshot option for etcd service (bool)
     * 
     */
    public Optional<Output<Boolean>> snapshot() {
        return Optional.ofNullable(this.snapshot);
    }

    /**
     * Etcd service UID. Default: `0`. For Rancher v2.3.x or above (int)
     * 
     */
    @Import(name="uid")
    private @Nullable Output<Integer> uid;

    /**
     * @return Etcd service UID. Default: `0`. For Rancher v2.3.x or above (int)
     * 
     */
    public Optional<Output<Integer>> uid() {
        return Optional.ofNullable(this.uid);
    }

    private ClusterRkeConfigServicesEtcdArgs() {}

    private ClusterRkeConfigServicesEtcdArgs(ClusterRkeConfigServicesEtcdArgs $) {
        this.backupConfig = $.backupConfig;
        this.caCert = $.caCert;
        this.cert = $.cert;
        this.creation = $.creation;
        this.externalUrls = $.externalUrls;
        this.extraArgs = $.extraArgs;
        this.extraBinds = $.extraBinds;
        this.extraEnvs = $.extraEnvs;
        this.gid = $.gid;
        this.image = $.image;
        this.key = $.key;
        this.path = $.path;
        this.retention = $.retention;
        this.snapshot = $.snapshot;
        this.uid = $.uid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterRkeConfigServicesEtcdArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterRkeConfigServicesEtcdArgs $;

        public Builder() {
            $ = new ClusterRkeConfigServicesEtcdArgs();
        }

        public Builder(ClusterRkeConfigServicesEtcdArgs defaults) {
            $ = new ClusterRkeConfigServicesEtcdArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backupConfig Backup options for etcd service. Just for Rancher v2.2.x (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder backupConfig(@Nullable Output<ClusterRkeConfigServicesEtcdBackupConfigArgs> backupConfig) {
            $.backupConfig = backupConfig;
            return this;
        }

        /**
         * @param backupConfig Backup options for etcd service. Just for Rancher v2.2.x (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder backupConfig(ClusterRkeConfigServicesEtcdBackupConfigArgs backupConfig) {
            return backupConfig(Output.of(backupConfig));
        }

        /**
         * @param caCert TLS CA certificate for etcd service (string)
         * 
         * @return builder
         * 
         */
        public Builder caCert(@Nullable Output<String> caCert) {
            $.caCert = caCert;
            return this;
        }

        /**
         * @param caCert TLS CA certificate for etcd service (string)
         * 
         * @return builder
         * 
         */
        public Builder caCert(String caCert) {
            return caCert(Output.of(caCert));
        }

        /**
         * @param cert TLS certificate for etcd service (string)
         * 
         * @return builder
         * 
         */
        public Builder cert(@Nullable Output<String> cert) {
            $.cert = cert;
            return this;
        }

        /**
         * @param cert TLS certificate for etcd service (string)
         * 
         * @return builder
         * 
         */
        public Builder cert(String cert) {
            return cert(Output.of(cert));
        }

        /**
         * @param creation Creation option for etcd service (string)
         * 
         * @return builder
         * 
         */
        public Builder creation(@Nullable Output<String> creation) {
            $.creation = creation;
            return this;
        }

        /**
         * @param creation Creation option for etcd service (string)
         * 
         * @return builder
         * 
         */
        public Builder creation(String creation) {
            return creation(Output.of(creation));
        }

        /**
         * @param externalUrls External urls for etcd service (list)
         * 
         * @return builder
         * 
         */
        public Builder externalUrls(@Nullable Output<List<String>> externalUrls) {
            $.externalUrls = externalUrls;
            return this;
        }

        /**
         * @param externalUrls External urls for etcd service (list)
         * 
         * @return builder
         * 
         */
        public Builder externalUrls(List<String> externalUrls) {
            return externalUrls(Output.of(externalUrls));
        }

        /**
         * @param externalUrls External urls for etcd service (list)
         * 
         * @return builder
         * 
         */
        public Builder externalUrls(String... externalUrls) {
            return externalUrls(List.of(externalUrls));
        }

        /**
         * @param extraArgs Extra arguments for RKE Ingress (map)
         * 
         * @return builder
         * 
         */
        public Builder extraArgs(@Nullable Output<Map<String,Object>> extraArgs) {
            $.extraArgs = extraArgs;
            return this;
        }

        /**
         * @param extraArgs Extra arguments for RKE Ingress (map)
         * 
         * @return builder
         * 
         */
        public Builder extraArgs(Map<String,Object> extraArgs) {
            return extraArgs(Output.of(extraArgs));
        }

        /**
         * @param extraBinds Extra binds for etcd service (list)
         * 
         * @return builder
         * 
         */
        public Builder extraBinds(@Nullable Output<List<String>> extraBinds) {
            $.extraBinds = extraBinds;
            return this;
        }

        /**
         * @param extraBinds Extra binds for etcd service (list)
         * 
         * @return builder
         * 
         */
        public Builder extraBinds(List<String> extraBinds) {
            return extraBinds(Output.of(extraBinds));
        }

        /**
         * @param extraBinds Extra binds for etcd service (list)
         * 
         * @return builder
         * 
         */
        public Builder extraBinds(String... extraBinds) {
            return extraBinds(List.of(extraBinds));
        }

        /**
         * @param extraEnvs Extra environment for etcd service (list)
         * 
         * @return builder
         * 
         */
        public Builder extraEnvs(@Nullable Output<List<String>> extraEnvs) {
            $.extraEnvs = extraEnvs;
            return this;
        }

        /**
         * @param extraEnvs Extra environment for etcd service (list)
         * 
         * @return builder
         * 
         */
        public Builder extraEnvs(List<String> extraEnvs) {
            return extraEnvs(Output.of(extraEnvs));
        }

        /**
         * @param extraEnvs Extra environment for etcd service (list)
         * 
         * @return builder
         * 
         */
        public Builder extraEnvs(String... extraEnvs) {
            return extraEnvs(List.of(extraEnvs));
        }

        /**
         * @param gid Etcd service GID. Default: `0`. For Rancher v2.3.x or above (int)
         * 
         * @return builder
         * 
         */
        public Builder gid(@Nullable Output<Integer> gid) {
            $.gid = gid;
            return this;
        }

        /**
         * @param gid Etcd service GID. Default: `0`. For Rancher v2.3.x or above (int)
         * 
         * @return builder
         * 
         */
        public Builder gid(Integer gid) {
            return gid(Output.of(gid));
        }

        /**
         * @param image Docker image for etcd service (string)
         * 
         * @return builder
         * 
         */
        public Builder image(@Nullable Output<String> image) {
            $.image = image;
            return this;
        }

        /**
         * @param image Docker image for etcd service (string)
         * 
         * @return builder
         * 
         */
        public Builder image(String image) {
            return image(Output.of(image));
        }

        /**
         * @param key The toleration key (string)
         * 
         * @return builder
         * 
         */
        public Builder key(@Nullable Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key The toleration key (string)
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        /**
         * @param path Path for etcd service (string)
         * 
         * @return builder
         * 
         */
        public Builder path(@Nullable Output<String> path) {
            $.path = path;
            return this;
        }

        /**
         * @param path Path for etcd service (string)
         * 
         * @return builder
         * 
         */
        public Builder path(String path) {
            return path(Output.of(path));
        }

        /**
         * @param retention Retention option for etcd service (string)
         * 
         * @return builder
         * 
         */
        public Builder retention(@Nullable Output<String> retention) {
            $.retention = retention;
            return this;
        }

        /**
         * @param retention Retention option for etcd service (string)
         * 
         * @return builder
         * 
         */
        public Builder retention(String retention) {
            return retention(Output.of(retention));
        }

        /**
         * @param snapshot Snapshot option for etcd service (bool)
         * 
         * @return builder
         * 
         */
        public Builder snapshot(@Nullable Output<Boolean> snapshot) {
            $.snapshot = snapshot;
            return this;
        }

        /**
         * @param snapshot Snapshot option for etcd service (bool)
         * 
         * @return builder
         * 
         */
        public Builder snapshot(Boolean snapshot) {
            return snapshot(Output.of(snapshot));
        }

        /**
         * @param uid Etcd service UID. Default: `0`. For Rancher v2.3.x or above (int)
         * 
         * @return builder
         * 
         */
        public Builder uid(@Nullable Output<Integer> uid) {
            $.uid = uid;
            return this;
        }

        /**
         * @param uid Etcd service UID. Default: `0`. For Rancher v2.3.x or above (int)
         * 
         * @return builder
         * 
         */
        public Builder uid(Integer uid) {
            return uid(Output.of(uid));
        }

        public ClusterRkeConfigServicesEtcdArgs build() {
            return $;
        }
    }

}
