// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.rancher2.outputs.GetClusterEksConfigV2NodeGroup;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetClusterEksConfigV2 {
    private String cloudCredentialId;
    private @Nullable Boolean imported;
    private @Nullable String kmsKey;
    private String kubernetesVersion;
    private @Nullable List<String> loggingTypes;
    /**
     * @return The name of the Cluster (string)
     * 
     */
    private String name;
    private List<GetClusterEksConfigV2NodeGroup> nodeGroups;
    private Boolean privateAccess;
    private Boolean publicAccess;
    private List<String> publicAccessSources;
    private @Nullable String region;
    private Boolean secretsEncryption;
    private @Nullable List<String> securityGroups;
    private @Nullable String serviceRole;
    private @Nullable List<String> subnets;
    private @Nullable Map<String,Object> tags;

    private GetClusterEksConfigV2() {}
    public String cloudCredentialId() {
        return this.cloudCredentialId;
    }
    public Optional<Boolean> imported() {
        return Optional.ofNullable(this.imported);
    }
    public Optional<String> kmsKey() {
        return Optional.ofNullable(this.kmsKey);
    }
    public String kubernetesVersion() {
        return this.kubernetesVersion;
    }
    public List<String> loggingTypes() {
        return this.loggingTypes == null ? List.of() : this.loggingTypes;
    }
    /**
     * @return The name of the Cluster (string)
     * 
     */
    public String name() {
        return this.name;
    }
    public List<GetClusterEksConfigV2NodeGroup> nodeGroups() {
        return this.nodeGroups;
    }
    public Boolean privateAccess() {
        return this.privateAccess;
    }
    public Boolean publicAccess() {
        return this.publicAccess;
    }
    public List<String> publicAccessSources() {
        return this.publicAccessSources;
    }
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    public Boolean secretsEncryption() {
        return this.secretsEncryption;
    }
    public List<String> securityGroups() {
        return this.securityGroups == null ? List.of() : this.securityGroups;
    }
    public Optional<String> serviceRole() {
        return Optional.ofNullable(this.serviceRole);
    }
    public List<String> subnets() {
        return this.subnets == null ? List.of() : this.subnets;
    }
    public Map<String,Object> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterEksConfigV2 defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cloudCredentialId;
        private @Nullable Boolean imported;
        private @Nullable String kmsKey;
        private String kubernetesVersion;
        private @Nullable List<String> loggingTypes;
        private String name;
        private List<GetClusterEksConfigV2NodeGroup> nodeGroups;
        private Boolean privateAccess;
        private Boolean publicAccess;
        private List<String> publicAccessSources;
        private @Nullable String region;
        private Boolean secretsEncryption;
        private @Nullable List<String> securityGroups;
        private @Nullable String serviceRole;
        private @Nullable List<String> subnets;
        private @Nullable Map<String,Object> tags;
        public Builder() {}
        public Builder(GetClusterEksConfigV2 defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudCredentialId = defaults.cloudCredentialId;
    	      this.imported = defaults.imported;
    	      this.kmsKey = defaults.kmsKey;
    	      this.kubernetesVersion = defaults.kubernetesVersion;
    	      this.loggingTypes = defaults.loggingTypes;
    	      this.name = defaults.name;
    	      this.nodeGroups = defaults.nodeGroups;
    	      this.privateAccess = defaults.privateAccess;
    	      this.publicAccess = defaults.publicAccess;
    	      this.publicAccessSources = defaults.publicAccessSources;
    	      this.region = defaults.region;
    	      this.secretsEncryption = defaults.secretsEncryption;
    	      this.securityGroups = defaults.securityGroups;
    	      this.serviceRole = defaults.serviceRole;
    	      this.subnets = defaults.subnets;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder cloudCredentialId(String cloudCredentialId) {
            this.cloudCredentialId = Objects.requireNonNull(cloudCredentialId);
            return this;
        }
        @CustomType.Setter
        public Builder imported(@Nullable Boolean imported) {
            this.imported = imported;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKey(@Nullable String kmsKey) {
            this.kmsKey = kmsKey;
            return this;
        }
        @CustomType.Setter
        public Builder kubernetesVersion(String kubernetesVersion) {
            this.kubernetesVersion = Objects.requireNonNull(kubernetesVersion);
            return this;
        }
        @CustomType.Setter
        public Builder loggingTypes(@Nullable List<String> loggingTypes) {
            this.loggingTypes = loggingTypes;
            return this;
        }
        public Builder loggingTypes(String... loggingTypes) {
            return loggingTypes(List.of(loggingTypes));
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder nodeGroups(List<GetClusterEksConfigV2NodeGroup> nodeGroups) {
            this.nodeGroups = Objects.requireNonNull(nodeGroups);
            return this;
        }
        public Builder nodeGroups(GetClusterEksConfigV2NodeGroup... nodeGroups) {
            return nodeGroups(List.of(nodeGroups));
        }
        @CustomType.Setter
        public Builder privateAccess(Boolean privateAccess) {
            this.privateAccess = Objects.requireNonNull(privateAccess);
            return this;
        }
        @CustomType.Setter
        public Builder publicAccess(Boolean publicAccess) {
            this.publicAccess = Objects.requireNonNull(publicAccess);
            return this;
        }
        @CustomType.Setter
        public Builder publicAccessSources(List<String> publicAccessSources) {
            this.publicAccessSources = Objects.requireNonNull(publicAccessSources);
            return this;
        }
        public Builder publicAccessSources(String... publicAccessSources) {
            return publicAccessSources(List.of(publicAccessSources));
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder secretsEncryption(Boolean secretsEncryption) {
            this.secretsEncryption = Objects.requireNonNull(secretsEncryption);
            return this;
        }
        @CustomType.Setter
        public Builder securityGroups(@Nullable List<String> securityGroups) {
            this.securityGroups = securityGroups;
            return this;
        }
        public Builder securityGroups(String... securityGroups) {
            return securityGroups(List.of(securityGroups));
        }
        @CustomType.Setter
        public Builder serviceRole(@Nullable String serviceRole) {
            this.serviceRole = serviceRole;
            return this;
        }
        @CustomType.Setter
        public Builder subnets(@Nullable List<String> subnets) {
            this.subnets = subnets;
            return this;
        }
        public Builder subnets(String... subnets) {
            return subnets(List.of(subnets));
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,Object> tags) {
            this.tags = tags;
            return this;
        }
        public GetClusterEksConfigV2 build() {
            final var _resultValue = new GetClusterEksConfigV2();
            _resultValue.cloudCredentialId = cloudCredentialId;
            _resultValue.imported = imported;
            _resultValue.kmsKey = kmsKey;
            _resultValue.kubernetesVersion = kubernetesVersion;
            _resultValue.loggingTypes = loggingTypes;
            _resultValue.name = name;
            _resultValue.nodeGroups = nodeGroups;
            _resultValue.privateAccess = privateAccess;
            _resultValue.publicAccess = publicAccess;
            _resultValue.publicAccessSources = publicAccessSources;
            _resultValue.region = region;
            _resultValue.secretsEncryption = secretsEncryption;
            _resultValue.securityGroups = securityGroups;
            _resultValue.serviceRole = serviceRole;
            _resultValue.subnets = subnets;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
