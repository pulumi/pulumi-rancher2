// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.rancher2.outputs.ClusterTemplateTemplateRevisionClusterConfigClusterAuthEndpoint;
import com.pulumi.rancher2.outputs.ClusterTemplateTemplateRevisionClusterConfigRkeConfig;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterTemplateTemplateRevisionClusterConfig {
    /**
     * @return Local cluster auth endpoint
     * 
     */
    private @Nullable ClusterTemplateTemplateRevisionClusterConfigClusterAuthEndpoint clusterAuthEndpoint;
    /**
     * @return Default cluster role for project members
     * 
     */
    private @Nullable String defaultClusterRoleForProjectMembers;
    /**
     * @return Default pod security admission configuration template name
     * 
     */
    private @Nullable String defaultPodSecurityAdmissionConfigurationTemplateName;
    /**
     * @return Desired agent image
     * 
     */
    private @Nullable String desiredAgentImage;
    /**
     * @return Desired auth image
     * 
     */
    private @Nullable String desiredAuthImage;
    /**
     * @return Docker Root Dir
     * 
     */
    private @Nullable String dockerRootDir;
    /**
     * @return Enable project network isolation
     * 
     */
    private @Nullable Boolean enableNetworkPolicy;
    /**
     * @return Rancher Kubernetes Engine Config
     * 
     */
    private ClusterTemplateTemplateRevisionClusterConfigRkeConfig rkeConfig;
    /**
     * @return Windows prefered cluster
     * 
     */
    private @Nullable Boolean windowsPreferedCluster;

    private ClusterTemplateTemplateRevisionClusterConfig() {}
    /**
     * @return Local cluster auth endpoint
     * 
     */
    public Optional<ClusterTemplateTemplateRevisionClusterConfigClusterAuthEndpoint> clusterAuthEndpoint() {
        return Optional.ofNullable(this.clusterAuthEndpoint);
    }
    /**
     * @return Default cluster role for project members
     * 
     */
    public Optional<String> defaultClusterRoleForProjectMembers() {
        return Optional.ofNullable(this.defaultClusterRoleForProjectMembers);
    }
    /**
     * @return Default pod security admission configuration template name
     * 
     */
    public Optional<String> defaultPodSecurityAdmissionConfigurationTemplateName() {
        return Optional.ofNullable(this.defaultPodSecurityAdmissionConfigurationTemplateName);
    }
    /**
     * @return Desired agent image
     * 
     */
    public Optional<String> desiredAgentImage() {
        return Optional.ofNullable(this.desiredAgentImage);
    }
    /**
     * @return Desired auth image
     * 
     */
    public Optional<String> desiredAuthImage() {
        return Optional.ofNullable(this.desiredAuthImage);
    }
    /**
     * @return Docker Root Dir
     * 
     */
    public Optional<String> dockerRootDir() {
        return Optional.ofNullable(this.dockerRootDir);
    }
    /**
     * @return Enable project network isolation
     * 
     */
    public Optional<Boolean> enableNetworkPolicy() {
        return Optional.ofNullable(this.enableNetworkPolicy);
    }
    /**
     * @return Rancher Kubernetes Engine Config
     * 
     */
    public ClusterTemplateTemplateRevisionClusterConfigRkeConfig rkeConfig() {
        return this.rkeConfig;
    }
    /**
     * @return Windows prefered cluster
     * 
     */
    public Optional<Boolean> windowsPreferedCluster() {
        return Optional.ofNullable(this.windowsPreferedCluster);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterTemplateTemplateRevisionClusterConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ClusterTemplateTemplateRevisionClusterConfigClusterAuthEndpoint clusterAuthEndpoint;
        private @Nullable String defaultClusterRoleForProjectMembers;
        private @Nullable String defaultPodSecurityAdmissionConfigurationTemplateName;
        private @Nullable String desiredAgentImage;
        private @Nullable String desiredAuthImage;
        private @Nullable String dockerRootDir;
        private @Nullable Boolean enableNetworkPolicy;
        private ClusterTemplateTemplateRevisionClusterConfigRkeConfig rkeConfig;
        private @Nullable Boolean windowsPreferedCluster;
        public Builder() {}
        public Builder(ClusterTemplateTemplateRevisionClusterConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterAuthEndpoint = defaults.clusterAuthEndpoint;
    	      this.defaultClusterRoleForProjectMembers = defaults.defaultClusterRoleForProjectMembers;
    	      this.defaultPodSecurityAdmissionConfigurationTemplateName = defaults.defaultPodSecurityAdmissionConfigurationTemplateName;
    	      this.desiredAgentImage = defaults.desiredAgentImage;
    	      this.desiredAuthImage = defaults.desiredAuthImage;
    	      this.dockerRootDir = defaults.dockerRootDir;
    	      this.enableNetworkPolicy = defaults.enableNetworkPolicy;
    	      this.rkeConfig = defaults.rkeConfig;
    	      this.windowsPreferedCluster = defaults.windowsPreferedCluster;
        }

        @CustomType.Setter
        public Builder clusterAuthEndpoint(@Nullable ClusterTemplateTemplateRevisionClusterConfigClusterAuthEndpoint clusterAuthEndpoint) {

            this.clusterAuthEndpoint = clusterAuthEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder defaultClusterRoleForProjectMembers(@Nullable String defaultClusterRoleForProjectMembers) {

            this.defaultClusterRoleForProjectMembers = defaultClusterRoleForProjectMembers;
            return this;
        }
        @CustomType.Setter
        public Builder defaultPodSecurityAdmissionConfigurationTemplateName(@Nullable String defaultPodSecurityAdmissionConfigurationTemplateName) {

            this.defaultPodSecurityAdmissionConfigurationTemplateName = defaultPodSecurityAdmissionConfigurationTemplateName;
            return this;
        }
        @CustomType.Setter
        public Builder desiredAgentImage(@Nullable String desiredAgentImage) {

            this.desiredAgentImage = desiredAgentImage;
            return this;
        }
        @CustomType.Setter
        public Builder desiredAuthImage(@Nullable String desiredAuthImage) {

            this.desiredAuthImage = desiredAuthImage;
            return this;
        }
        @CustomType.Setter
        public Builder dockerRootDir(@Nullable String dockerRootDir) {

            this.dockerRootDir = dockerRootDir;
            return this;
        }
        @CustomType.Setter
        public Builder enableNetworkPolicy(@Nullable Boolean enableNetworkPolicy) {

            this.enableNetworkPolicy = enableNetworkPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder rkeConfig(ClusterTemplateTemplateRevisionClusterConfigRkeConfig rkeConfig) {
            if (rkeConfig == null) {
              throw new MissingRequiredPropertyException("ClusterTemplateTemplateRevisionClusterConfig", "rkeConfig");
            }
            this.rkeConfig = rkeConfig;
            return this;
        }
        @CustomType.Setter
        public Builder windowsPreferedCluster(@Nullable Boolean windowsPreferedCluster) {

            this.windowsPreferedCluster = windowsPreferedCluster;
            return this;
        }
        public ClusterTemplateTemplateRevisionClusterConfig build() {
            final var _resultValue = new ClusterTemplateTemplateRevisionClusterConfig();
            _resultValue.clusterAuthEndpoint = clusterAuthEndpoint;
            _resultValue.defaultClusterRoleForProjectMembers = defaultClusterRoleForProjectMembers;
            _resultValue.defaultPodSecurityAdmissionConfigurationTemplateName = defaultPodSecurityAdmissionConfigurationTemplateName;
            _resultValue.desiredAgentImage = desiredAgentImage;
            _resultValue.desiredAuthImage = desiredAuthImage;
            _resultValue.dockerRootDir = dockerRootDir;
            _resultValue.enableNetworkPolicy = enableNetworkPolicy;
            _resultValue.rkeConfig = rkeConfig;
            _resultValue.windowsPreferedCluster = windowsPreferedCluster;
            return _resultValue;
        }
    }
}
