// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.rancher2.outputs.ClusterTemplateTemplateRevisionClusterConfigClusterAuthEndpoint;
import com.pulumi.rancher2.outputs.ClusterTemplateTemplateRevisionClusterConfigRkeConfig;
import com.pulumi.rancher2.outputs.ClusterTemplateTemplateRevisionClusterConfigScheduledClusterScan;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterTemplateTemplateRevisionClusterConfig {
    /**
     * @return Local cluster auth endpoint (list maxitems: 1)
     * 
     */
    private final @Nullable ClusterTemplateTemplateRevisionClusterConfigClusterAuthEndpoint clusterAuthEndpoint;
    /**
     * @return Default cluster role for project members (string)
     * 
     */
    private final @Nullable String defaultClusterRoleForProjectMembers;
    /**
     * @return Default pod security policy template ID (string)
     * 
     */
    private final @Nullable String defaultPodSecurityPolicyTemplateId;
    /**
     * @return Desired agent image (string)
     * 
     */
    private final @Nullable String desiredAgentImage;
    /**
     * @return Desired auth image (string)
     * 
     */
    private final @Nullable String desiredAuthImage;
    /**
     * @return Desired auth image (string)
     * 
     */
    private final @Nullable String dockerRootDir;
    /**
     * @return Enable built-in cluster alerting. Default: `false` (bool)
     * 
     */
    private final @Nullable Boolean enableClusterAlerting;
    /**
     * @return Enable built-in cluster monitoring. Default: `false` (bool)
     * 
     */
    private final @Nullable Boolean enableClusterMonitoring;
    /**
     * @return Enable project network isolation. Default: `false` (bool)
     * 
     */
    private final @Nullable Boolean enableNetworkPolicy;
    /**
     * @return Rancher Kubernetes Engine Config (list maxitems: 1)
     * 
     */
    private final ClusterTemplateTemplateRevisionClusterConfigRkeConfig rkeConfig;
    /**
     * @return Cluster scheduled cis scan. For Rancher v2.4.0 or above (List MaxItem:1)
     * 
     */
    private final @Nullable ClusterTemplateTemplateRevisionClusterConfigScheduledClusterScan scheduledClusterScan;
    /**
     * @return Windows prefered cluster. Default: `false` (bool)
     * 
     */
    private final @Nullable Boolean windowsPreferedCluster;

    @CustomType.Constructor
    private ClusterTemplateTemplateRevisionClusterConfig(
        @CustomType.Parameter("clusterAuthEndpoint") @Nullable ClusterTemplateTemplateRevisionClusterConfigClusterAuthEndpoint clusterAuthEndpoint,
        @CustomType.Parameter("defaultClusterRoleForProjectMembers") @Nullable String defaultClusterRoleForProjectMembers,
        @CustomType.Parameter("defaultPodSecurityPolicyTemplateId") @Nullable String defaultPodSecurityPolicyTemplateId,
        @CustomType.Parameter("desiredAgentImage") @Nullable String desiredAgentImage,
        @CustomType.Parameter("desiredAuthImage") @Nullable String desiredAuthImage,
        @CustomType.Parameter("dockerRootDir") @Nullable String dockerRootDir,
        @CustomType.Parameter("enableClusterAlerting") @Nullable Boolean enableClusterAlerting,
        @CustomType.Parameter("enableClusterMonitoring") @Nullable Boolean enableClusterMonitoring,
        @CustomType.Parameter("enableNetworkPolicy") @Nullable Boolean enableNetworkPolicy,
        @CustomType.Parameter("rkeConfig") ClusterTemplateTemplateRevisionClusterConfigRkeConfig rkeConfig,
        @CustomType.Parameter("scheduledClusterScan") @Nullable ClusterTemplateTemplateRevisionClusterConfigScheduledClusterScan scheduledClusterScan,
        @CustomType.Parameter("windowsPreferedCluster") @Nullable Boolean windowsPreferedCluster) {
        this.clusterAuthEndpoint = clusterAuthEndpoint;
        this.defaultClusterRoleForProjectMembers = defaultClusterRoleForProjectMembers;
        this.defaultPodSecurityPolicyTemplateId = defaultPodSecurityPolicyTemplateId;
        this.desiredAgentImage = desiredAgentImage;
        this.desiredAuthImage = desiredAuthImage;
        this.dockerRootDir = dockerRootDir;
        this.enableClusterAlerting = enableClusterAlerting;
        this.enableClusterMonitoring = enableClusterMonitoring;
        this.enableNetworkPolicy = enableNetworkPolicy;
        this.rkeConfig = rkeConfig;
        this.scheduledClusterScan = scheduledClusterScan;
        this.windowsPreferedCluster = windowsPreferedCluster;
    }

    /**
     * @return Local cluster auth endpoint (list maxitems: 1)
     * 
     */
    public Optional<ClusterTemplateTemplateRevisionClusterConfigClusterAuthEndpoint> clusterAuthEndpoint() {
        return Optional.ofNullable(this.clusterAuthEndpoint);
    }
    /**
     * @return Default cluster role for project members (string)
     * 
     */
    public Optional<String> defaultClusterRoleForProjectMembers() {
        return Optional.ofNullable(this.defaultClusterRoleForProjectMembers);
    }
    /**
     * @return Default pod security policy template ID (string)
     * 
     */
    public Optional<String> defaultPodSecurityPolicyTemplateId() {
        return Optional.ofNullable(this.defaultPodSecurityPolicyTemplateId);
    }
    /**
     * @return Desired agent image (string)
     * 
     */
    public Optional<String> desiredAgentImage() {
        return Optional.ofNullable(this.desiredAgentImage);
    }
    /**
     * @return Desired auth image (string)
     * 
     */
    public Optional<String> desiredAuthImage() {
        return Optional.ofNullable(this.desiredAuthImage);
    }
    /**
     * @return Desired auth image (string)
     * 
     */
    public Optional<String> dockerRootDir() {
        return Optional.ofNullable(this.dockerRootDir);
    }
    /**
     * @return Enable built-in cluster alerting. Default: `false` (bool)
     * 
     */
    public Optional<Boolean> enableClusterAlerting() {
        return Optional.ofNullable(this.enableClusterAlerting);
    }
    /**
     * @return Enable built-in cluster monitoring. Default: `false` (bool)
     * 
     */
    public Optional<Boolean> enableClusterMonitoring() {
        return Optional.ofNullable(this.enableClusterMonitoring);
    }
    /**
     * @return Enable project network isolation. Default: `false` (bool)
     * 
     */
    public Optional<Boolean> enableNetworkPolicy() {
        return Optional.ofNullable(this.enableNetworkPolicy);
    }
    /**
     * @return Rancher Kubernetes Engine Config (list maxitems: 1)
     * 
     */
    public ClusterTemplateTemplateRevisionClusterConfigRkeConfig rkeConfig() {
        return this.rkeConfig;
    }
    /**
     * @return Cluster scheduled cis scan. For Rancher v2.4.0 or above (List MaxItem:1)
     * 
     */
    public Optional<ClusterTemplateTemplateRevisionClusterConfigScheduledClusterScan> scheduledClusterScan() {
        return Optional.ofNullable(this.scheduledClusterScan);
    }
    /**
     * @return Windows prefered cluster. Default: `false` (bool)
     * 
     */
    public Optional<Boolean> windowsPreferedCluster() {
        return Optional.ofNullable(this.windowsPreferedCluster);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterTemplateTemplateRevisionClusterConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable ClusterTemplateTemplateRevisionClusterConfigClusterAuthEndpoint clusterAuthEndpoint;
        private @Nullable String defaultClusterRoleForProjectMembers;
        private @Nullable String defaultPodSecurityPolicyTemplateId;
        private @Nullable String desiredAgentImage;
        private @Nullable String desiredAuthImage;
        private @Nullable String dockerRootDir;
        private @Nullable Boolean enableClusterAlerting;
        private @Nullable Boolean enableClusterMonitoring;
        private @Nullable Boolean enableNetworkPolicy;
        private ClusterTemplateTemplateRevisionClusterConfigRkeConfig rkeConfig;
        private @Nullable ClusterTemplateTemplateRevisionClusterConfigScheduledClusterScan scheduledClusterScan;
        private @Nullable Boolean windowsPreferedCluster;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterTemplateTemplateRevisionClusterConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterAuthEndpoint = defaults.clusterAuthEndpoint;
    	      this.defaultClusterRoleForProjectMembers = defaults.defaultClusterRoleForProjectMembers;
    	      this.defaultPodSecurityPolicyTemplateId = defaults.defaultPodSecurityPolicyTemplateId;
    	      this.desiredAgentImage = defaults.desiredAgentImage;
    	      this.desiredAuthImage = defaults.desiredAuthImage;
    	      this.dockerRootDir = defaults.dockerRootDir;
    	      this.enableClusterAlerting = defaults.enableClusterAlerting;
    	      this.enableClusterMonitoring = defaults.enableClusterMonitoring;
    	      this.enableNetworkPolicy = defaults.enableNetworkPolicy;
    	      this.rkeConfig = defaults.rkeConfig;
    	      this.scheduledClusterScan = defaults.scheduledClusterScan;
    	      this.windowsPreferedCluster = defaults.windowsPreferedCluster;
        }

        public Builder clusterAuthEndpoint(@Nullable ClusterTemplateTemplateRevisionClusterConfigClusterAuthEndpoint clusterAuthEndpoint) {
            this.clusterAuthEndpoint = clusterAuthEndpoint;
            return this;
        }
        public Builder defaultClusterRoleForProjectMembers(@Nullable String defaultClusterRoleForProjectMembers) {
            this.defaultClusterRoleForProjectMembers = defaultClusterRoleForProjectMembers;
            return this;
        }
        public Builder defaultPodSecurityPolicyTemplateId(@Nullable String defaultPodSecurityPolicyTemplateId) {
            this.defaultPodSecurityPolicyTemplateId = defaultPodSecurityPolicyTemplateId;
            return this;
        }
        public Builder desiredAgentImage(@Nullable String desiredAgentImage) {
            this.desiredAgentImage = desiredAgentImage;
            return this;
        }
        public Builder desiredAuthImage(@Nullable String desiredAuthImage) {
            this.desiredAuthImage = desiredAuthImage;
            return this;
        }
        public Builder dockerRootDir(@Nullable String dockerRootDir) {
            this.dockerRootDir = dockerRootDir;
            return this;
        }
        public Builder enableClusterAlerting(@Nullable Boolean enableClusterAlerting) {
            this.enableClusterAlerting = enableClusterAlerting;
            return this;
        }
        public Builder enableClusterMonitoring(@Nullable Boolean enableClusterMonitoring) {
            this.enableClusterMonitoring = enableClusterMonitoring;
            return this;
        }
        public Builder enableNetworkPolicy(@Nullable Boolean enableNetworkPolicy) {
            this.enableNetworkPolicy = enableNetworkPolicy;
            return this;
        }
        public Builder rkeConfig(ClusterTemplateTemplateRevisionClusterConfigRkeConfig rkeConfig) {
            this.rkeConfig = Objects.requireNonNull(rkeConfig);
            return this;
        }
        public Builder scheduledClusterScan(@Nullable ClusterTemplateTemplateRevisionClusterConfigScheduledClusterScan scheduledClusterScan) {
            this.scheduledClusterScan = scheduledClusterScan;
            return this;
        }
        public Builder windowsPreferedCluster(@Nullable Boolean windowsPreferedCluster) {
            this.windowsPreferedCluster = windowsPreferedCluster;
            return this;
        }        public ClusterTemplateTemplateRevisionClusterConfig build() {
            return new ClusterTemplateTemplateRevisionClusterConfig(clusterAuthEndpoint, defaultClusterRoleForProjectMembers, defaultPodSecurityPolicyTemplateId, desiredAgentImage, desiredAuthImage, dockerRootDir, enableClusterAlerting, enableClusterMonitoring, enableNetworkPolicy, rkeConfig, scheduledClusterScan, windowsPreferedCluster);
        }
    }
}
