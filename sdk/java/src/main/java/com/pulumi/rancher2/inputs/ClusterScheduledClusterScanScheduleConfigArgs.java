// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterScheduledClusterScanScheduleConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterScheduledClusterScanScheduleConfigArgs Empty = new ClusterScheduledClusterScanScheduleConfigArgs();

    /**
     * Crontab schedule. It should contains 5 fields `&#34;&lt;min&gt; &lt;hour&gt; &lt;month_day&gt; &lt;month&gt; &lt;week_day&gt;&#34;` (string)
     * 
     */
    @Import(name="cronSchedule", required=true)
    private Output<String> cronSchedule;

    /**
     * @return Crontab schedule. It should contains 5 fields `&#34;&lt;min&gt; &lt;hour&gt; &lt;month_day&gt; &lt;month&gt; &lt;week_day&gt;&#34;` (string)
     * 
     */
    public Output<String> cronSchedule() {
        return this.cronSchedule;
    }

    /**
     * Retention for etcd backup. Default `6` (int)
     * 
     */
    @Import(name="retention")
    private @Nullable Output<Integer> retention;

    /**
     * @return Retention for etcd backup. Default `6` (int)
     * 
     */
    public Optional<Output<Integer>> retention() {
        return Optional.ofNullable(this.retention);
    }

    private ClusterScheduledClusterScanScheduleConfigArgs() {}

    private ClusterScheduledClusterScanScheduleConfigArgs(ClusterScheduledClusterScanScheduleConfigArgs $) {
        this.cronSchedule = $.cronSchedule;
        this.retention = $.retention;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterScheduledClusterScanScheduleConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterScheduledClusterScanScheduleConfigArgs $;

        public Builder() {
            $ = new ClusterScheduledClusterScanScheduleConfigArgs();
        }

        public Builder(ClusterScheduledClusterScanScheduleConfigArgs defaults) {
            $ = new ClusterScheduledClusterScanScheduleConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cronSchedule Crontab schedule. It should contains 5 fields `&#34;&lt;min&gt; &lt;hour&gt; &lt;month_day&gt; &lt;month&gt; &lt;week_day&gt;&#34;` (string)
         * 
         * @return builder
         * 
         */
        public Builder cronSchedule(Output<String> cronSchedule) {
            $.cronSchedule = cronSchedule;
            return this;
        }

        /**
         * @param cronSchedule Crontab schedule. It should contains 5 fields `&#34;&lt;min&gt; &lt;hour&gt; &lt;month_day&gt; &lt;month&gt; &lt;week_day&gt;&#34;` (string)
         * 
         * @return builder
         * 
         */
        public Builder cronSchedule(String cronSchedule) {
            return cronSchedule(Output.of(cronSchedule));
        }

        /**
         * @param retention Retention for etcd backup. Default `6` (int)
         * 
         * @return builder
         * 
         */
        public Builder retention(@Nullable Output<Integer> retention) {
            $.retention = retention;
            return this;
        }

        /**
         * @param retention Retention for etcd backup. Default `6` (int)
         * 
         * @return builder
         * 
         */
        public Builder retention(Integer retention) {
            return retention(Output.of(retention));
        }

        public ClusterScheduledClusterScanScheduleConfigArgs build() {
            $.cronSchedule = Objects.requireNonNull($.cronSchedule, "expected parameter 'cronSchedule' to be non-null");
            return $;
        }
    }

}
