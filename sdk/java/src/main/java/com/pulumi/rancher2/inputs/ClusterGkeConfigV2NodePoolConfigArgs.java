// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.rancher2.inputs.ClusterGkeConfigV2NodePoolConfigTaintArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterGkeConfigV2NodePoolConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterGkeConfigV2NodePoolConfigArgs Empty = new ClusterGkeConfigV2NodePoolConfigArgs();

    /**
     * The GKE node config disk size (Gb)
     * 
     */
    @Import(name="diskSizeGb")
    private @Nullable Output<Integer> diskSizeGb;

    /**
     * @return The GKE node config disk size (Gb)
     * 
     */
    public Optional<Output<Integer>> diskSizeGb() {
        return Optional.ofNullable(this.diskSizeGb);
    }

    /**
     * The GKE node config disk type
     * 
     */
    @Import(name="diskType")
    private @Nullable Output<String> diskType;

    /**
     * @return The GKE node config disk type
     * 
     */
    public Optional<Output<String>> diskType() {
        return Optional.ofNullable(this.diskType);
    }

    /**
     * The GKE node config image type
     * 
     */
    @Import(name="imageType")
    private @Nullable Output<String> imageType;

    /**
     * @return The GKE node config image type
     * 
     */
    public Optional<Output<String>> imageType() {
        return Optional.ofNullable(this.imageType);
    }

    /**
     * Labels for the Cluster (map)
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,Object>> labels;

    /**
     * @return Labels for the Cluster (map)
     * 
     */
    public Optional<Output<Map<String,Object>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The GKE node config local ssd count
     * 
     */
    @Import(name="localSsdCount")
    private @Nullable Output<Integer> localSsdCount;

    /**
     * @return The GKE node config local ssd count
     * 
     */
    public Optional<Output<Integer>> localSsdCount() {
        return Optional.ofNullable(this.localSsdCount);
    }

    /**
     * The GKE node config machine type
     * 
     */
    @Import(name="machineType")
    private @Nullable Output<String> machineType;

    /**
     * @return The GKE node config machine type
     * 
     */
    public Optional<Output<String>> machineType() {
        return Optional.ofNullable(this.machineType);
    }

    /**
     * The GKE node config oauth scopes
     * 
     */
    @Import(name="oauthScopes")
    private @Nullable Output<List<String>> oauthScopes;

    /**
     * @return The GKE node config oauth scopes
     * 
     */
    public Optional<Output<List<String>>> oauthScopes() {
        return Optional.ofNullable(this.oauthScopes);
    }

    /**
     * Enable GKE node config preemptible
     * 
     */
    @Import(name="preemptible")
    private @Nullable Output<Boolean> preemptible;

    /**
     * @return Enable GKE node config preemptible
     * 
     */
    public Optional<Output<Boolean>> preemptible() {
        return Optional.ofNullable(this.preemptible);
    }

    /**
     * The GKE node config tags
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    /**
     * @return The GKE node config tags
     * 
     */
    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The GKE node config taints
     * 
     */
    @Import(name="taints")
    private @Nullable Output<List<ClusterGkeConfigV2NodePoolConfigTaintArgs>> taints;

    /**
     * @return The GKE node config taints
     * 
     */
    public Optional<Output<List<ClusterGkeConfigV2NodePoolConfigTaintArgs>>> taints() {
        return Optional.ofNullable(this.taints);
    }

    private ClusterGkeConfigV2NodePoolConfigArgs() {}

    private ClusterGkeConfigV2NodePoolConfigArgs(ClusterGkeConfigV2NodePoolConfigArgs $) {
        this.diskSizeGb = $.diskSizeGb;
        this.diskType = $.diskType;
        this.imageType = $.imageType;
        this.labels = $.labels;
        this.localSsdCount = $.localSsdCount;
        this.machineType = $.machineType;
        this.oauthScopes = $.oauthScopes;
        this.preemptible = $.preemptible;
        this.tags = $.tags;
        this.taints = $.taints;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterGkeConfigV2NodePoolConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterGkeConfigV2NodePoolConfigArgs $;

        public Builder() {
            $ = new ClusterGkeConfigV2NodePoolConfigArgs();
        }

        public Builder(ClusterGkeConfigV2NodePoolConfigArgs defaults) {
            $ = new ClusterGkeConfigV2NodePoolConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param diskSizeGb The GKE node config disk size (Gb)
         * 
         * @return builder
         * 
         */
        public Builder diskSizeGb(@Nullable Output<Integer> diskSizeGb) {
            $.diskSizeGb = diskSizeGb;
            return this;
        }

        /**
         * @param diskSizeGb The GKE node config disk size (Gb)
         * 
         * @return builder
         * 
         */
        public Builder diskSizeGb(Integer diskSizeGb) {
            return diskSizeGb(Output.of(diskSizeGb));
        }

        /**
         * @param diskType The GKE node config disk type
         * 
         * @return builder
         * 
         */
        public Builder diskType(@Nullable Output<String> diskType) {
            $.diskType = diskType;
            return this;
        }

        /**
         * @param diskType The GKE node config disk type
         * 
         * @return builder
         * 
         */
        public Builder diskType(String diskType) {
            return diskType(Output.of(diskType));
        }

        /**
         * @param imageType The GKE node config image type
         * 
         * @return builder
         * 
         */
        public Builder imageType(@Nullable Output<String> imageType) {
            $.imageType = imageType;
            return this;
        }

        /**
         * @param imageType The GKE node config image type
         * 
         * @return builder
         * 
         */
        public Builder imageType(String imageType) {
            return imageType(Output.of(imageType));
        }

        /**
         * @param labels Labels for the Cluster (map)
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,Object>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Labels for the Cluster (map)
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,Object> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param localSsdCount The GKE node config local ssd count
         * 
         * @return builder
         * 
         */
        public Builder localSsdCount(@Nullable Output<Integer> localSsdCount) {
            $.localSsdCount = localSsdCount;
            return this;
        }

        /**
         * @param localSsdCount The GKE node config local ssd count
         * 
         * @return builder
         * 
         */
        public Builder localSsdCount(Integer localSsdCount) {
            return localSsdCount(Output.of(localSsdCount));
        }

        /**
         * @param machineType The GKE node config machine type
         * 
         * @return builder
         * 
         */
        public Builder machineType(@Nullable Output<String> machineType) {
            $.machineType = machineType;
            return this;
        }

        /**
         * @param machineType The GKE node config machine type
         * 
         * @return builder
         * 
         */
        public Builder machineType(String machineType) {
            return machineType(Output.of(machineType));
        }

        /**
         * @param oauthScopes The GKE node config oauth scopes
         * 
         * @return builder
         * 
         */
        public Builder oauthScopes(@Nullable Output<List<String>> oauthScopes) {
            $.oauthScopes = oauthScopes;
            return this;
        }

        /**
         * @param oauthScopes The GKE node config oauth scopes
         * 
         * @return builder
         * 
         */
        public Builder oauthScopes(List<String> oauthScopes) {
            return oauthScopes(Output.of(oauthScopes));
        }

        /**
         * @param oauthScopes The GKE node config oauth scopes
         * 
         * @return builder
         * 
         */
        public Builder oauthScopes(String... oauthScopes) {
            return oauthScopes(List.of(oauthScopes));
        }

        /**
         * @param preemptible Enable GKE node config preemptible
         * 
         * @return builder
         * 
         */
        public Builder preemptible(@Nullable Output<Boolean> preemptible) {
            $.preemptible = preemptible;
            return this;
        }

        /**
         * @param preemptible Enable GKE node config preemptible
         * 
         * @return builder
         * 
         */
        public Builder preemptible(Boolean preemptible) {
            return preemptible(Output.of(preemptible));
        }

        /**
         * @param tags The GKE node config tags
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The GKE node config tags
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags The GKE node config tags
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param taints The GKE node config taints
         * 
         * @return builder
         * 
         */
        public Builder taints(@Nullable Output<List<ClusterGkeConfigV2NodePoolConfigTaintArgs>> taints) {
            $.taints = taints;
            return this;
        }

        /**
         * @param taints The GKE node config taints
         * 
         * @return builder
         * 
         */
        public Builder taints(List<ClusterGkeConfigV2NodePoolConfigTaintArgs> taints) {
            return taints(Output.of(taints));
        }

        /**
         * @param taints The GKE node config taints
         * 
         * @return builder
         * 
         */
        public Builder taints(ClusterGkeConfigV2NodePoolConfigTaintArgs... taints) {
            return taints(List.of(taints));
        }

        public ClusterGkeConfigV2NodePoolConfigArgs build() {
            return $;
        }
    }

}
