// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudCredentialAmazonec2CredentialConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudCredentialAmazonec2CredentialConfigArgs Empty = new CloudCredentialAmazonec2CredentialConfigArgs();

    /**
     * AWS access key (string)
     * 
     */
    @Import(name="accessKey", required=true)
    private Output<String> accessKey;

    /**
     * @return AWS access key (string)
     * 
     */
    public Output<String> accessKey() {
        return this.accessKey;
    }

    /**
     * AWS default region (string)
     * 
     */
    @Import(name="defaultRegion")
    private @Nullable Output<String> defaultRegion;

    /**
     * @return AWS default region (string)
     * 
     */
    public Optional<Output<String>> defaultRegion() {
        return Optional.ofNullable(this.defaultRegion);
    }

    /**
     * AWS secret key (string)
     * 
     */
    @Import(name="secretKey", required=true)
    private Output<String> secretKey;

    /**
     * @return AWS secret key (string)
     * 
     */
    public Output<String> secretKey() {
        return this.secretKey;
    }

    private CloudCredentialAmazonec2CredentialConfigArgs() {}

    private CloudCredentialAmazonec2CredentialConfigArgs(CloudCredentialAmazonec2CredentialConfigArgs $) {
        this.accessKey = $.accessKey;
        this.defaultRegion = $.defaultRegion;
        this.secretKey = $.secretKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudCredentialAmazonec2CredentialConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudCredentialAmazonec2CredentialConfigArgs $;

        public Builder() {
            $ = new CloudCredentialAmazonec2CredentialConfigArgs();
        }

        public Builder(CloudCredentialAmazonec2CredentialConfigArgs defaults) {
            $ = new CloudCredentialAmazonec2CredentialConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessKey AWS access key (string)
         * 
         * @return builder
         * 
         */
        public Builder accessKey(Output<String> accessKey) {
            $.accessKey = accessKey;
            return this;
        }

        /**
         * @param accessKey AWS access key (string)
         * 
         * @return builder
         * 
         */
        public Builder accessKey(String accessKey) {
            return accessKey(Output.of(accessKey));
        }

        /**
         * @param defaultRegion AWS default region (string)
         * 
         * @return builder
         * 
         */
        public Builder defaultRegion(@Nullable Output<String> defaultRegion) {
            $.defaultRegion = defaultRegion;
            return this;
        }

        /**
         * @param defaultRegion AWS default region (string)
         * 
         * @return builder
         * 
         */
        public Builder defaultRegion(String defaultRegion) {
            return defaultRegion(Output.of(defaultRegion));
        }

        /**
         * @param secretKey AWS secret key (string)
         * 
         * @return builder
         * 
         */
        public Builder secretKey(Output<String> secretKey) {
            $.secretKey = secretKey;
            return this;
        }

        /**
         * @param secretKey AWS secret key (string)
         * 
         * @return builder
         * 
         */
        public Builder secretKey(String secretKey) {
            return secretKey(Output.of(secretKey));
        }

        public CloudCredentialAmazonec2CredentialConfigArgs build() {
            $.accessKey = Objects.requireNonNull($.accessKey, "expected parameter 'accessKey' to be non-null");
            $.secretKey = Objects.requireNonNull($.secretKey, "expected parameter 'secretKey' to be non-null");
            return $;
        }
    }

}
