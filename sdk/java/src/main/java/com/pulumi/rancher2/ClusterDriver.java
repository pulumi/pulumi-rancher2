// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.rancher2.ClusterDriverArgs;
import com.pulumi.rancher2.Utilities;
import com.pulumi.rancher2.inputs.ClusterDriverState;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Rancher v2 Cluster Driver resource. This can be used to create Cluster Driver for Rancher v2.2.x Kontainer Engine clusters and retrieve their information.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Cluster Driver can be imported using the Rancher Cluster Driver ID
 * 
 * ```sh
 * $ pulumi import rancher2:index/clusterDriver:ClusterDriver foo &amp;lt;CLUSTER_DRIVER_ID&amp;gt;
 * ```
 * 
 */
@ResourceType(type="rancher2:index/clusterDriver:ClusterDriver")
public class ClusterDriver extends com.pulumi.resources.CustomResource {
    /**
     * Specify the cluster driver state (bool)
     * 
     */
    @Export(name="active", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> active;

    /**
     * @return Specify the cluster driver state (bool)
     * 
     */
    public Output<Boolean> active() {
        return this.active;
    }
    /**
     * Actual url of the cluster driver (string)
     * 
     */
    @Export(name="actualUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> actualUrl;

    /**
     * @return Actual url of the cluster driver (string)
     * 
     */
    public Output<Optional<String>> actualUrl() {
        return Codegen.optional(this.actualUrl);
    }
    /**
     * Annotations of the resource (map)
     * 
     */
    @Export(name="annotations", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output<Map<String,Object>> annotations;

    /**
     * @return Annotations of the resource (map)
     * 
     */
    public Output<Map<String,Object>> annotations() {
        return this.annotations;
    }
    /**
     * Specify whether the cluster driver is an internal cluster driver or not (bool)
     * 
     */
    @Export(name="builtin", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> builtin;

    /**
     * @return Specify whether the cluster driver is an internal cluster driver or not (bool)
     * 
     */
    public Output<Boolean> builtin() {
        return this.builtin;
    }
    /**
     * Verify that the downloaded driver matches the expected checksum (string)
     * 
     */
    @Export(name="checksum", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> checksum;

    /**
     * @return Verify that the downloaded driver matches the expected checksum (string)
     * 
     */
    public Output<Optional<String>> checksum() {
        return Codegen.optional(this.checksum);
    }
    /**
     * Labels of the resource (map)
     * 
     */
    @Export(name="labels", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output<Map<String,Object>> labels;

    /**
     * @return Labels of the resource (map)
     * 
     */
    public Output<Map<String,Object>> labels() {
        return this.labels;
    }
    /**
     * Name of the cluster driver (string)
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the cluster driver (string)
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The URL to load for customized Add Clusters screen for this driver (string)
     * 
     */
    @Export(name="uiUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> uiUrl;

    /**
     * @return The URL to load for customized Add Clusters screen for this driver (string)
     * 
     */
    public Output<Optional<String>> uiUrl() {
        return Codegen.optional(this.uiUrl);
    }
    /**
     * The URL to download the machine driver binary for 64-bit Linux (string)
     * 
     */
    @Export(name="url", refs={String.class}, tree="[0]")
    private Output<String> url;

    /**
     * @return The URL to download the machine driver binary for 64-bit Linux (string)
     * 
     */
    public Output<String> url() {
        return this.url;
    }
    /**
     * Domains to whitelist for the ui (list)
     * 
     */
    @Export(name="whitelistDomains", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> whitelistDomains;

    /**
     * @return Domains to whitelist for the ui (list)
     * 
     */
    public Output<Optional<List<String>>> whitelistDomains() {
        return Codegen.optional(this.whitelistDomains);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ClusterDriver(java.lang.String name) {
        this(name, ClusterDriverArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ClusterDriver(java.lang.String name, ClusterDriverArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ClusterDriver(java.lang.String name, ClusterDriverArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("rancher2:index/clusterDriver:ClusterDriver", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ClusterDriver(java.lang.String name, Output<java.lang.String> id, @Nullable ClusterDriverState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("rancher2:index/clusterDriver:ClusterDriver", name, state, makeResourceOptions(options, id), false);
    }

    private static ClusterDriverArgs makeArgs(ClusterDriverArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ClusterDriverArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ClusterDriver get(java.lang.String name, Output<java.lang.String> id, @Nullable ClusterDriverState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ClusterDriver(name, id, state, options);
    }
}
