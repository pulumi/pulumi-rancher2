// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetClusterRkeConfigServicesKubelet {
    private String clusterDnsServer;
    private String clusterDomain;
    private Map<String,Object> extraArgs;
    private @Nullable List<String> extraBinds;
    private @Nullable List<String> extraEnvs;
    private Boolean failSwapOn;
    private @Nullable Boolean generateServingCertificate;
    private String image;
    private String infraContainerImage;

    private GetClusterRkeConfigServicesKubelet() {}
    public String clusterDnsServer() {
        return this.clusterDnsServer;
    }
    public String clusterDomain() {
        return this.clusterDomain;
    }
    public Map<String,Object> extraArgs() {
        return this.extraArgs;
    }
    public List<String> extraBinds() {
        return this.extraBinds == null ? List.of() : this.extraBinds;
    }
    public List<String> extraEnvs() {
        return this.extraEnvs == null ? List.of() : this.extraEnvs;
    }
    public Boolean failSwapOn() {
        return this.failSwapOn;
    }
    public Optional<Boolean> generateServingCertificate() {
        return Optional.ofNullable(this.generateServingCertificate);
    }
    public String image() {
        return this.image;
    }
    public String infraContainerImage() {
        return this.infraContainerImage;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterRkeConfigServicesKubelet defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clusterDnsServer;
        private String clusterDomain;
        private Map<String,Object> extraArgs;
        private @Nullable List<String> extraBinds;
        private @Nullable List<String> extraEnvs;
        private Boolean failSwapOn;
        private @Nullable Boolean generateServingCertificate;
        private String image;
        private String infraContainerImage;
        public Builder() {}
        public Builder(GetClusterRkeConfigServicesKubelet defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterDnsServer = defaults.clusterDnsServer;
    	      this.clusterDomain = defaults.clusterDomain;
    	      this.extraArgs = defaults.extraArgs;
    	      this.extraBinds = defaults.extraBinds;
    	      this.extraEnvs = defaults.extraEnvs;
    	      this.failSwapOn = defaults.failSwapOn;
    	      this.generateServingCertificate = defaults.generateServingCertificate;
    	      this.image = defaults.image;
    	      this.infraContainerImage = defaults.infraContainerImage;
        }

        @CustomType.Setter
        public Builder clusterDnsServer(String clusterDnsServer) {
            this.clusterDnsServer = Objects.requireNonNull(clusterDnsServer);
            return this;
        }
        @CustomType.Setter
        public Builder clusterDomain(String clusterDomain) {
            this.clusterDomain = Objects.requireNonNull(clusterDomain);
            return this;
        }
        @CustomType.Setter
        public Builder extraArgs(Map<String,Object> extraArgs) {
            this.extraArgs = Objects.requireNonNull(extraArgs);
            return this;
        }
        @CustomType.Setter
        public Builder extraBinds(@Nullable List<String> extraBinds) {
            this.extraBinds = extraBinds;
            return this;
        }
        public Builder extraBinds(String... extraBinds) {
            return extraBinds(List.of(extraBinds));
        }
        @CustomType.Setter
        public Builder extraEnvs(@Nullable List<String> extraEnvs) {
            this.extraEnvs = extraEnvs;
            return this;
        }
        public Builder extraEnvs(String... extraEnvs) {
            return extraEnvs(List.of(extraEnvs));
        }
        @CustomType.Setter
        public Builder failSwapOn(Boolean failSwapOn) {
            this.failSwapOn = Objects.requireNonNull(failSwapOn);
            return this;
        }
        @CustomType.Setter
        public Builder generateServingCertificate(@Nullable Boolean generateServingCertificate) {
            this.generateServingCertificate = generateServingCertificate;
            return this;
        }
        @CustomType.Setter
        public Builder image(String image) {
            this.image = Objects.requireNonNull(image);
            return this;
        }
        @CustomType.Setter
        public Builder infraContainerImage(String infraContainerImage) {
            this.infraContainerImage = Objects.requireNonNull(infraContainerImage);
            return this;
        }
        public GetClusterRkeConfigServicesKubelet build() {
            final var _resultValue = new GetClusterRkeConfigServicesKubelet();
            _resultValue.clusterDnsServer = clusterDnsServer;
            _resultValue.clusterDomain = clusterDomain;
            _resultValue.extraArgs = extraArgs;
            _resultValue.extraBinds = extraBinds;
            _resultValue.extraEnvs = extraEnvs;
            _resultValue.failSwapOn = failSwapOn;
            _resultValue.generateServingCertificate = generateServingCertificate;
            _resultValue.image = image;
            _resultValue.infraContainerImage = infraContainerImage;
            return _resultValue;
        }
    }
}
