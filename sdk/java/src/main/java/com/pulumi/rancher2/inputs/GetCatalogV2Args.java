// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCatalogV2Args extends com.pulumi.resources.InvokeArgs {

    public static final GetCatalogV2Args Empty = new GetCatalogV2Args();

    /**
     * The cluster id of the catalog V2 (string)
     * 
     */
    @Import(name="clusterId", required=true)
    private Output<String> clusterId;

    /**
     * @return The cluster id of the catalog V2 (string)
     * 
     */
    public Output<String> clusterId() {
        return this.clusterId;
    }

    @Import(name="exponentialBackoffMaxRetries")
    private @Nullable Output<Integer> exponentialBackoffMaxRetries;

    public Optional<Output<Integer>> exponentialBackoffMaxRetries() {
        return Optional.ofNullable(this.exponentialBackoffMaxRetries);
    }

    @Import(name="exponentialBackoffMaxWait")
    private @Nullable Output<Integer> exponentialBackoffMaxWait;

    public Optional<Output<Integer>> exponentialBackoffMaxWait() {
        return Optional.ofNullable(this.exponentialBackoffMaxWait);
    }

    @Import(name="exponentialBackoffMinWait")
    private @Nullable Output<Integer> exponentialBackoffMinWait;

    public Optional<Output<Integer>> exponentialBackoffMinWait() {
        return Optional.ofNullable(this.exponentialBackoffMinWait);
    }

    @Import(name="insecurePlainHttp")
    private @Nullable Output<Boolean> insecurePlainHttp;

    public Optional<Output<Boolean>> insecurePlainHttp() {
        return Optional.ofNullable(this.insecurePlainHttp);
    }

    /**
     * The name of the catalog v2 (string)
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the catalog v2 (string)
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private GetCatalogV2Args() {}

    private GetCatalogV2Args(GetCatalogV2Args $) {
        this.clusterId = $.clusterId;
        this.exponentialBackoffMaxRetries = $.exponentialBackoffMaxRetries;
        this.exponentialBackoffMaxWait = $.exponentialBackoffMaxWait;
        this.exponentialBackoffMinWait = $.exponentialBackoffMinWait;
        this.insecurePlainHttp = $.insecurePlainHttp;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCatalogV2Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCatalogV2Args $;

        public Builder() {
            $ = new GetCatalogV2Args();
        }

        public Builder(GetCatalogV2Args defaults) {
            $ = new GetCatalogV2Args(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterId The cluster id of the catalog V2 (string)
         * 
         * @return builder
         * 
         */
        public Builder clusterId(Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        /**
         * @param clusterId The cluster id of the catalog V2 (string)
         * 
         * @return builder
         * 
         */
        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        public Builder exponentialBackoffMaxRetries(@Nullable Output<Integer> exponentialBackoffMaxRetries) {
            $.exponentialBackoffMaxRetries = exponentialBackoffMaxRetries;
            return this;
        }

        public Builder exponentialBackoffMaxRetries(Integer exponentialBackoffMaxRetries) {
            return exponentialBackoffMaxRetries(Output.of(exponentialBackoffMaxRetries));
        }

        public Builder exponentialBackoffMaxWait(@Nullable Output<Integer> exponentialBackoffMaxWait) {
            $.exponentialBackoffMaxWait = exponentialBackoffMaxWait;
            return this;
        }

        public Builder exponentialBackoffMaxWait(Integer exponentialBackoffMaxWait) {
            return exponentialBackoffMaxWait(Output.of(exponentialBackoffMaxWait));
        }

        public Builder exponentialBackoffMinWait(@Nullable Output<Integer> exponentialBackoffMinWait) {
            $.exponentialBackoffMinWait = exponentialBackoffMinWait;
            return this;
        }

        public Builder exponentialBackoffMinWait(Integer exponentialBackoffMinWait) {
            return exponentialBackoffMinWait(Output.of(exponentialBackoffMinWait));
        }

        public Builder insecurePlainHttp(@Nullable Output<Boolean> insecurePlainHttp) {
            $.insecurePlainHttp = insecurePlainHttp;
            return this;
        }

        public Builder insecurePlainHttp(Boolean insecurePlainHttp) {
            return insecurePlainHttp(Output.of(insecurePlainHttp));
        }

        /**
         * @param name The name of the catalog v2 (string)
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the catalog v2 (string)
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public GetCatalogV2Args build() {
            if ($.clusterId == null) {
                throw new MissingRequiredPropertyException("GetCatalogV2Args", "clusterId");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetCatalogV2Args", "name");
            }
            return $;
        }
    }

}
