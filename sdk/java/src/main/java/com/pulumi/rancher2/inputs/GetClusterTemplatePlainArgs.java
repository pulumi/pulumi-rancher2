// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetClusterTemplatePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetClusterTemplatePlainArgs Empty = new GetClusterTemplatePlainArgs();

    /**
     * (Computed) Annotations for the cluster template (map)
     * 
     */
    @Import(name="annotations")
    private @Nullable Map<String,String> annotations;

    /**
     * @return (Computed) Annotations for the cluster template (map)
     * 
     */
    public Optional<Map<String,String>> annotations() {
        return Optional.ofNullable(this.annotations);
    }

    @Import(name="description")
    private @Nullable String description;

    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Computed) Labels for the cluster template (map)
     * 
     */
    @Import(name="labels")
    private @Nullable Map<String,String> labels;

    /**
     * @return (Computed) Labels for the cluster template (map)
     * 
     */
    public Optional<Map<String,String>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The cluster template name (string)
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The cluster template name (string)
     * 
     */
    public String name() {
        return this.name;
    }

    private GetClusterTemplatePlainArgs() {}

    private GetClusterTemplatePlainArgs(GetClusterTemplatePlainArgs $) {
        this.annotations = $.annotations;
        this.description = $.description;
        this.labels = $.labels;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetClusterTemplatePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetClusterTemplatePlainArgs $;

        public Builder() {
            $ = new GetClusterTemplatePlainArgs();
        }

        public Builder(GetClusterTemplatePlainArgs defaults) {
            $ = new GetClusterTemplatePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param annotations (Computed) Annotations for the cluster template (map)
         * 
         * @return builder
         * 
         */
        public Builder annotations(@Nullable Map<String,String> annotations) {
            $.annotations = annotations;
            return this;
        }

        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        /**
         * @param labels (Computed) Labels for the cluster template (map)
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Map<String,String> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param name The cluster template name (string)
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public GetClusterTemplatePlainArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetClusterTemplatePlainArgs", "name");
            }
            return $;
        }
    }

}
