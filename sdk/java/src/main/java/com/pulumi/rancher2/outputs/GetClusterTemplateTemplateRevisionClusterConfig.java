// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.rancher2.outputs.GetClusterTemplateTemplateRevisionClusterConfigClusterAuthEndpoint;
import com.pulumi.rancher2.outputs.GetClusterTemplateTemplateRevisionClusterConfigRkeConfig;
import com.pulumi.rancher2.outputs.GetClusterTemplateTemplateRevisionClusterConfigScheduledClusterScan;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetClusterTemplateTemplateRevisionClusterConfig {
    private final GetClusterTemplateTemplateRevisionClusterConfigClusterAuthEndpoint clusterAuthEndpoint;
    private final String defaultClusterRoleForProjectMembers;
    private final String defaultPodSecurityPolicyTemplateId;
    private final String desiredAgentImage;
    private final String desiredAuthImage;
    private final String dockerRootDir;
    private final @Nullable Boolean enableClusterAlerting;
    private final @Nullable Boolean enableClusterMonitoring;
    private final @Nullable Boolean enableNetworkPolicy;
    private final GetClusterTemplateTemplateRevisionClusterConfigRkeConfig rkeConfig;
    private final @Nullable GetClusterTemplateTemplateRevisionClusterConfigScheduledClusterScan scheduledClusterScan;
    private final @Nullable Boolean windowsPreferedCluster;

    @CustomType.Constructor
    private GetClusterTemplateTemplateRevisionClusterConfig(
        @CustomType.Parameter("clusterAuthEndpoint") GetClusterTemplateTemplateRevisionClusterConfigClusterAuthEndpoint clusterAuthEndpoint,
        @CustomType.Parameter("defaultClusterRoleForProjectMembers") String defaultClusterRoleForProjectMembers,
        @CustomType.Parameter("defaultPodSecurityPolicyTemplateId") String defaultPodSecurityPolicyTemplateId,
        @CustomType.Parameter("desiredAgentImage") String desiredAgentImage,
        @CustomType.Parameter("desiredAuthImage") String desiredAuthImage,
        @CustomType.Parameter("dockerRootDir") String dockerRootDir,
        @CustomType.Parameter("enableClusterAlerting") @Nullable Boolean enableClusterAlerting,
        @CustomType.Parameter("enableClusterMonitoring") @Nullable Boolean enableClusterMonitoring,
        @CustomType.Parameter("enableNetworkPolicy") @Nullable Boolean enableNetworkPolicy,
        @CustomType.Parameter("rkeConfig") GetClusterTemplateTemplateRevisionClusterConfigRkeConfig rkeConfig,
        @CustomType.Parameter("scheduledClusterScan") @Nullable GetClusterTemplateTemplateRevisionClusterConfigScheduledClusterScan scheduledClusterScan,
        @CustomType.Parameter("windowsPreferedCluster") @Nullable Boolean windowsPreferedCluster) {
        this.clusterAuthEndpoint = clusterAuthEndpoint;
        this.defaultClusterRoleForProjectMembers = defaultClusterRoleForProjectMembers;
        this.defaultPodSecurityPolicyTemplateId = defaultPodSecurityPolicyTemplateId;
        this.desiredAgentImage = desiredAgentImage;
        this.desiredAuthImage = desiredAuthImage;
        this.dockerRootDir = dockerRootDir;
        this.enableClusterAlerting = enableClusterAlerting;
        this.enableClusterMonitoring = enableClusterMonitoring;
        this.enableNetworkPolicy = enableNetworkPolicy;
        this.rkeConfig = rkeConfig;
        this.scheduledClusterScan = scheduledClusterScan;
        this.windowsPreferedCluster = windowsPreferedCluster;
    }

    public GetClusterTemplateTemplateRevisionClusterConfigClusterAuthEndpoint clusterAuthEndpoint() {
        return this.clusterAuthEndpoint;
    }
    public String defaultClusterRoleForProjectMembers() {
        return this.defaultClusterRoleForProjectMembers;
    }
    public String defaultPodSecurityPolicyTemplateId() {
        return this.defaultPodSecurityPolicyTemplateId;
    }
    public String desiredAgentImage() {
        return this.desiredAgentImage;
    }
    public String desiredAuthImage() {
        return this.desiredAuthImage;
    }
    public String dockerRootDir() {
        return this.dockerRootDir;
    }
    public Optional<Boolean> enableClusterAlerting() {
        return Optional.ofNullable(this.enableClusterAlerting);
    }
    public Optional<Boolean> enableClusterMonitoring() {
        return Optional.ofNullable(this.enableClusterMonitoring);
    }
    public Optional<Boolean> enableNetworkPolicy() {
        return Optional.ofNullable(this.enableNetworkPolicy);
    }
    public GetClusterTemplateTemplateRevisionClusterConfigRkeConfig rkeConfig() {
        return this.rkeConfig;
    }
    public Optional<GetClusterTemplateTemplateRevisionClusterConfigScheduledClusterScan> scheduledClusterScan() {
        return Optional.ofNullable(this.scheduledClusterScan);
    }
    public Optional<Boolean> windowsPreferedCluster() {
        return Optional.ofNullable(this.windowsPreferedCluster);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterTemplateTemplateRevisionClusterConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetClusterTemplateTemplateRevisionClusterConfigClusterAuthEndpoint clusterAuthEndpoint;
        private String defaultClusterRoleForProjectMembers;
        private String defaultPodSecurityPolicyTemplateId;
        private String desiredAgentImage;
        private String desiredAuthImage;
        private String dockerRootDir;
        private @Nullable Boolean enableClusterAlerting;
        private @Nullable Boolean enableClusterMonitoring;
        private @Nullable Boolean enableNetworkPolicy;
        private GetClusterTemplateTemplateRevisionClusterConfigRkeConfig rkeConfig;
        private @Nullable GetClusterTemplateTemplateRevisionClusterConfigScheduledClusterScan scheduledClusterScan;
        private @Nullable Boolean windowsPreferedCluster;

        public Builder() {
    	      // Empty
        }

        public Builder(GetClusterTemplateTemplateRevisionClusterConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterAuthEndpoint = defaults.clusterAuthEndpoint;
    	      this.defaultClusterRoleForProjectMembers = defaults.defaultClusterRoleForProjectMembers;
    	      this.defaultPodSecurityPolicyTemplateId = defaults.defaultPodSecurityPolicyTemplateId;
    	      this.desiredAgentImage = defaults.desiredAgentImage;
    	      this.desiredAuthImage = defaults.desiredAuthImage;
    	      this.dockerRootDir = defaults.dockerRootDir;
    	      this.enableClusterAlerting = defaults.enableClusterAlerting;
    	      this.enableClusterMonitoring = defaults.enableClusterMonitoring;
    	      this.enableNetworkPolicy = defaults.enableNetworkPolicy;
    	      this.rkeConfig = defaults.rkeConfig;
    	      this.scheduledClusterScan = defaults.scheduledClusterScan;
    	      this.windowsPreferedCluster = defaults.windowsPreferedCluster;
        }

        public Builder clusterAuthEndpoint(GetClusterTemplateTemplateRevisionClusterConfigClusterAuthEndpoint clusterAuthEndpoint) {
            this.clusterAuthEndpoint = Objects.requireNonNull(clusterAuthEndpoint);
            return this;
        }
        public Builder defaultClusterRoleForProjectMembers(String defaultClusterRoleForProjectMembers) {
            this.defaultClusterRoleForProjectMembers = Objects.requireNonNull(defaultClusterRoleForProjectMembers);
            return this;
        }
        public Builder defaultPodSecurityPolicyTemplateId(String defaultPodSecurityPolicyTemplateId) {
            this.defaultPodSecurityPolicyTemplateId = Objects.requireNonNull(defaultPodSecurityPolicyTemplateId);
            return this;
        }
        public Builder desiredAgentImage(String desiredAgentImage) {
            this.desiredAgentImage = Objects.requireNonNull(desiredAgentImage);
            return this;
        }
        public Builder desiredAuthImage(String desiredAuthImage) {
            this.desiredAuthImage = Objects.requireNonNull(desiredAuthImage);
            return this;
        }
        public Builder dockerRootDir(String dockerRootDir) {
            this.dockerRootDir = Objects.requireNonNull(dockerRootDir);
            return this;
        }
        public Builder enableClusterAlerting(@Nullable Boolean enableClusterAlerting) {
            this.enableClusterAlerting = enableClusterAlerting;
            return this;
        }
        public Builder enableClusterMonitoring(@Nullable Boolean enableClusterMonitoring) {
            this.enableClusterMonitoring = enableClusterMonitoring;
            return this;
        }
        public Builder enableNetworkPolicy(@Nullable Boolean enableNetworkPolicy) {
            this.enableNetworkPolicy = enableNetworkPolicy;
            return this;
        }
        public Builder rkeConfig(GetClusterTemplateTemplateRevisionClusterConfigRkeConfig rkeConfig) {
            this.rkeConfig = Objects.requireNonNull(rkeConfig);
            return this;
        }
        public Builder scheduledClusterScan(@Nullable GetClusterTemplateTemplateRevisionClusterConfigScheduledClusterScan scheduledClusterScan) {
            this.scheduledClusterScan = scheduledClusterScan;
            return this;
        }
        public Builder windowsPreferedCluster(@Nullable Boolean windowsPreferedCluster) {
            this.windowsPreferedCluster = windowsPreferedCluster;
            return this;
        }        public GetClusterTemplateTemplateRevisionClusterConfig build() {
            return new GetClusterTemplateTemplateRevisionClusterConfig(clusterAuthEndpoint, defaultClusterRoleForProjectMembers, defaultPodSecurityPolicyTemplateId, desiredAgentImage, desiredAuthImage, dockerRootDir, enableClusterAlerting, enableClusterMonitoring, enableNetworkPolicy, rkeConfig, scheduledClusterScan, windowsPreferedCluster);
        }
    }
}
