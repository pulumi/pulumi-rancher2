// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetClusterRkeConfigCloudProviderOpenstackCloudProviderGlobal {
    private String authUrl;
    private String caFile;
    private String domainId;
    private String domainName;
    private String password;
    private String region;
    private String tenantId;
    private String tenantName;
    private String trustId;
    private String username;

    private GetClusterRkeConfigCloudProviderOpenstackCloudProviderGlobal() {}
    public String authUrl() {
        return this.authUrl;
    }
    public String caFile() {
        return this.caFile;
    }
    public String domainId() {
        return this.domainId;
    }
    public String domainName() {
        return this.domainName;
    }
    public String password() {
        return this.password;
    }
    public String region() {
        return this.region;
    }
    public String tenantId() {
        return this.tenantId;
    }
    public String tenantName() {
        return this.tenantName;
    }
    public String trustId() {
        return this.trustId;
    }
    public String username() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterRkeConfigCloudProviderOpenstackCloudProviderGlobal defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String authUrl;
        private String caFile;
        private String domainId;
        private String domainName;
        private String password;
        private String region;
        private String tenantId;
        private String tenantName;
        private String trustId;
        private String username;
        public Builder() {}
        public Builder(GetClusterRkeConfigCloudProviderOpenstackCloudProviderGlobal defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authUrl = defaults.authUrl;
    	      this.caFile = defaults.caFile;
    	      this.domainId = defaults.domainId;
    	      this.domainName = defaults.domainName;
    	      this.password = defaults.password;
    	      this.region = defaults.region;
    	      this.tenantId = defaults.tenantId;
    	      this.tenantName = defaults.tenantName;
    	      this.trustId = defaults.trustId;
    	      this.username = defaults.username;
        }

        @CustomType.Setter
        public Builder authUrl(String authUrl) {
            if (authUrl == null) {
              throw new MissingRequiredPropertyException("GetClusterRkeConfigCloudProviderOpenstackCloudProviderGlobal", "authUrl");
            }
            this.authUrl = authUrl;
            return this;
        }
        @CustomType.Setter
        public Builder caFile(String caFile) {
            if (caFile == null) {
              throw new MissingRequiredPropertyException("GetClusterRkeConfigCloudProviderOpenstackCloudProviderGlobal", "caFile");
            }
            this.caFile = caFile;
            return this;
        }
        @CustomType.Setter
        public Builder domainId(String domainId) {
            if (domainId == null) {
              throw new MissingRequiredPropertyException("GetClusterRkeConfigCloudProviderOpenstackCloudProviderGlobal", "domainId");
            }
            this.domainId = domainId;
            return this;
        }
        @CustomType.Setter
        public Builder domainName(String domainName) {
            if (domainName == null) {
              throw new MissingRequiredPropertyException("GetClusterRkeConfigCloudProviderOpenstackCloudProviderGlobal", "domainName");
            }
            this.domainName = domainName;
            return this;
        }
        @CustomType.Setter
        public Builder password(String password) {
            if (password == null) {
              throw new MissingRequiredPropertyException("GetClusterRkeConfigCloudProviderOpenstackCloudProviderGlobal", "password");
            }
            this.password = password;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetClusterRkeConfigCloudProviderOpenstackCloudProviderGlobal", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder tenantId(String tenantId) {
            if (tenantId == null) {
              throw new MissingRequiredPropertyException("GetClusterRkeConfigCloudProviderOpenstackCloudProviderGlobal", "tenantId");
            }
            this.tenantId = tenantId;
            return this;
        }
        @CustomType.Setter
        public Builder tenantName(String tenantName) {
            if (tenantName == null) {
              throw new MissingRequiredPropertyException("GetClusterRkeConfigCloudProviderOpenstackCloudProviderGlobal", "tenantName");
            }
            this.tenantName = tenantName;
            return this;
        }
        @CustomType.Setter
        public Builder trustId(String trustId) {
            if (trustId == null) {
              throw new MissingRequiredPropertyException("GetClusterRkeConfigCloudProviderOpenstackCloudProviderGlobal", "trustId");
            }
            this.trustId = trustId;
            return this;
        }
        @CustomType.Setter
        public Builder username(String username) {
            if (username == null) {
              throw new MissingRequiredPropertyException("GetClusterRkeConfigCloudProviderOpenstackCloudProviderGlobal", "username");
            }
            this.username = username;
            return this;
        }
        public GetClusterRkeConfigCloudProviderOpenstackCloudProviderGlobal build() {
            final var _resultValue = new GetClusterRkeConfigCloudProviderOpenstackCloudProviderGlobal();
            _resultValue.authUrl = authUrl;
            _resultValue.caFile = caFile;
            _resultValue.domainId = domainId;
            _resultValue.domainName = domainName;
            _resultValue.password = password;
            _resultValue.region = region;
            _resultValue.tenantId = tenantId;
            _resultValue.tenantName = tenantName;
            _resultValue.trustId = trustId;
            _resultValue.username = username;
            return _resultValue;
        }
    }
}
