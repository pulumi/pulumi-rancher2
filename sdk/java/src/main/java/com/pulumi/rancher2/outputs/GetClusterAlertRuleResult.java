// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.rancher2.outputs.GetClusterAlertRuleEventRule;
import com.pulumi.rancher2.outputs.GetClusterAlertRuleMetricRule;
import com.pulumi.rancher2.outputs.GetClusterAlertRuleNodeRule;
import com.pulumi.rancher2.outputs.GetClusterAlertRuleSystemServiceRule;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetClusterAlertRuleResult {
    /**
     * @return (Computed) The cluster alert rule annotations (map)
     * 
     */
    private Map<String,Object> annotations;
    private String clusterId;
    /**
     * @return (Computed) The cluster alert rule event rule. ConflictsWith: `&#34;metric_rule&#34;, &#34;node_rule&#34;, &#34;system_service_rule&#34;` (list Maxitems:1)
     * 
     */
    private GetClusterAlertRuleEventRule eventRule;
    /**
     * @return (Computed) The cluster alert rule alert group ID (string)
     * 
     */
    private String groupId;
    /**
     * @return (Computed) The cluster alert rule group interval seconds. Default: `180` (int)
     * 
     */
    private Integer groupIntervalSeconds;
    /**
     * @return (Computed) The cluster alert rule group wait seconds. Default: `180` (int)
     * 
     */
    private Integer groupWaitSeconds;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return (Computed) The cluster alert rule inherited. Default: `true` (bool)
     * 
     */
    private Boolean inherited;
    /**
     * @return (Computed) The cluster alert rule labels (map)
     * 
     */
    private @Nullable Map<String,Object> labels;
    /**
     * @return (Computed) The cluster alert rule metric rule. ConflictsWith: `&#34;event_rule&#34;, &#34;node_rule&#34;, &#34;system_service_rule&#34;`` (list Maxitems:1)
     * 
     */
    private GetClusterAlertRuleMetricRule metricRule;
    private String name;
    /**
     * @return (Computed) The cluster alert rule node rule. ConflictsWith: `&#34;event_rule&#34;, &#34;metric_rule&#34;, &#34;system_service_rule&#34;`` (list Maxitems:1)
     * 
     */
    private GetClusterAlertRuleNodeRule nodeRule;
    /**
     * @return (Optional) The cluster alert rule wait seconds. Default: `3600` (int)
     * 
     */
    private Integer repeatIntervalSeconds;
    /**
     * @return (Computed) The cluster alert rule severity. Supported values : `&#34;critical&#34; | &#34;info&#34; | &#34;warning&#34;`. Default: `critical` (string)
     * 
     */
    private String severity;
    /**
     * @return (Computed) The cluster alert rule system service rule. ConflictsWith: `&#34;event_rule&#34;, &#34;metric_rule&#34;, &#34;node_rule&#34;`` (list Maxitems:1)
     * 
     */
    private GetClusterAlertRuleSystemServiceRule systemServiceRule;

    private GetClusterAlertRuleResult() {}
    /**
     * @return (Computed) The cluster alert rule annotations (map)
     * 
     */
    public Map<String,Object> annotations() {
        return this.annotations;
    }
    public String clusterId() {
        return this.clusterId;
    }
    /**
     * @return (Computed) The cluster alert rule event rule. ConflictsWith: `&#34;metric_rule&#34;, &#34;node_rule&#34;, &#34;system_service_rule&#34;` (list Maxitems:1)
     * 
     */
    public GetClusterAlertRuleEventRule eventRule() {
        return this.eventRule;
    }
    /**
     * @return (Computed) The cluster alert rule alert group ID (string)
     * 
     */
    public String groupId() {
        return this.groupId;
    }
    /**
     * @return (Computed) The cluster alert rule group interval seconds. Default: `180` (int)
     * 
     */
    public Integer groupIntervalSeconds() {
        return this.groupIntervalSeconds;
    }
    /**
     * @return (Computed) The cluster alert rule group wait seconds. Default: `180` (int)
     * 
     */
    public Integer groupWaitSeconds() {
        return this.groupWaitSeconds;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return (Computed) The cluster alert rule inherited. Default: `true` (bool)
     * 
     */
    public Boolean inherited() {
        return this.inherited;
    }
    /**
     * @return (Computed) The cluster alert rule labels (map)
     * 
     */
    public Map<String,Object> labels() {
        return this.labels == null ? Map.of() : this.labels;
    }
    /**
     * @return (Computed) The cluster alert rule metric rule. ConflictsWith: `&#34;event_rule&#34;, &#34;node_rule&#34;, &#34;system_service_rule&#34;`` (list Maxitems:1)
     * 
     */
    public GetClusterAlertRuleMetricRule metricRule() {
        return this.metricRule;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return (Computed) The cluster alert rule node rule. ConflictsWith: `&#34;event_rule&#34;, &#34;metric_rule&#34;, &#34;system_service_rule&#34;`` (list Maxitems:1)
     * 
     */
    public GetClusterAlertRuleNodeRule nodeRule() {
        return this.nodeRule;
    }
    /**
     * @return (Optional) The cluster alert rule wait seconds. Default: `3600` (int)
     * 
     */
    public Integer repeatIntervalSeconds() {
        return this.repeatIntervalSeconds;
    }
    /**
     * @return (Computed) The cluster alert rule severity. Supported values : `&#34;critical&#34; | &#34;info&#34; | &#34;warning&#34;`. Default: `critical` (string)
     * 
     */
    public String severity() {
        return this.severity;
    }
    /**
     * @return (Computed) The cluster alert rule system service rule. ConflictsWith: `&#34;event_rule&#34;, &#34;metric_rule&#34;, &#34;node_rule&#34;`` (list Maxitems:1)
     * 
     */
    public GetClusterAlertRuleSystemServiceRule systemServiceRule() {
        return this.systemServiceRule;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterAlertRuleResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,Object> annotations;
        private String clusterId;
        private GetClusterAlertRuleEventRule eventRule;
        private String groupId;
        private Integer groupIntervalSeconds;
        private Integer groupWaitSeconds;
        private String id;
        private Boolean inherited;
        private @Nullable Map<String,Object> labels;
        private GetClusterAlertRuleMetricRule metricRule;
        private String name;
        private GetClusterAlertRuleNodeRule nodeRule;
        private Integer repeatIntervalSeconds;
        private String severity;
        private GetClusterAlertRuleSystemServiceRule systemServiceRule;
        public Builder() {}
        public Builder(GetClusterAlertRuleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.annotations = defaults.annotations;
    	      this.clusterId = defaults.clusterId;
    	      this.eventRule = defaults.eventRule;
    	      this.groupId = defaults.groupId;
    	      this.groupIntervalSeconds = defaults.groupIntervalSeconds;
    	      this.groupWaitSeconds = defaults.groupWaitSeconds;
    	      this.id = defaults.id;
    	      this.inherited = defaults.inherited;
    	      this.labels = defaults.labels;
    	      this.metricRule = defaults.metricRule;
    	      this.name = defaults.name;
    	      this.nodeRule = defaults.nodeRule;
    	      this.repeatIntervalSeconds = defaults.repeatIntervalSeconds;
    	      this.severity = defaults.severity;
    	      this.systemServiceRule = defaults.systemServiceRule;
        }

        @CustomType.Setter
        public Builder annotations(Map<String,Object> annotations) {
            if (annotations == null) {
              throw new MissingRequiredPropertyException("GetClusterAlertRuleResult", "annotations");
            }
            this.annotations = annotations;
            return this;
        }
        @CustomType.Setter
        public Builder clusterId(String clusterId) {
            if (clusterId == null) {
              throw new MissingRequiredPropertyException("GetClusterAlertRuleResult", "clusterId");
            }
            this.clusterId = clusterId;
            return this;
        }
        @CustomType.Setter
        public Builder eventRule(GetClusterAlertRuleEventRule eventRule) {
            if (eventRule == null) {
              throw new MissingRequiredPropertyException("GetClusterAlertRuleResult", "eventRule");
            }
            this.eventRule = eventRule;
            return this;
        }
        @CustomType.Setter
        public Builder groupId(String groupId) {
            if (groupId == null) {
              throw new MissingRequiredPropertyException("GetClusterAlertRuleResult", "groupId");
            }
            this.groupId = groupId;
            return this;
        }
        @CustomType.Setter
        public Builder groupIntervalSeconds(Integer groupIntervalSeconds) {
            if (groupIntervalSeconds == null) {
              throw new MissingRequiredPropertyException("GetClusterAlertRuleResult", "groupIntervalSeconds");
            }
            this.groupIntervalSeconds = groupIntervalSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder groupWaitSeconds(Integer groupWaitSeconds) {
            if (groupWaitSeconds == null) {
              throw new MissingRequiredPropertyException("GetClusterAlertRuleResult", "groupWaitSeconds");
            }
            this.groupWaitSeconds = groupWaitSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetClusterAlertRuleResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder inherited(Boolean inherited) {
            if (inherited == null) {
              throw new MissingRequiredPropertyException("GetClusterAlertRuleResult", "inherited");
            }
            this.inherited = inherited;
            return this;
        }
        @CustomType.Setter
        public Builder labels(@Nullable Map<String,Object> labels) {

            this.labels = labels;
            return this;
        }
        @CustomType.Setter
        public Builder metricRule(GetClusterAlertRuleMetricRule metricRule) {
            if (metricRule == null) {
              throw new MissingRequiredPropertyException("GetClusterAlertRuleResult", "metricRule");
            }
            this.metricRule = metricRule;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetClusterAlertRuleResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder nodeRule(GetClusterAlertRuleNodeRule nodeRule) {
            if (nodeRule == null) {
              throw new MissingRequiredPropertyException("GetClusterAlertRuleResult", "nodeRule");
            }
            this.nodeRule = nodeRule;
            return this;
        }
        @CustomType.Setter
        public Builder repeatIntervalSeconds(Integer repeatIntervalSeconds) {
            if (repeatIntervalSeconds == null) {
              throw new MissingRequiredPropertyException("GetClusterAlertRuleResult", "repeatIntervalSeconds");
            }
            this.repeatIntervalSeconds = repeatIntervalSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder severity(String severity) {
            if (severity == null) {
              throw new MissingRequiredPropertyException("GetClusterAlertRuleResult", "severity");
            }
            this.severity = severity;
            return this;
        }
        @CustomType.Setter
        public Builder systemServiceRule(GetClusterAlertRuleSystemServiceRule systemServiceRule) {
            if (systemServiceRule == null) {
              throw new MissingRequiredPropertyException("GetClusterAlertRuleResult", "systemServiceRule");
            }
            this.systemServiceRule = systemServiceRule;
            return this;
        }
        public GetClusterAlertRuleResult build() {
            final var _resultValue = new GetClusterAlertRuleResult();
            _resultValue.annotations = annotations;
            _resultValue.clusterId = clusterId;
            _resultValue.eventRule = eventRule;
            _resultValue.groupId = groupId;
            _resultValue.groupIntervalSeconds = groupIntervalSeconds;
            _resultValue.groupWaitSeconds = groupWaitSeconds;
            _resultValue.id = id;
            _resultValue.inherited = inherited;
            _resultValue.labels = labels;
            _resultValue.metricRule = metricRule;
            _resultValue.name = name;
            _resultValue.nodeRule = nodeRule;
            _resultValue.repeatIntervalSeconds = repeatIntervalSeconds;
            _resultValue.severity = severity;
            _resultValue.systemServiceRule = systemServiceRule;
            return _resultValue;
        }
    }
}
