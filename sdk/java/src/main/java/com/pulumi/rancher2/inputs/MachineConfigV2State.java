// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.rancher2.inputs.MachineConfigV2Amazonec2ConfigArgs;
import com.pulumi.rancher2.inputs.MachineConfigV2AzureConfigArgs;
import com.pulumi.rancher2.inputs.MachineConfigV2DigitaloceanConfigArgs;
import com.pulumi.rancher2.inputs.MachineConfigV2HarvesterConfigArgs;
import com.pulumi.rancher2.inputs.MachineConfigV2LinodeConfigArgs;
import com.pulumi.rancher2.inputs.MachineConfigV2OpenstackConfigArgs;
import com.pulumi.rancher2.inputs.MachineConfigV2VsphereConfigArgs;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MachineConfigV2State extends com.pulumi.resources.ResourceArgs {

    public static final MachineConfigV2State Empty = new MachineConfigV2State();

    /**
     * AWS config for the Machine Config V2. Conflicts with `azure_config`, `digitalocean_config`, `harvester_config`, `linode_config`, `openstack_config` and `vsphere_config` (list maxitems:1)
     * 
     */
    @Import(name="amazonec2Config")
    private @Nullable Output<MachineConfigV2Amazonec2ConfigArgs> amazonec2Config;

    /**
     * @return AWS config for the Machine Config V2. Conflicts with `azure_config`, `digitalocean_config`, `harvester_config`, `linode_config`, `openstack_config` and `vsphere_config` (list maxitems:1)
     * 
     */
    public Optional<Output<MachineConfigV2Amazonec2ConfigArgs>> amazonec2Config() {
        return Optional.ofNullable(this.amazonec2Config);
    }

    /**
     * Annotations for Machine Config V2 object (map)
     * 
     */
    @Import(name="annotations")
    private @Nullable Output<Map<String,Object>> annotations;

    /**
     * @return Annotations for Machine Config V2 object (map)
     * 
     */
    public Optional<Output<Map<String,Object>>> annotations() {
        return Optional.ofNullable(this.annotations);
    }

    /**
     * Azure config for the Machine Config V2. Conflicts with `amazonec2_config`, `digitalocean_config`, `harvester_config`, `linode_config`, `openstack_config` and `vsphere_config` (list maxitems:1)
     * 
     */
    @Import(name="azureConfig")
    private @Nullable Output<MachineConfigV2AzureConfigArgs> azureConfig;

    /**
     * @return Azure config for the Machine Config V2. Conflicts with `amazonec2_config`, `digitalocean_config`, `harvester_config`, `linode_config`, `openstack_config` and `vsphere_config` (list maxitems:1)
     * 
     */
    public Optional<Output<MachineConfigV2AzureConfigArgs>> azureConfig() {
        return Optional.ofNullable(this.azureConfig);
    }

    /**
     * Digitalocean config for the Machine Config V2. Conflicts with `amazonec2_config`, `azure_config`, `harvester_config`, `linode_config`, `openstack_config` and `vsphere_config` (list maxitems:1)
     * 
     */
    @Import(name="digitaloceanConfig")
    private @Nullable Output<MachineConfigV2DigitaloceanConfigArgs> digitaloceanConfig;

    /**
     * @return Digitalocean config for the Machine Config V2. Conflicts with `amazonec2_config`, `azure_config`, `harvester_config`, `linode_config`, `openstack_config` and `vsphere_config` (list maxitems:1)
     * 
     */
    public Optional<Output<MachineConfigV2DigitaloceanConfigArgs>> digitaloceanConfig() {
        return Optional.ofNullable(this.digitaloceanConfig);
    }

    /**
     * Cluster V2 fleet namespace
     * 
     */
    @Import(name="fleetNamespace")
    private @Nullable Output<String> fleetNamespace;

    /**
     * @return Cluster V2 fleet namespace
     * 
     */
    public Optional<Output<String>> fleetNamespace() {
        return Optional.ofNullable(this.fleetNamespace);
    }

    /**
     * Cluster V2 generate name. The pattern to generate machine config name. e.g  generate_name=\&#34;prod-pool1\&#34; will generate \&#34;nc-prod-pool1-?????\&#34; name computed at `name` attribute (string)
     * 
     */
    @Import(name="generateName")
    private @Nullable Output<String> generateName;

    /**
     * @return Cluster V2 generate name. The pattern to generate machine config name. e.g  generate_name=\&#34;prod-pool1\&#34; will generate \&#34;nc-prod-pool1-?????\&#34; name computed at `name` attribute (string)
     * 
     */
    public Optional<Output<String>> generateName() {
        return Optional.ofNullable(this.generateName);
    }

    /**
     * Harvester config for the Machine Config V2. Conflicts with `amazonec2_config`, `azure_config`, `digitalocean_config`, `linode_config`, `openstack_config` and `vsphere_config` (list maxitems:1)
     * 
     */
    @Import(name="harvesterConfig")
    private @Nullable Output<MachineConfigV2HarvesterConfigArgs> harvesterConfig;

    /**
     * @return Harvester config for the Machine Config V2. Conflicts with `amazonec2_config`, `azure_config`, `digitalocean_config`, `linode_config`, `openstack_config` and `vsphere_config` (list maxitems:1)
     * 
     */
    public Optional<Output<MachineConfigV2HarvesterConfigArgs>> harvesterConfig() {
        return Optional.ofNullable(this.harvesterConfig);
    }

    /**
     * (Computed) The machine config kind (string)
     * 
     */
    @Import(name="kind")
    private @Nullable Output<String> kind;

    /**
     * @return (Computed) The machine config kind (string)
     * 
     */
    public Optional<Output<String>> kind() {
        return Optional.ofNullable(this.kind);
    }

    /**
     * Labels for Machine Config V2 object (map)
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,Object>> labels;

    /**
     * @return Labels for Machine Config V2 object (map)
     * 
     */
    public Optional<Output<Map<String,Object>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * Linode config for the Machine Config V2. Conflicts with `amazonec2_config`, `azure_config`, `digitalocean_config`, `harvester_config`, `openstack_config` and `vsphere_config` (list maxitems:1)
     * 
     */
    @Import(name="linodeConfig")
    private @Nullable Output<MachineConfigV2LinodeConfigArgs> linodeConfig;

    /**
     * @return Linode config for the Machine Config V2. Conflicts with `amazonec2_config`, `azure_config`, `digitalocean_config`, `harvester_config`, `openstack_config` and `vsphere_config` (list maxitems:1)
     * 
     */
    public Optional<Output<MachineConfigV2LinodeConfigArgs>> linodeConfig() {
        return Optional.ofNullable(this.linodeConfig);
    }

    /**
     * (Computed) The machine config name (string)
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return (Computed) The machine config name (string)
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Openstack config for the Machine Config V2. Conflicts with `amazonec2_config`, `azure_config`, `digitalocean_config`, `harvester_config`, `linode_config` and `vsphere_config` (list maxitems:1)
     * 
     */
    @Import(name="openstackConfig")
    private @Nullable Output<MachineConfigV2OpenstackConfigArgs> openstackConfig;

    /**
     * @return Openstack config for the Machine Config V2. Conflicts with `amazonec2_config`, `azure_config`, `digitalocean_config`, `harvester_config`, `linode_config` and `vsphere_config` (list maxitems:1)
     * 
     */
    public Optional<Output<MachineConfigV2OpenstackConfigArgs>> openstackConfig() {
        return Optional.ofNullable(this.openstackConfig);
    }

    /**
     * (Computed) The machine config k8s resource version (string)
     * 
     */
    @Import(name="resourceVersion")
    private @Nullable Output<String> resourceVersion;

    /**
     * @return (Computed) The machine config k8s resource version (string)
     * 
     */
    public Optional<Output<String>> resourceVersion() {
        return Optional.ofNullable(this.resourceVersion);
    }

    /**
     * vSphere config for the Machine Config V2. Conflicts with `amazonec2_config`, `azure_config`, `digitalocean_config`, `harvester_config`, `linode_config` and `openstack_config` (list maxitems:1)
     * 
     */
    @Import(name="vsphereConfig")
    private @Nullable Output<MachineConfigV2VsphereConfigArgs> vsphereConfig;

    /**
     * @return vSphere config for the Machine Config V2. Conflicts with `amazonec2_config`, `azure_config`, `digitalocean_config`, `harvester_config`, `linode_config` and `openstack_config` (list maxitems:1)
     * 
     */
    public Optional<Output<MachineConfigV2VsphereConfigArgs>> vsphereConfig() {
        return Optional.ofNullable(this.vsphereConfig);
    }

    private MachineConfigV2State() {}

    private MachineConfigV2State(MachineConfigV2State $) {
        this.amazonec2Config = $.amazonec2Config;
        this.annotations = $.annotations;
        this.azureConfig = $.azureConfig;
        this.digitaloceanConfig = $.digitaloceanConfig;
        this.fleetNamespace = $.fleetNamespace;
        this.generateName = $.generateName;
        this.harvesterConfig = $.harvesterConfig;
        this.kind = $.kind;
        this.labels = $.labels;
        this.linodeConfig = $.linodeConfig;
        this.name = $.name;
        this.openstackConfig = $.openstackConfig;
        this.resourceVersion = $.resourceVersion;
        this.vsphereConfig = $.vsphereConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MachineConfigV2State defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MachineConfigV2State $;

        public Builder() {
            $ = new MachineConfigV2State();
        }

        public Builder(MachineConfigV2State defaults) {
            $ = new MachineConfigV2State(Objects.requireNonNull(defaults));
        }

        /**
         * @param amazonec2Config AWS config for the Machine Config V2. Conflicts with `azure_config`, `digitalocean_config`, `harvester_config`, `linode_config`, `openstack_config` and `vsphere_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder amazonec2Config(@Nullable Output<MachineConfigV2Amazonec2ConfigArgs> amazonec2Config) {
            $.amazonec2Config = amazonec2Config;
            return this;
        }

        /**
         * @param amazonec2Config AWS config for the Machine Config V2. Conflicts with `azure_config`, `digitalocean_config`, `harvester_config`, `linode_config`, `openstack_config` and `vsphere_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder amazonec2Config(MachineConfigV2Amazonec2ConfigArgs amazonec2Config) {
            return amazonec2Config(Output.of(amazonec2Config));
        }

        /**
         * @param annotations Annotations for Machine Config V2 object (map)
         * 
         * @return builder
         * 
         */
        public Builder annotations(@Nullable Output<Map<String,Object>> annotations) {
            $.annotations = annotations;
            return this;
        }

        /**
         * @param annotations Annotations for Machine Config V2 object (map)
         * 
         * @return builder
         * 
         */
        public Builder annotations(Map<String,Object> annotations) {
            return annotations(Output.of(annotations));
        }

        /**
         * @param azureConfig Azure config for the Machine Config V2. Conflicts with `amazonec2_config`, `digitalocean_config`, `harvester_config`, `linode_config`, `openstack_config` and `vsphere_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder azureConfig(@Nullable Output<MachineConfigV2AzureConfigArgs> azureConfig) {
            $.azureConfig = azureConfig;
            return this;
        }

        /**
         * @param azureConfig Azure config for the Machine Config V2. Conflicts with `amazonec2_config`, `digitalocean_config`, `harvester_config`, `linode_config`, `openstack_config` and `vsphere_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder azureConfig(MachineConfigV2AzureConfigArgs azureConfig) {
            return azureConfig(Output.of(azureConfig));
        }

        /**
         * @param digitaloceanConfig Digitalocean config for the Machine Config V2. Conflicts with `amazonec2_config`, `azure_config`, `harvester_config`, `linode_config`, `openstack_config` and `vsphere_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder digitaloceanConfig(@Nullable Output<MachineConfigV2DigitaloceanConfigArgs> digitaloceanConfig) {
            $.digitaloceanConfig = digitaloceanConfig;
            return this;
        }

        /**
         * @param digitaloceanConfig Digitalocean config for the Machine Config V2. Conflicts with `amazonec2_config`, `azure_config`, `harvester_config`, `linode_config`, `openstack_config` and `vsphere_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder digitaloceanConfig(MachineConfigV2DigitaloceanConfigArgs digitaloceanConfig) {
            return digitaloceanConfig(Output.of(digitaloceanConfig));
        }

        /**
         * @param fleetNamespace Cluster V2 fleet namespace
         * 
         * @return builder
         * 
         */
        public Builder fleetNamespace(@Nullable Output<String> fleetNamespace) {
            $.fleetNamespace = fleetNamespace;
            return this;
        }

        /**
         * @param fleetNamespace Cluster V2 fleet namespace
         * 
         * @return builder
         * 
         */
        public Builder fleetNamespace(String fleetNamespace) {
            return fleetNamespace(Output.of(fleetNamespace));
        }

        /**
         * @param generateName Cluster V2 generate name. The pattern to generate machine config name. e.g  generate_name=\&#34;prod-pool1\&#34; will generate \&#34;nc-prod-pool1-?????\&#34; name computed at `name` attribute (string)
         * 
         * @return builder
         * 
         */
        public Builder generateName(@Nullable Output<String> generateName) {
            $.generateName = generateName;
            return this;
        }

        /**
         * @param generateName Cluster V2 generate name. The pattern to generate machine config name. e.g  generate_name=\&#34;prod-pool1\&#34; will generate \&#34;nc-prod-pool1-?????\&#34; name computed at `name` attribute (string)
         * 
         * @return builder
         * 
         */
        public Builder generateName(String generateName) {
            return generateName(Output.of(generateName));
        }

        /**
         * @param harvesterConfig Harvester config for the Machine Config V2. Conflicts with `amazonec2_config`, `azure_config`, `digitalocean_config`, `linode_config`, `openstack_config` and `vsphere_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder harvesterConfig(@Nullable Output<MachineConfigV2HarvesterConfigArgs> harvesterConfig) {
            $.harvesterConfig = harvesterConfig;
            return this;
        }

        /**
         * @param harvesterConfig Harvester config for the Machine Config V2. Conflicts with `amazonec2_config`, `azure_config`, `digitalocean_config`, `linode_config`, `openstack_config` and `vsphere_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder harvesterConfig(MachineConfigV2HarvesterConfigArgs harvesterConfig) {
            return harvesterConfig(Output.of(harvesterConfig));
        }

        /**
         * @param kind (Computed) The machine config kind (string)
         * 
         * @return builder
         * 
         */
        public Builder kind(@Nullable Output<String> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind (Computed) The machine config kind (string)
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param labels Labels for Machine Config V2 object (map)
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,Object>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Labels for Machine Config V2 object (map)
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,Object> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param linodeConfig Linode config for the Machine Config V2. Conflicts with `amazonec2_config`, `azure_config`, `digitalocean_config`, `harvester_config`, `openstack_config` and `vsphere_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder linodeConfig(@Nullable Output<MachineConfigV2LinodeConfigArgs> linodeConfig) {
            $.linodeConfig = linodeConfig;
            return this;
        }

        /**
         * @param linodeConfig Linode config for the Machine Config V2. Conflicts with `amazonec2_config`, `azure_config`, `digitalocean_config`, `harvester_config`, `openstack_config` and `vsphere_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder linodeConfig(MachineConfigV2LinodeConfigArgs linodeConfig) {
            return linodeConfig(Output.of(linodeConfig));
        }

        /**
         * @param name (Computed) The machine config name (string)
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name (Computed) The machine config name (string)
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param openstackConfig Openstack config for the Machine Config V2. Conflicts with `amazonec2_config`, `azure_config`, `digitalocean_config`, `harvester_config`, `linode_config` and `vsphere_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder openstackConfig(@Nullable Output<MachineConfigV2OpenstackConfigArgs> openstackConfig) {
            $.openstackConfig = openstackConfig;
            return this;
        }

        /**
         * @param openstackConfig Openstack config for the Machine Config V2. Conflicts with `amazonec2_config`, `azure_config`, `digitalocean_config`, `harvester_config`, `linode_config` and `vsphere_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder openstackConfig(MachineConfigV2OpenstackConfigArgs openstackConfig) {
            return openstackConfig(Output.of(openstackConfig));
        }

        /**
         * @param resourceVersion (Computed) The machine config k8s resource version (string)
         * 
         * @return builder
         * 
         */
        public Builder resourceVersion(@Nullable Output<String> resourceVersion) {
            $.resourceVersion = resourceVersion;
            return this;
        }

        /**
         * @param resourceVersion (Computed) The machine config k8s resource version (string)
         * 
         * @return builder
         * 
         */
        public Builder resourceVersion(String resourceVersion) {
            return resourceVersion(Output.of(resourceVersion));
        }

        /**
         * @param vsphereConfig vSphere config for the Machine Config V2. Conflicts with `amazonec2_config`, `azure_config`, `digitalocean_config`, `harvester_config`, `linode_config` and `openstack_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder vsphereConfig(@Nullable Output<MachineConfigV2VsphereConfigArgs> vsphereConfig) {
            $.vsphereConfig = vsphereConfig;
            return this;
        }

        /**
         * @param vsphereConfig vSphere config for the Machine Config V2. Conflicts with `amazonec2_config`, `azure_config`, `digitalocean_config`, `harvester_config`, `linode_config` and `openstack_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder vsphereConfig(MachineConfigV2VsphereConfigArgs vsphereConfig) {
            return vsphereConfig(Output.of(vsphereConfig));
        }

        public MachineConfigV2State build() {
            return $;
        }
    }

}
