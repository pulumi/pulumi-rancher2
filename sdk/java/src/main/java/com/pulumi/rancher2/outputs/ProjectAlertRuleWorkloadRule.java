// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ProjectAlertRuleWorkloadRule {
    /**
     * @return Workload rule available percentage. Default: `70` (int)
     * 
     */
    private final @Nullable Integer availablePercentage;
    /**
     * @return Workload rule selector (map)
     * 
     */
    private final @Nullable Map<String,Object> selector;
    /**
     * @return Workload ID (string)
     * 
     */
    private final @Nullable String workloadId;

    @CustomType.Constructor
    private ProjectAlertRuleWorkloadRule(
        @CustomType.Parameter("availablePercentage") @Nullable Integer availablePercentage,
        @CustomType.Parameter("selector") @Nullable Map<String,Object> selector,
        @CustomType.Parameter("workloadId") @Nullable String workloadId) {
        this.availablePercentage = availablePercentage;
        this.selector = selector;
        this.workloadId = workloadId;
    }

    /**
     * @return Workload rule available percentage. Default: `70` (int)
     * 
     */
    public Optional<Integer> availablePercentage() {
        return Optional.ofNullable(this.availablePercentage);
    }
    /**
     * @return Workload rule selector (map)
     * 
     */
    public Map<String,Object> selector() {
        return this.selector == null ? Map.of() : this.selector;
    }
    /**
     * @return Workload ID (string)
     * 
     */
    public Optional<String> workloadId() {
        return Optional.ofNullable(this.workloadId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProjectAlertRuleWorkloadRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer availablePercentage;
        private @Nullable Map<String,Object> selector;
        private @Nullable String workloadId;

        public Builder() {
    	      // Empty
        }

        public Builder(ProjectAlertRuleWorkloadRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availablePercentage = defaults.availablePercentage;
    	      this.selector = defaults.selector;
    	      this.workloadId = defaults.workloadId;
        }

        public Builder availablePercentage(@Nullable Integer availablePercentage) {
            this.availablePercentage = availablePercentage;
            return this;
        }
        public Builder selector(@Nullable Map<String,Object> selector) {
            this.selector = selector;
            return this;
        }
        public Builder workloadId(@Nullable String workloadId) {
            this.workloadId = workloadId;
            return this;
        }        public ProjectAlertRuleWorkloadRule build() {
            return new ProjectAlertRuleWorkloadRule(availablePercentage, selector, workloadId);
        }
    }
}
