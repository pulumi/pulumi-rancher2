// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.rancher2.outputs.GetClusterV2RkeConfigUpgradeStrategyControlPlaneDrainOptions;
import com.pulumi.rancher2.outputs.GetClusterV2RkeConfigUpgradeStrategyWorkerDrainOptions;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetClusterV2RkeConfigUpgradeStrategy {
    private final @Nullable String controlPlaneConcurrency;
    private final @Nullable GetClusterV2RkeConfigUpgradeStrategyControlPlaneDrainOptions controlPlaneDrainOptions;
    private final @Nullable String workerConcurrency;
    private final @Nullable GetClusterV2RkeConfigUpgradeStrategyWorkerDrainOptions workerDrainOptions;

    @CustomType.Constructor
    private GetClusterV2RkeConfigUpgradeStrategy(
        @CustomType.Parameter("controlPlaneConcurrency") @Nullable String controlPlaneConcurrency,
        @CustomType.Parameter("controlPlaneDrainOptions") @Nullable GetClusterV2RkeConfigUpgradeStrategyControlPlaneDrainOptions controlPlaneDrainOptions,
        @CustomType.Parameter("workerConcurrency") @Nullable String workerConcurrency,
        @CustomType.Parameter("workerDrainOptions") @Nullable GetClusterV2RkeConfigUpgradeStrategyWorkerDrainOptions workerDrainOptions) {
        this.controlPlaneConcurrency = controlPlaneConcurrency;
        this.controlPlaneDrainOptions = controlPlaneDrainOptions;
        this.workerConcurrency = workerConcurrency;
        this.workerDrainOptions = workerDrainOptions;
    }

    public Optional<String> controlPlaneConcurrency() {
        return Optional.ofNullable(this.controlPlaneConcurrency);
    }
    public Optional<GetClusterV2RkeConfigUpgradeStrategyControlPlaneDrainOptions> controlPlaneDrainOptions() {
        return Optional.ofNullable(this.controlPlaneDrainOptions);
    }
    public Optional<String> workerConcurrency() {
        return Optional.ofNullable(this.workerConcurrency);
    }
    public Optional<GetClusterV2RkeConfigUpgradeStrategyWorkerDrainOptions> workerDrainOptions() {
        return Optional.ofNullable(this.workerDrainOptions);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterV2RkeConfigUpgradeStrategy defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String controlPlaneConcurrency;
        private @Nullable GetClusterV2RkeConfigUpgradeStrategyControlPlaneDrainOptions controlPlaneDrainOptions;
        private @Nullable String workerConcurrency;
        private @Nullable GetClusterV2RkeConfigUpgradeStrategyWorkerDrainOptions workerDrainOptions;

        public Builder() {
    	      // Empty
        }

        public Builder(GetClusterV2RkeConfigUpgradeStrategy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.controlPlaneConcurrency = defaults.controlPlaneConcurrency;
    	      this.controlPlaneDrainOptions = defaults.controlPlaneDrainOptions;
    	      this.workerConcurrency = defaults.workerConcurrency;
    	      this.workerDrainOptions = defaults.workerDrainOptions;
        }

        public Builder controlPlaneConcurrency(@Nullable String controlPlaneConcurrency) {
            this.controlPlaneConcurrency = controlPlaneConcurrency;
            return this;
        }
        public Builder controlPlaneDrainOptions(@Nullable GetClusterV2RkeConfigUpgradeStrategyControlPlaneDrainOptions controlPlaneDrainOptions) {
            this.controlPlaneDrainOptions = controlPlaneDrainOptions;
            return this;
        }
        public Builder workerConcurrency(@Nullable String workerConcurrency) {
            this.workerConcurrency = workerConcurrency;
            return this;
        }
        public Builder workerDrainOptions(@Nullable GetClusterV2RkeConfigUpgradeStrategyWorkerDrainOptions workerDrainOptions) {
            this.workerDrainOptions = workerDrainOptions;
            return this;
        }        public GetClusterV2RkeConfigUpgradeStrategy build() {
            return new GetClusterV2RkeConfigUpgradeStrategy(controlPlaneConcurrency, controlPlaneDrainOptions, workerConcurrency, workerDrainOptions);
        }
    }
}
