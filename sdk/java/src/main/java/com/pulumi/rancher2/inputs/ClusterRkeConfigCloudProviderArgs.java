// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.rancher2.inputs.ClusterRkeConfigCloudProviderAwsCloudProviderArgs;
import com.pulumi.rancher2.inputs.ClusterRkeConfigCloudProviderAzureCloudProviderArgs;
import com.pulumi.rancher2.inputs.ClusterRkeConfigCloudProviderOpenstackCloudProviderArgs;
import com.pulumi.rancher2.inputs.ClusterRkeConfigCloudProviderVsphereCloudProviderArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterRkeConfigCloudProviderArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterRkeConfigCloudProviderArgs Empty = new ClusterRkeConfigCloudProviderArgs();

    @Import(name="awsCloudProvider")
    private @Nullable Output<ClusterRkeConfigCloudProviderAwsCloudProviderArgs> awsCloudProvider;

    public Optional<Output<ClusterRkeConfigCloudProviderAwsCloudProviderArgs>> awsCloudProvider() {
        return Optional.ofNullable(this.awsCloudProvider);
    }

    @Import(name="azureCloudProvider")
    private @Nullable Output<ClusterRkeConfigCloudProviderAzureCloudProviderArgs> azureCloudProvider;

    public Optional<Output<ClusterRkeConfigCloudProviderAzureCloudProviderArgs>> azureCloudProvider() {
        return Optional.ofNullable(this.azureCloudProvider);
    }

    @Import(name="customCloudProvider")
    private @Nullable Output<String> customCloudProvider;

    public Optional<Output<String>> customCloudProvider() {
        return Optional.ofNullable(this.customCloudProvider);
    }

    /**
     * The name of the Cluster (string)
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Cluster (string)
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="openstackCloudProvider")
    private @Nullable Output<ClusterRkeConfigCloudProviderOpenstackCloudProviderArgs> openstackCloudProvider;

    public Optional<Output<ClusterRkeConfigCloudProviderOpenstackCloudProviderArgs>> openstackCloudProvider() {
        return Optional.ofNullable(this.openstackCloudProvider);
    }

    @Import(name="vsphereCloudProvider")
    private @Nullable Output<ClusterRkeConfigCloudProviderVsphereCloudProviderArgs> vsphereCloudProvider;

    public Optional<Output<ClusterRkeConfigCloudProviderVsphereCloudProviderArgs>> vsphereCloudProvider() {
        return Optional.ofNullable(this.vsphereCloudProvider);
    }

    private ClusterRkeConfigCloudProviderArgs() {}

    private ClusterRkeConfigCloudProviderArgs(ClusterRkeConfigCloudProviderArgs $) {
        this.awsCloudProvider = $.awsCloudProvider;
        this.azureCloudProvider = $.azureCloudProvider;
        this.customCloudProvider = $.customCloudProvider;
        this.name = $.name;
        this.openstackCloudProvider = $.openstackCloudProvider;
        this.vsphereCloudProvider = $.vsphereCloudProvider;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterRkeConfigCloudProviderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterRkeConfigCloudProviderArgs $;

        public Builder() {
            $ = new ClusterRkeConfigCloudProviderArgs();
        }

        public Builder(ClusterRkeConfigCloudProviderArgs defaults) {
            $ = new ClusterRkeConfigCloudProviderArgs(Objects.requireNonNull(defaults));
        }

        public Builder awsCloudProvider(@Nullable Output<ClusterRkeConfigCloudProviderAwsCloudProviderArgs> awsCloudProvider) {
            $.awsCloudProvider = awsCloudProvider;
            return this;
        }

        public Builder awsCloudProvider(ClusterRkeConfigCloudProviderAwsCloudProviderArgs awsCloudProvider) {
            return awsCloudProvider(Output.of(awsCloudProvider));
        }

        public Builder azureCloudProvider(@Nullable Output<ClusterRkeConfigCloudProviderAzureCloudProviderArgs> azureCloudProvider) {
            $.azureCloudProvider = azureCloudProvider;
            return this;
        }

        public Builder azureCloudProvider(ClusterRkeConfigCloudProviderAzureCloudProviderArgs azureCloudProvider) {
            return azureCloudProvider(Output.of(azureCloudProvider));
        }

        public Builder customCloudProvider(@Nullable Output<String> customCloudProvider) {
            $.customCloudProvider = customCloudProvider;
            return this;
        }

        public Builder customCloudProvider(String customCloudProvider) {
            return customCloudProvider(Output.of(customCloudProvider));
        }

        /**
         * @param name The name of the Cluster (string)
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Cluster (string)
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder openstackCloudProvider(@Nullable Output<ClusterRkeConfigCloudProviderOpenstackCloudProviderArgs> openstackCloudProvider) {
            $.openstackCloudProvider = openstackCloudProvider;
            return this;
        }

        public Builder openstackCloudProvider(ClusterRkeConfigCloudProviderOpenstackCloudProviderArgs openstackCloudProvider) {
            return openstackCloudProvider(Output.of(openstackCloudProvider));
        }

        public Builder vsphereCloudProvider(@Nullable Output<ClusterRkeConfigCloudProviderVsphereCloudProviderArgs> vsphereCloudProvider) {
            $.vsphereCloudProvider = vsphereCloudProvider;
            return this;
        }

        public Builder vsphereCloudProvider(ClusterRkeConfigCloudProviderVsphereCloudProviderArgs vsphereCloudProvider) {
            return vsphereCloudProvider(Output.of(vsphereCloudProvider));
        }

        public ClusterRkeConfigCloudProviderArgs build() {
            return $;
        }
    }

}
