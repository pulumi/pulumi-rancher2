// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.rancher2.outputs.GetClusterRke2ConfigUpgradeStrategy;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetClusterRke2Config {
    private final GetClusterRke2ConfigUpgradeStrategy upgradeStrategy;
    private final String version;

    @CustomType.Constructor
    private GetClusterRke2Config(
        @CustomType.Parameter("upgradeStrategy") GetClusterRke2ConfigUpgradeStrategy upgradeStrategy,
        @CustomType.Parameter("version") String version) {
        this.upgradeStrategy = upgradeStrategy;
        this.version = version;
    }

    public GetClusterRke2ConfigUpgradeStrategy upgradeStrategy() {
        return this.upgradeStrategy;
    }
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterRke2Config defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetClusterRke2ConfigUpgradeStrategy upgradeStrategy;
        private String version;

        public Builder() {
    	      // Empty
        }

        public Builder(GetClusterRke2Config defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.upgradeStrategy = defaults.upgradeStrategy;
    	      this.version = defaults.version;
        }

        public Builder upgradeStrategy(GetClusterRke2ConfigUpgradeStrategy upgradeStrategy) {
            this.upgradeStrategy = Objects.requireNonNull(upgradeStrategy);
            return this;
        }
        public Builder version(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }        public GetClusterRke2Config build() {
            return new GetClusterRke2Config(upgradeStrategy, version);
        }
    }
}
