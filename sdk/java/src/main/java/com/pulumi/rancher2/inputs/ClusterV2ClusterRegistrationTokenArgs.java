// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterV2ClusterRegistrationTokenArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterV2ClusterRegistrationTokenArgs Empty = new ClusterV2ClusterRegistrationTokenArgs();

    /**
     * Annotations for the Cluster.
     * 
     */
    @Import(name="annotations")
    private @Nullable Output<Map<String,Object>> annotations;

    /**
     * @return Annotations for the Cluster.
     * 
     */
    public Optional<Output<Map<String,Object>>> annotations() {
        return Optional.ofNullable(this.annotations);
    }

    @Import(name="clusterId")
    private @Nullable Output<String> clusterId;

    public Optional<Output<String>> clusterId() {
        return Optional.ofNullable(this.clusterId);
    }

    @Import(name="command")
    private @Nullable Output<String> command;

    public Optional<Output<String>> command() {
        return Optional.ofNullable(this.command);
    }

    /**
     * (Computed, string) The ID of the resource.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return (Computed, string) The ID of the resource.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    @Import(name="insecureCommand")
    private @Nullable Output<String> insecureCommand;

    public Optional<Output<String>> insecureCommand() {
        return Optional.ofNullable(this.insecureCommand);
    }

    @Import(name="insecureNodeCommand")
    private @Nullable Output<String> insecureNodeCommand;

    public Optional<Output<String>> insecureNodeCommand() {
        return Optional.ofNullable(this.insecureNodeCommand);
    }

    @Import(name="insecureWindowsNodeCommand")
    private @Nullable Output<String> insecureWindowsNodeCommand;

    public Optional<Output<String>> insecureWindowsNodeCommand() {
        return Optional.ofNullable(this.insecureWindowsNodeCommand);
    }

    /**
     * Labels for the Cluster.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,Object>> labels;

    /**
     * @return Labels for the Cluster.
     * 
     */
    public Optional<Output<Map<String,Object>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    @Import(name="manifestUrl")
    private @Nullable Output<String> manifestUrl;

    public Optional<Output<String>> manifestUrl() {
        return Optional.ofNullable(this.manifestUrl);
    }

    /**
     * The name of the cluster.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the cluster.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="nodeCommand")
    private @Nullable Output<String> nodeCommand;

    public Optional<Output<String>> nodeCommand() {
        return Optional.ofNullable(this.nodeCommand);
    }

    @Import(name="token")
    private @Nullable Output<String> token;

    public Optional<Output<String>> token() {
        return Optional.ofNullable(this.token);
    }

    @Import(name="windowsNodeCommand")
    private @Nullable Output<String> windowsNodeCommand;

    public Optional<Output<String>> windowsNodeCommand() {
        return Optional.ofNullable(this.windowsNodeCommand);
    }

    private ClusterV2ClusterRegistrationTokenArgs() {}

    private ClusterV2ClusterRegistrationTokenArgs(ClusterV2ClusterRegistrationTokenArgs $) {
        this.annotations = $.annotations;
        this.clusterId = $.clusterId;
        this.command = $.command;
        this.id = $.id;
        this.insecureCommand = $.insecureCommand;
        this.insecureNodeCommand = $.insecureNodeCommand;
        this.insecureWindowsNodeCommand = $.insecureWindowsNodeCommand;
        this.labels = $.labels;
        this.manifestUrl = $.manifestUrl;
        this.name = $.name;
        this.nodeCommand = $.nodeCommand;
        this.token = $.token;
        this.windowsNodeCommand = $.windowsNodeCommand;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterV2ClusterRegistrationTokenArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterV2ClusterRegistrationTokenArgs $;

        public Builder() {
            $ = new ClusterV2ClusterRegistrationTokenArgs();
        }

        public Builder(ClusterV2ClusterRegistrationTokenArgs defaults) {
            $ = new ClusterV2ClusterRegistrationTokenArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param annotations Annotations for the Cluster.
         * 
         * @return builder
         * 
         */
        public Builder annotations(@Nullable Output<Map<String,Object>> annotations) {
            $.annotations = annotations;
            return this;
        }

        /**
         * @param annotations Annotations for the Cluster.
         * 
         * @return builder
         * 
         */
        public Builder annotations(Map<String,Object> annotations) {
            return annotations(Output.of(annotations));
        }

        public Builder clusterId(@Nullable Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        public Builder command(@Nullable Output<String> command) {
            $.command = command;
            return this;
        }

        public Builder command(String command) {
            return command(Output.of(command));
        }

        /**
         * @param id (Computed, string) The ID of the resource.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id (Computed, string) The ID of the resource.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder insecureCommand(@Nullable Output<String> insecureCommand) {
            $.insecureCommand = insecureCommand;
            return this;
        }

        public Builder insecureCommand(String insecureCommand) {
            return insecureCommand(Output.of(insecureCommand));
        }

        public Builder insecureNodeCommand(@Nullable Output<String> insecureNodeCommand) {
            $.insecureNodeCommand = insecureNodeCommand;
            return this;
        }

        public Builder insecureNodeCommand(String insecureNodeCommand) {
            return insecureNodeCommand(Output.of(insecureNodeCommand));
        }

        public Builder insecureWindowsNodeCommand(@Nullable Output<String> insecureWindowsNodeCommand) {
            $.insecureWindowsNodeCommand = insecureWindowsNodeCommand;
            return this;
        }

        public Builder insecureWindowsNodeCommand(String insecureWindowsNodeCommand) {
            return insecureWindowsNodeCommand(Output.of(insecureWindowsNodeCommand));
        }

        /**
         * @param labels Labels for the Cluster.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,Object>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Labels for the Cluster.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,Object> labels) {
            return labels(Output.of(labels));
        }

        public Builder manifestUrl(@Nullable Output<String> manifestUrl) {
            $.manifestUrl = manifestUrl;
            return this;
        }

        public Builder manifestUrl(String manifestUrl) {
            return manifestUrl(Output.of(manifestUrl));
        }

        /**
         * @param name The name of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder nodeCommand(@Nullable Output<String> nodeCommand) {
            $.nodeCommand = nodeCommand;
            return this;
        }

        public Builder nodeCommand(String nodeCommand) {
            return nodeCommand(Output.of(nodeCommand));
        }

        public Builder token(@Nullable Output<String> token) {
            $.token = token;
            return this;
        }

        public Builder token(String token) {
            return token(Output.of(token));
        }

        public Builder windowsNodeCommand(@Nullable Output<String> windowsNodeCommand) {
            $.windowsNodeCommand = windowsNodeCommand;
            return this;
        }

        public Builder windowsNodeCommand(String windowsNodeCommand) {
            return windowsNodeCommand(Output.of(windowsNodeCommand));
        }

        public ClusterV2ClusterRegistrationTokenArgs build() {
            return $;
        }
    }

}
