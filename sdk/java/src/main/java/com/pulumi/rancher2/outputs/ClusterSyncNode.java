// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterSyncNode {
    /**
     * @return Annotations of the node (map).
     * 
     */
    private final @Nullable Map<String,Object> annotations;
    /**
     * @return The total resources of a node (map).
     * 
     */
    private final @Nullable Map<String,Object> capacity;
    /**
     * @return The Cluster ID of the node (string).
     * 
     */
    private final @Nullable String clusterId;
    /**
     * @return The external IP address of the node (string).
     * 
     */
    private final @Nullable String externalIpAddress;
    /**
     * @return The hostname of the node (string).
     * 
     */
    private final @Nullable String hostname;
    /**
     * @return The ID of the node (string)
     * 
     */
    private final @Nullable String id;
    /**
     * @return The private IP address of the node (string).
     * 
     */
    private final @Nullable String ipAddress;
    /**
     * @return Labels of the node (map).
     * 
     */
    private final @Nullable Map<String,Object> labels;
    /**
     * @return The name of the node (string).
     * 
     */
    private final @Nullable String name;
    /**
     * @return The Node Pool ID of the node (string).
     * 
     */
    private final @Nullable String nodePoolId;
    /**
     * @return The Node Template ID of the node (string).
     * 
     */
    private final @Nullable String nodeTemplateId;
    /**
     * @return The Provider ID of the node (string).
     * 
     */
    private final @Nullable String providerId;
    /**
     * @return The requested hostname (string).
     * 
     */
    private final @Nullable String requestedHostname;
    /**
     * @return Roles of the node. `controlplane`, `etcd` and `worker`. (list)
     * 
     */
    private final @Nullable List<String> roles;
    /**
     * @return The user to connect to the node (string).
     * 
     */
    private final @Nullable String sshUser;
    /**
     * @return General information about the node, such as kernel version, kubelet and kube-proxy version, Docker version (if used), and OS name.
     * 
     */
    private final @Nullable Map<String,Object> systemInfo;

    @CustomType.Constructor
    private ClusterSyncNode(
        @CustomType.Parameter("annotations") @Nullable Map<String,Object> annotations,
        @CustomType.Parameter("capacity") @Nullable Map<String,Object> capacity,
        @CustomType.Parameter("clusterId") @Nullable String clusterId,
        @CustomType.Parameter("externalIpAddress") @Nullable String externalIpAddress,
        @CustomType.Parameter("hostname") @Nullable String hostname,
        @CustomType.Parameter("id") @Nullable String id,
        @CustomType.Parameter("ipAddress") @Nullable String ipAddress,
        @CustomType.Parameter("labels") @Nullable Map<String,Object> labels,
        @CustomType.Parameter("name") @Nullable String name,
        @CustomType.Parameter("nodePoolId") @Nullable String nodePoolId,
        @CustomType.Parameter("nodeTemplateId") @Nullable String nodeTemplateId,
        @CustomType.Parameter("providerId") @Nullable String providerId,
        @CustomType.Parameter("requestedHostname") @Nullable String requestedHostname,
        @CustomType.Parameter("roles") @Nullable List<String> roles,
        @CustomType.Parameter("sshUser") @Nullable String sshUser,
        @CustomType.Parameter("systemInfo") @Nullable Map<String,Object> systemInfo) {
        this.annotations = annotations;
        this.capacity = capacity;
        this.clusterId = clusterId;
        this.externalIpAddress = externalIpAddress;
        this.hostname = hostname;
        this.id = id;
        this.ipAddress = ipAddress;
        this.labels = labels;
        this.name = name;
        this.nodePoolId = nodePoolId;
        this.nodeTemplateId = nodeTemplateId;
        this.providerId = providerId;
        this.requestedHostname = requestedHostname;
        this.roles = roles;
        this.sshUser = sshUser;
        this.systemInfo = systemInfo;
    }

    /**
     * @return Annotations of the node (map).
     * 
     */
    public Map<String,Object> annotations() {
        return this.annotations == null ? Map.of() : this.annotations;
    }
    /**
     * @return The total resources of a node (map).
     * 
     */
    public Map<String,Object> capacity() {
        return this.capacity == null ? Map.of() : this.capacity;
    }
    /**
     * @return The Cluster ID of the node (string).
     * 
     */
    public Optional<String> clusterId() {
        return Optional.ofNullable(this.clusterId);
    }
    /**
     * @return The external IP address of the node (string).
     * 
     */
    public Optional<String> externalIpAddress() {
        return Optional.ofNullable(this.externalIpAddress);
    }
    /**
     * @return The hostname of the node (string).
     * 
     */
    public Optional<String> hostname() {
        return Optional.ofNullable(this.hostname);
    }
    /**
     * @return The ID of the node (string)
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The private IP address of the node (string).
     * 
     */
    public Optional<String> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }
    /**
     * @return Labels of the node (map).
     * 
     */
    public Map<String,Object> labels() {
        return this.labels == null ? Map.of() : this.labels;
    }
    /**
     * @return The name of the node (string).
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The Node Pool ID of the node (string).
     * 
     */
    public Optional<String> nodePoolId() {
        return Optional.ofNullable(this.nodePoolId);
    }
    /**
     * @return The Node Template ID of the node (string).
     * 
     */
    public Optional<String> nodeTemplateId() {
        return Optional.ofNullable(this.nodeTemplateId);
    }
    /**
     * @return The Provider ID of the node (string).
     * 
     */
    public Optional<String> providerId() {
        return Optional.ofNullable(this.providerId);
    }
    /**
     * @return The requested hostname (string).
     * 
     */
    public Optional<String> requestedHostname() {
        return Optional.ofNullable(this.requestedHostname);
    }
    /**
     * @return Roles of the node. `controlplane`, `etcd` and `worker`. (list)
     * 
     */
    public List<String> roles() {
        return this.roles == null ? List.of() : this.roles;
    }
    /**
     * @return The user to connect to the node (string).
     * 
     */
    public Optional<String> sshUser() {
        return Optional.ofNullable(this.sshUser);
    }
    /**
     * @return General information about the node, such as kernel version, kubelet and kube-proxy version, Docker version (if used), and OS name.
     * 
     */
    public Map<String,Object> systemInfo() {
        return this.systemInfo == null ? Map.of() : this.systemInfo;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterSyncNode defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Map<String,Object> annotations;
        private @Nullable Map<String,Object> capacity;
        private @Nullable String clusterId;
        private @Nullable String externalIpAddress;
        private @Nullable String hostname;
        private @Nullable String id;
        private @Nullable String ipAddress;
        private @Nullable Map<String,Object> labels;
        private @Nullable String name;
        private @Nullable String nodePoolId;
        private @Nullable String nodeTemplateId;
        private @Nullable String providerId;
        private @Nullable String requestedHostname;
        private @Nullable List<String> roles;
        private @Nullable String sshUser;
        private @Nullable Map<String,Object> systemInfo;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterSyncNode defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.annotations = defaults.annotations;
    	      this.capacity = defaults.capacity;
    	      this.clusterId = defaults.clusterId;
    	      this.externalIpAddress = defaults.externalIpAddress;
    	      this.hostname = defaults.hostname;
    	      this.id = defaults.id;
    	      this.ipAddress = defaults.ipAddress;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.nodePoolId = defaults.nodePoolId;
    	      this.nodeTemplateId = defaults.nodeTemplateId;
    	      this.providerId = defaults.providerId;
    	      this.requestedHostname = defaults.requestedHostname;
    	      this.roles = defaults.roles;
    	      this.sshUser = defaults.sshUser;
    	      this.systemInfo = defaults.systemInfo;
        }

        public Builder annotations(@Nullable Map<String,Object> annotations) {
            this.annotations = annotations;
            return this;
        }
        public Builder capacity(@Nullable Map<String,Object> capacity) {
            this.capacity = capacity;
            return this;
        }
        public Builder clusterId(@Nullable String clusterId) {
            this.clusterId = clusterId;
            return this;
        }
        public Builder externalIpAddress(@Nullable String externalIpAddress) {
            this.externalIpAddress = externalIpAddress;
            return this;
        }
        public Builder hostname(@Nullable String hostname) {
            this.hostname = hostname;
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public Builder ipAddress(@Nullable String ipAddress) {
            this.ipAddress = ipAddress;
            return this;
        }
        public Builder labels(@Nullable Map<String,Object> labels) {
            this.labels = labels;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder nodePoolId(@Nullable String nodePoolId) {
            this.nodePoolId = nodePoolId;
            return this;
        }
        public Builder nodeTemplateId(@Nullable String nodeTemplateId) {
            this.nodeTemplateId = nodeTemplateId;
            return this;
        }
        public Builder providerId(@Nullable String providerId) {
            this.providerId = providerId;
            return this;
        }
        public Builder requestedHostname(@Nullable String requestedHostname) {
            this.requestedHostname = requestedHostname;
            return this;
        }
        public Builder roles(@Nullable List<String> roles) {
            this.roles = roles;
            return this;
        }
        public Builder roles(String... roles) {
            return roles(List.of(roles));
        }
        public Builder sshUser(@Nullable String sshUser) {
            this.sshUser = sshUser;
            return this;
        }
        public Builder systemInfo(@Nullable Map<String,Object> systemInfo) {
            this.systemInfo = systemInfo;
            return this;
        }        public ClusterSyncNode build() {
            return new ClusterSyncNode(annotations, capacity, clusterId, externalIpAddress, hostname, id, ipAddress, labels, name, nodePoolId, nodeTemplateId, providerId, requestedHostname, roles, sshUser, systemInfo);
        }
    }
}
