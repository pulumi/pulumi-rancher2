// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.rancher2.inputs.ClusterV2RkeConfigMachineSelectorFileFileSourceConfigmapArgs;
import com.pulumi.rancher2.inputs.ClusterV2RkeConfigMachineSelectorFileFileSourceSecretArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterV2RkeConfigMachineSelectorFileFileSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterV2RkeConfigMachineSelectorFileFileSourceArgs Empty = new ClusterV2RkeConfigMachineSelectorFileFileSourceArgs();

    /**
     * The configmap which is the source of files
     * 
     */
    @Import(name="configmap")
    private @Nullable Output<ClusterV2RkeConfigMachineSelectorFileFileSourceConfigmapArgs> configmap;

    /**
     * @return The configmap which is the source of files
     * 
     */
    public Optional<Output<ClusterV2RkeConfigMachineSelectorFileFileSourceConfigmapArgs>> configmap() {
        return Optional.ofNullable(this.configmap);
    }

    /**
     * The secret which is the source of files
     * 
     */
    @Import(name="secret")
    private @Nullable Output<ClusterV2RkeConfigMachineSelectorFileFileSourceSecretArgs> secret;

    /**
     * @return The secret which is the source of files
     * 
     */
    public Optional<Output<ClusterV2RkeConfigMachineSelectorFileFileSourceSecretArgs>> secret() {
        return Optional.ofNullable(this.secret);
    }

    private ClusterV2RkeConfigMachineSelectorFileFileSourceArgs() {}

    private ClusterV2RkeConfigMachineSelectorFileFileSourceArgs(ClusterV2RkeConfigMachineSelectorFileFileSourceArgs $) {
        this.configmap = $.configmap;
        this.secret = $.secret;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterV2RkeConfigMachineSelectorFileFileSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterV2RkeConfigMachineSelectorFileFileSourceArgs $;

        public Builder() {
            $ = new ClusterV2RkeConfigMachineSelectorFileFileSourceArgs();
        }

        public Builder(ClusterV2RkeConfigMachineSelectorFileFileSourceArgs defaults) {
            $ = new ClusterV2RkeConfigMachineSelectorFileFileSourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configmap The configmap which is the source of files
         * 
         * @return builder
         * 
         */
        public Builder configmap(@Nullable Output<ClusterV2RkeConfigMachineSelectorFileFileSourceConfigmapArgs> configmap) {
            $.configmap = configmap;
            return this;
        }

        /**
         * @param configmap The configmap which is the source of files
         * 
         * @return builder
         * 
         */
        public Builder configmap(ClusterV2RkeConfigMachineSelectorFileFileSourceConfigmapArgs configmap) {
            return configmap(Output.of(configmap));
        }

        /**
         * @param secret The secret which is the source of files
         * 
         * @return builder
         * 
         */
        public Builder secret(@Nullable Output<ClusterV2RkeConfigMachineSelectorFileFileSourceSecretArgs> secret) {
            $.secret = secret;
            return this;
        }

        /**
         * @param secret The secret which is the source of files
         * 
         * @return builder
         * 
         */
        public Builder secret(ClusterV2RkeConfigMachineSelectorFileFileSourceSecretArgs secret) {
            return secret(Output.of(secret));
        }

        public ClusterV2RkeConfigMachineSelectorFileFileSourceArgs build() {
            return $;
        }
    }

}
