// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.rancher2.inputs.ClusterRke2ConfigUpgradeStrategyArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterRke2ConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterRke2ConfigArgs Empty = new ClusterRke2ConfigArgs();

    /**
     * The RKE2 upgrade strategy
     * 
     */
    @Import(name="upgradeStrategy")
    private @Nullable Output<ClusterRke2ConfigUpgradeStrategyArgs> upgradeStrategy;

    /**
     * @return The RKE2 upgrade strategy
     * 
     */
    public Optional<Output<ClusterRke2ConfigUpgradeStrategyArgs>> upgradeStrategy() {
        return Optional.ofNullable(this.upgradeStrategy);
    }

    /**
     * The RKE2 kubernetes version
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return The RKE2 kubernetes version
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private ClusterRke2ConfigArgs() {}

    private ClusterRke2ConfigArgs(ClusterRke2ConfigArgs $) {
        this.upgradeStrategy = $.upgradeStrategy;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterRke2ConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterRke2ConfigArgs $;

        public Builder() {
            $ = new ClusterRke2ConfigArgs();
        }

        public Builder(ClusterRke2ConfigArgs defaults) {
            $ = new ClusterRke2ConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param upgradeStrategy The RKE2 upgrade strategy
         * 
         * @return builder
         * 
         */
        public Builder upgradeStrategy(@Nullable Output<ClusterRke2ConfigUpgradeStrategyArgs> upgradeStrategy) {
            $.upgradeStrategy = upgradeStrategy;
            return this;
        }

        /**
         * @param upgradeStrategy The RKE2 upgrade strategy
         * 
         * @return builder
         * 
         */
        public Builder upgradeStrategy(ClusterRke2ConfigUpgradeStrategyArgs upgradeStrategy) {
            return upgradeStrategy(Output.of(upgradeStrategy));
        }

        /**
         * @param version The RKE2 kubernetes version
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The RKE2 kubernetes version
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public ClusterRke2ConfigArgs build() {
            return $;
        }
    }

}
