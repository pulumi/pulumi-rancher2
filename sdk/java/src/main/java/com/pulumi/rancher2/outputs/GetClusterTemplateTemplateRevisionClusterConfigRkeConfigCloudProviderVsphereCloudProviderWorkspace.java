// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProviderWorkspace {
    private String datacenter;
    private String defaultDatastore;
    private String folder;
    private String resourcepoolPath;
    private String server;

    private GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProviderWorkspace() {}
    public String datacenter() {
        return this.datacenter;
    }
    public String defaultDatastore() {
        return this.defaultDatastore;
    }
    public String folder() {
        return this.folder;
    }
    public String resourcepoolPath() {
        return this.resourcepoolPath;
    }
    public String server() {
        return this.server;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProviderWorkspace defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String datacenter;
        private String defaultDatastore;
        private String folder;
        private String resourcepoolPath;
        private String server;
        public Builder() {}
        public Builder(GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProviderWorkspace defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.datacenter = defaults.datacenter;
    	      this.defaultDatastore = defaults.defaultDatastore;
    	      this.folder = defaults.folder;
    	      this.resourcepoolPath = defaults.resourcepoolPath;
    	      this.server = defaults.server;
        }

        @CustomType.Setter
        public Builder datacenter(String datacenter) {
            if (datacenter == null) {
              throw new MissingRequiredPropertyException("GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProviderWorkspace", "datacenter");
            }
            this.datacenter = datacenter;
            return this;
        }
        @CustomType.Setter
        public Builder defaultDatastore(String defaultDatastore) {
            if (defaultDatastore == null) {
              throw new MissingRequiredPropertyException("GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProviderWorkspace", "defaultDatastore");
            }
            this.defaultDatastore = defaultDatastore;
            return this;
        }
        @CustomType.Setter
        public Builder folder(String folder) {
            if (folder == null) {
              throw new MissingRequiredPropertyException("GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProviderWorkspace", "folder");
            }
            this.folder = folder;
            return this;
        }
        @CustomType.Setter
        public Builder resourcepoolPath(String resourcepoolPath) {
            if (resourcepoolPath == null) {
              throw new MissingRequiredPropertyException("GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProviderWorkspace", "resourcepoolPath");
            }
            this.resourcepoolPath = resourcepoolPath;
            return this;
        }
        @CustomType.Setter
        public Builder server(String server) {
            if (server == null) {
              throw new MissingRequiredPropertyException("GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProviderWorkspace", "server");
            }
            this.server = server;
            return this;
        }
        public GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProviderWorkspace build() {
            final var _resultValue = new GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProviderWorkspace();
            _resultValue.datacenter = datacenter;
            _resultValue.defaultDatastore = defaultDatastore;
            _resultValue.folder = folder;
            _resultValue.resourcepoolPath = resourcepoolPath;
            _resultValue.server = server;
            return _resultValue;
        }
    }
}
