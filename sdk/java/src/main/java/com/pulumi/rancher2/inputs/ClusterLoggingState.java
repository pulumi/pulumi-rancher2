// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.rancher2.inputs.ClusterLoggingCustomTargetConfigArgs;
import com.pulumi.rancher2.inputs.ClusterLoggingElasticsearchConfigArgs;
import com.pulumi.rancher2.inputs.ClusterLoggingFluentdConfigArgs;
import com.pulumi.rancher2.inputs.ClusterLoggingKafkaConfigArgs;
import com.pulumi.rancher2.inputs.ClusterLoggingSplunkConfigArgs;
import com.pulumi.rancher2.inputs.ClusterLoggingSyslogConfigArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterLoggingState extends com.pulumi.resources.ResourceArgs {

    public static final ClusterLoggingState Empty = new ClusterLoggingState();

    /**
     * Annotations for Cluster Logging object (map)
     * 
     */
    @Import(name="annotations")
    private @Nullable Output<Map<String,Object>> annotations;

    /**
     * @return Annotations for Cluster Logging object (map)
     * 
     */
    public Optional<Output<Map<String,Object>>> annotations() {
        return Optional.ofNullable(this.annotations);
    }

    /**
     * The cluster id to configure logging (string)
     * 
     */
    @Import(name="clusterId")
    private @Nullable Output<String> clusterId;

    /**
     * @return The cluster id to configure logging (string)
     * 
     */
    public Optional<Output<String>> clusterId() {
        return Optional.ofNullable(this.clusterId);
    }

    /**
     * The custom target config for Cluster Logging. For `kind = custom`. Conflicts with `elasticsearch_config`, `fluentd_config`, `kafka_config`, `splunk_config` and `syslog_config` (list maxitems:1)
     * 
     */
    @Import(name="customTargetConfig")
    private @Nullable Output<ClusterLoggingCustomTargetConfigArgs> customTargetConfig;

    /**
     * @return The custom target config for Cluster Logging. For `kind = custom`. Conflicts with `elasticsearch_config`, `fluentd_config`, `kafka_config`, `splunk_config` and `syslog_config` (list maxitems:1)
     * 
     */
    public Optional<Output<ClusterLoggingCustomTargetConfigArgs>> customTargetConfig() {
        return Optional.ofNullable(this.customTargetConfig);
    }

    /**
     * The elasticsearch config for Cluster Logging. For `kind = elasticsearch`. Conflicts with `custom_target_config`, `fluentd_config`, `kafka_config`, `splunk_config` and `syslog_config` (list maxitems:1)
     * 
     */
    @Import(name="elasticsearchConfig")
    private @Nullable Output<ClusterLoggingElasticsearchConfigArgs> elasticsearchConfig;

    /**
     * @return The elasticsearch config for Cluster Logging. For `kind = elasticsearch`. Conflicts with `custom_target_config`, `fluentd_config`, `kafka_config`, `splunk_config` and `syslog_config` (list maxitems:1)
     * 
     */
    public Optional<Output<ClusterLoggingElasticsearchConfigArgs>> elasticsearchConfig() {
        return Optional.ofNullable(this.elasticsearchConfig);
    }

    /**
     * Enable json log parsing. Default: `false` (bool)
     * 
     */
    @Import(name="enableJsonParsing")
    private @Nullable Output<Boolean> enableJsonParsing;

    /**
     * @return Enable json log parsing. Default: `false` (bool)
     * 
     */
    public Optional<Output<Boolean>> enableJsonParsing() {
        return Optional.ofNullable(this.enableJsonParsing);
    }

    /**
     * The fluentd config for Cluster Logging. For `kind = fluentd`. Conflicts with `custom_target_config`, `elasticsearch_config`, `kafka_config`, `splunk_config` and `syslog_config` (list maxitems:1)
     * 
     */
    @Import(name="fluentdConfig")
    private @Nullable Output<ClusterLoggingFluentdConfigArgs> fluentdConfig;

    /**
     * @return The fluentd config for Cluster Logging. For `kind = fluentd`. Conflicts with `custom_target_config`, `elasticsearch_config`, `kafka_config`, `splunk_config` and `syslog_config` (list maxitems:1)
     * 
     */
    public Optional<Output<ClusterLoggingFluentdConfigArgs>> fluentdConfig() {
        return Optional.ofNullable(this.fluentdConfig);
    }

    /**
     * The kafka config for Cluster Logging. For `kind = kafka`. Conflicts with `custom_target_config`, `elasticsearch_config`, `fluentd_config`, `splunk_config` and `syslog_config` (list maxitems:1)
     * 
     */
    @Import(name="kafkaConfig")
    private @Nullable Output<ClusterLoggingKafkaConfigArgs> kafkaConfig;

    /**
     * @return The kafka config for Cluster Logging. For `kind = kafka`. Conflicts with `custom_target_config`, `elasticsearch_config`, `fluentd_config`, `splunk_config` and `syslog_config` (list maxitems:1)
     * 
     */
    public Optional<Output<ClusterLoggingKafkaConfigArgs>> kafkaConfig() {
        return Optional.ofNullable(this.kafkaConfig);
    }

    /**
     * The kind of the Cluster Logging. `elasticsearch`, `fluentd`, `kafka`, `splunk` and `syslog` are supported (string)
     * 
     */
    @Import(name="kind")
    private @Nullable Output<String> kind;

    /**
     * @return The kind of the Cluster Logging. `elasticsearch`, `fluentd`, `kafka`, `splunk` and `syslog` are supported (string)
     * 
     */
    public Optional<Output<String>> kind() {
        return Optional.ofNullable(this.kind);
    }

    /**
     * Labels for Cluster Logging object (map)
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,Object>> labels;

    /**
     * @return Labels for Cluster Logging object (map)
     * 
     */
    public Optional<Output<Map<String,Object>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The name of the cluster logging config (string)
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the cluster logging config (string)
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The namespace id from cluster logging (string)
     * 
     */
    @Import(name="namespaceId")
    private @Nullable Output<String> namespaceId;

    /**
     * @return The namespace id from cluster logging (string)
     * 
     */
    public Optional<Output<String>> namespaceId() {
        return Optional.ofNullable(this.namespaceId);
    }

    /**
     * How often buffered logs would be flushed. Default: `3` seconds (int)
     * 
     */
    @Import(name="outputFlushInterval")
    private @Nullable Output<Integer> outputFlushInterval;

    /**
     * @return How often buffered logs would be flushed. Default: `3` seconds (int)
     * 
     */
    public Optional<Output<Integer>> outputFlushInterval() {
        return Optional.ofNullable(this.outputFlushInterval);
    }

    /**
     * The output tags for Cluster Logging (map)
     * 
     */
    @Import(name="outputTags")
    private @Nullable Output<Map<String,Object>> outputTags;

    /**
     * @return The output tags for Cluster Logging (map)
     * 
     */
    public Optional<Output<Map<String,Object>>> outputTags() {
        return Optional.ofNullable(this.outputTags);
    }

    /**
     * The splunk config for Cluster Logging. For `kind = splunk`. Conflicts with `custom_target_config`, `elasticsearch_config`, `fluentd_config`, `kafka_config`, and `syslog_config` (list maxitems:1)
     * 
     */
    @Import(name="splunkConfig")
    private @Nullable Output<ClusterLoggingSplunkConfigArgs> splunkConfig;

    /**
     * @return The splunk config for Cluster Logging. For `kind = splunk`. Conflicts with `custom_target_config`, `elasticsearch_config`, `fluentd_config`, `kafka_config`, and `syslog_config` (list maxitems:1)
     * 
     */
    public Optional<Output<ClusterLoggingSplunkConfigArgs>> splunkConfig() {
        return Optional.ofNullable(this.splunkConfig);
    }

    /**
     * The syslog config for Cluster Logging. For `kind = syslog`. Conflicts with `custom_target_config`, `elasticsearch_config`, `fluentd_config`, `kafka_config`, and `splunk_config` (list maxitems:1)
     * 
     */
    @Import(name="syslogConfig")
    private @Nullable Output<ClusterLoggingSyslogConfigArgs> syslogConfig;

    /**
     * @return The syslog config for Cluster Logging. For `kind = syslog`. Conflicts with `custom_target_config`, `elasticsearch_config`, `fluentd_config`, `kafka_config`, and `splunk_config` (list maxitems:1)
     * 
     */
    public Optional<Output<ClusterLoggingSyslogConfigArgs>> syslogConfig() {
        return Optional.ofNullable(this.syslogConfig);
    }

    private ClusterLoggingState() {}

    private ClusterLoggingState(ClusterLoggingState $) {
        this.annotations = $.annotations;
        this.clusterId = $.clusterId;
        this.customTargetConfig = $.customTargetConfig;
        this.elasticsearchConfig = $.elasticsearchConfig;
        this.enableJsonParsing = $.enableJsonParsing;
        this.fluentdConfig = $.fluentdConfig;
        this.kafkaConfig = $.kafkaConfig;
        this.kind = $.kind;
        this.labels = $.labels;
        this.name = $.name;
        this.namespaceId = $.namespaceId;
        this.outputFlushInterval = $.outputFlushInterval;
        this.outputTags = $.outputTags;
        this.splunkConfig = $.splunkConfig;
        this.syslogConfig = $.syslogConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterLoggingState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterLoggingState $;

        public Builder() {
            $ = new ClusterLoggingState();
        }

        public Builder(ClusterLoggingState defaults) {
            $ = new ClusterLoggingState(Objects.requireNonNull(defaults));
        }

        /**
         * @param annotations Annotations for Cluster Logging object (map)
         * 
         * @return builder
         * 
         */
        public Builder annotations(@Nullable Output<Map<String,Object>> annotations) {
            $.annotations = annotations;
            return this;
        }

        /**
         * @param annotations Annotations for Cluster Logging object (map)
         * 
         * @return builder
         * 
         */
        public Builder annotations(Map<String,Object> annotations) {
            return annotations(Output.of(annotations));
        }

        /**
         * @param clusterId The cluster id to configure logging (string)
         * 
         * @return builder
         * 
         */
        public Builder clusterId(@Nullable Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        /**
         * @param clusterId The cluster id to configure logging (string)
         * 
         * @return builder
         * 
         */
        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        /**
         * @param customTargetConfig The custom target config for Cluster Logging. For `kind = custom`. Conflicts with `elasticsearch_config`, `fluentd_config`, `kafka_config`, `splunk_config` and `syslog_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder customTargetConfig(@Nullable Output<ClusterLoggingCustomTargetConfigArgs> customTargetConfig) {
            $.customTargetConfig = customTargetConfig;
            return this;
        }

        /**
         * @param customTargetConfig The custom target config for Cluster Logging. For `kind = custom`. Conflicts with `elasticsearch_config`, `fluentd_config`, `kafka_config`, `splunk_config` and `syslog_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder customTargetConfig(ClusterLoggingCustomTargetConfigArgs customTargetConfig) {
            return customTargetConfig(Output.of(customTargetConfig));
        }

        /**
         * @param elasticsearchConfig The elasticsearch config for Cluster Logging. For `kind = elasticsearch`. Conflicts with `custom_target_config`, `fluentd_config`, `kafka_config`, `splunk_config` and `syslog_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder elasticsearchConfig(@Nullable Output<ClusterLoggingElasticsearchConfigArgs> elasticsearchConfig) {
            $.elasticsearchConfig = elasticsearchConfig;
            return this;
        }

        /**
         * @param elasticsearchConfig The elasticsearch config for Cluster Logging. For `kind = elasticsearch`. Conflicts with `custom_target_config`, `fluentd_config`, `kafka_config`, `splunk_config` and `syslog_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder elasticsearchConfig(ClusterLoggingElasticsearchConfigArgs elasticsearchConfig) {
            return elasticsearchConfig(Output.of(elasticsearchConfig));
        }

        /**
         * @param enableJsonParsing Enable json log parsing. Default: `false` (bool)
         * 
         * @return builder
         * 
         */
        public Builder enableJsonParsing(@Nullable Output<Boolean> enableJsonParsing) {
            $.enableJsonParsing = enableJsonParsing;
            return this;
        }

        /**
         * @param enableJsonParsing Enable json log parsing. Default: `false` (bool)
         * 
         * @return builder
         * 
         */
        public Builder enableJsonParsing(Boolean enableJsonParsing) {
            return enableJsonParsing(Output.of(enableJsonParsing));
        }

        /**
         * @param fluentdConfig The fluentd config for Cluster Logging. For `kind = fluentd`. Conflicts with `custom_target_config`, `elasticsearch_config`, `kafka_config`, `splunk_config` and `syslog_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder fluentdConfig(@Nullable Output<ClusterLoggingFluentdConfigArgs> fluentdConfig) {
            $.fluentdConfig = fluentdConfig;
            return this;
        }

        /**
         * @param fluentdConfig The fluentd config for Cluster Logging. For `kind = fluentd`. Conflicts with `custom_target_config`, `elasticsearch_config`, `kafka_config`, `splunk_config` and `syslog_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder fluentdConfig(ClusterLoggingFluentdConfigArgs fluentdConfig) {
            return fluentdConfig(Output.of(fluentdConfig));
        }

        /**
         * @param kafkaConfig The kafka config for Cluster Logging. For `kind = kafka`. Conflicts with `custom_target_config`, `elasticsearch_config`, `fluentd_config`, `splunk_config` and `syslog_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder kafkaConfig(@Nullable Output<ClusterLoggingKafkaConfigArgs> kafkaConfig) {
            $.kafkaConfig = kafkaConfig;
            return this;
        }

        /**
         * @param kafkaConfig The kafka config for Cluster Logging. For `kind = kafka`. Conflicts with `custom_target_config`, `elasticsearch_config`, `fluentd_config`, `splunk_config` and `syslog_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder kafkaConfig(ClusterLoggingKafkaConfigArgs kafkaConfig) {
            return kafkaConfig(Output.of(kafkaConfig));
        }

        /**
         * @param kind The kind of the Cluster Logging. `elasticsearch`, `fluentd`, `kafka`, `splunk` and `syslog` are supported (string)
         * 
         * @return builder
         * 
         */
        public Builder kind(@Nullable Output<String> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind The kind of the Cluster Logging. `elasticsearch`, `fluentd`, `kafka`, `splunk` and `syslog` are supported (string)
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param labels Labels for Cluster Logging object (map)
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,Object>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Labels for Cluster Logging object (map)
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,Object> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param name The name of the cluster logging config (string)
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the cluster logging config (string)
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param namespaceId The namespace id from cluster logging (string)
         * 
         * @return builder
         * 
         */
        public Builder namespaceId(@Nullable Output<String> namespaceId) {
            $.namespaceId = namespaceId;
            return this;
        }

        /**
         * @param namespaceId The namespace id from cluster logging (string)
         * 
         * @return builder
         * 
         */
        public Builder namespaceId(String namespaceId) {
            return namespaceId(Output.of(namespaceId));
        }

        /**
         * @param outputFlushInterval How often buffered logs would be flushed. Default: `3` seconds (int)
         * 
         * @return builder
         * 
         */
        public Builder outputFlushInterval(@Nullable Output<Integer> outputFlushInterval) {
            $.outputFlushInterval = outputFlushInterval;
            return this;
        }

        /**
         * @param outputFlushInterval How often buffered logs would be flushed. Default: `3` seconds (int)
         * 
         * @return builder
         * 
         */
        public Builder outputFlushInterval(Integer outputFlushInterval) {
            return outputFlushInterval(Output.of(outputFlushInterval));
        }

        /**
         * @param outputTags The output tags for Cluster Logging (map)
         * 
         * @return builder
         * 
         */
        public Builder outputTags(@Nullable Output<Map<String,Object>> outputTags) {
            $.outputTags = outputTags;
            return this;
        }

        /**
         * @param outputTags The output tags for Cluster Logging (map)
         * 
         * @return builder
         * 
         */
        public Builder outputTags(Map<String,Object> outputTags) {
            return outputTags(Output.of(outputTags));
        }

        /**
         * @param splunkConfig The splunk config for Cluster Logging. For `kind = splunk`. Conflicts with `custom_target_config`, `elasticsearch_config`, `fluentd_config`, `kafka_config`, and `syslog_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder splunkConfig(@Nullable Output<ClusterLoggingSplunkConfigArgs> splunkConfig) {
            $.splunkConfig = splunkConfig;
            return this;
        }

        /**
         * @param splunkConfig The splunk config for Cluster Logging. For `kind = splunk`. Conflicts with `custom_target_config`, `elasticsearch_config`, `fluentd_config`, `kafka_config`, and `syslog_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder splunkConfig(ClusterLoggingSplunkConfigArgs splunkConfig) {
            return splunkConfig(Output.of(splunkConfig));
        }

        /**
         * @param syslogConfig The syslog config for Cluster Logging. For `kind = syslog`. Conflicts with `custom_target_config`, `elasticsearch_config`, `fluentd_config`, `kafka_config`, and `splunk_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder syslogConfig(@Nullable Output<ClusterLoggingSyslogConfigArgs> syslogConfig) {
            $.syslogConfig = syslogConfig;
            return this;
        }

        /**
         * @param syslogConfig The syslog config for Cluster Logging. For `kind = syslog`. Conflicts with `custom_target_config`, `elasticsearch_config`, `fluentd_config`, `kafka_config`, and `splunk_config` (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder syslogConfig(ClusterLoggingSyslogConfigArgs syslogConfig) {
            return syslogConfig(Output.of(syslogConfig));
        }

        public ClusterLoggingState build() {
            return $;
        }
    }

}
