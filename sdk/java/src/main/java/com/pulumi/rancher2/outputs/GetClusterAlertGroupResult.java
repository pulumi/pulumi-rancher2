// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.rancher2.outputs.GetClusterAlertGroupRecipient;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetClusterAlertGroupResult {
    /**
     * @return (Computed) The cluster alert group annotations (map)
     * 
     */
    private Map<String,Object> annotations;
    private String clusterId;
    /**
     * @return (Computed) The cluster alert group description (string)
     * 
     */
    private String description;
    /**
     * @return (Computed) The cluster alert group interval seconds. Default: `180` (int)
     * 
     */
    private Integer groupIntervalSeconds;
    /**
     * @return (Computed) The cluster alert group wait seconds. Default: `180` (int)
     * 
     */
    private Integer groupWaitSeconds;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return (Computed) The cluster alert group labels (map)
     * 
     */
    private Map<String,Object> labels;
    private String name;
    /**
     * @return (Computed) The cluster alert group recipients (list)
     * 
     */
    private List<GetClusterAlertGroupRecipient> recipients;
    /**
     * @return (Computed) The cluster alert group wait seconds. Default: `3600` (int)
     * 
     */
    private Integer repeatIntervalSeconds;

    private GetClusterAlertGroupResult() {}
    /**
     * @return (Computed) The cluster alert group annotations (map)
     * 
     */
    public Map<String,Object> annotations() {
        return this.annotations;
    }
    public String clusterId() {
        return this.clusterId;
    }
    /**
     * @return (Computed) The cluster alert group description (string)
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return (Computed) The cluster alert group interval seconds. Default: `180` (int)
     * 
     */
    public Integer groupIntervalSeconds() {
        return this.groupIntervalSeconds;
    }
    /**
     * @return (Computed) The cluster alert group wait seconds. Default: `180` (int)
     * 
     */
    public Integer groupWaitSeconds() {
        return this.groupWaitSeconds;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return (Computed) The cluster alert group labels (map)
     * 
     */
    public Map<String,Object> labels() {
        return this.labels;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return (Computed) The cluster alert group recipients (list)
     * 
     */
    public List<GetClusterAlertGroupRecipient> recipients() {
        return this.recipients;
    }
    /**
     * @return (Computed) The cluster alert group wait seconds. Default: `3600` (int)
     * 
     */
    public Integer repeatIntervalSeconds() {
        return this.repeatIntervalSeconds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterAlertGroupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,Object> annotations;
        private String clusterId;
        private String description;
        private Integer groupIntervalSeconds;
        private Integer groupWaitSeconds;
        private String id;
        private Map<String,Object> labels;
        private String name;
        private List<GetClusterAlertGroupRecipient> recipients;
        private Integer repeatIntervalSeconds;
        public Builder() {}
        public Builder(GetClusterAlertGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.annotations = defaults.annotations;
    	      this.clusterId = defaults.clusterId;
    	      this.description = defaults.description;
    	      this.groupIntervalSeconds = defaults.groupIntervalSeconds;
    	      this.groupWaitSeconds = defaults.groupWaitSeconds;
    	      this.id = defaults.id;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.recipients = defaults.recipients;
    	      this.repeatIntervalSeconds = defaults.repeatIntervalSeconds;
        }

        @CustomType.Setter
        public Builder annotations(Map<String,Object> annotations) {
            if (annotations == null) {
              throw new MissingRequiredPropertyException("GetClusterAlertGroupResult", "annotations");
            }
            this.annotations = annotations;
            return this;
        }
        @CustomType.Setter
        public Builder clusterId(String clusterId) {
            if (clusterId == null) {
              throw new MissingRequiredPropertyException("GetClusterAlertGroupResult", "clusterId");
            }
            this.clusterId = clusterId;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetClusterAlertGroupResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder groupIntervalSeconds(Integer groupIntervalSeconds) {
            if (groupIntervalSeconds == null) {
              throw new MissingRequiredPropertyException("GetClusterAlertGroupResult", "groupIntervalSeconds");
            }
            this.groupIntervalSeconds = groupIntervalSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder groupWaitSeconds(Integer groupWaitSeconds) {
            if (groupWaitSeconds == null) {
              throw new MissingRequiredPropertyException("GetClusterAlertGroupResult", "groupWaitSeconds");
            }
            this.groupWaitSeconds = groupWaitSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetClusterAlertGroupResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder labels(Map<String,Object> labels) {
            if (labels == null) {
              throw new MissingRequiredPropertyException("GetClusterAlertGroupResult", "labels");
            }
            this.labels = labels;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetClusterAlertGroupResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder recipients(List<GetClusterAlertGroupRecipient> recipients) {
            if (recipients == null) {
              throw new MissingRequiredPropertyException("GetClusterAlertGroupResult", "recipients");
            }
            this.recipients = recipients;
            return this;
        }
        public Builder recipients(GetClusterAlertGroupRecipient... recipients) {
            return recipients(List.of(recipients));
        }
        @CustomType.Setter
        public Builder repeatIntervalSeconds(Integer repeatIntervalSeconds) {
            if (repeatIntervalSeconds == null) {
              throw new MissingRequiredPropertyException("GetClusterAlertGroupResult", "repeatIntervalSeconds");
            }
            this.repeatIntervalSeconds = repeatIntervalSeconds;
            return this;
        }
        public GetClusterAlertGroupResult build() {
            final var _resultValue = new GetClusterAlertGroupResult();
            _resultValue.annotations = annotations;
            _resultValue.clusterId = clusterId;
            _resultValue.description = description;
            _resultValue.groupIntervalSeconds = groupIntervalSeconds;
            _resultValue.groupWaitSeconds = groupWaitSeconds;
            _resultValue.id = id;
            _resultValue.labels = labels;
            _resultValue.name = name;
            _resultValue.recipients = recipients;
            _resultValue.repeatIntervalSeconds = repeatIntervalSeconds;
            return _resultValue;
        }
    }
}
