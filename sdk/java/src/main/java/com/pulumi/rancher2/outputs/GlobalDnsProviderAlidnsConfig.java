// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GlobalDnsProviderAlidnsConfig {
    /**
     * @return The AWS Access key (string)
     * 
     */
    private final String accessKey;
    /**
     * @return The AWS Secret key (string)
     * 
     */
    private final String secretKey;

    @CustomType.Constructor
    private GlobalDnsProviderAlidnsConfig(
        @CustomType.Parameter("accessKey") String accessKey,
        @CustomType.Parameter("secretKey") String secretKey) {
        this.accessKey = accessKey;
        this.secretKey = secretKey;
    }

    /**
     * @return The AWS Access key (string)
     * 
     */
    public String accessKey() {
        return this.accessKey;
    }
    /**
     * @return The AWS Secret key (string)
     * 
     */
    public String secretKey() {
        return this.secretKey;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GlobalDnsProviderAlidnsConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String accessKey;
        private String secretKey;

        public Builder() {
    	      // Empty
        }

        public Builder(GlobalDnsProviderAlidnsConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessKey = defaults.accessKey;
    	      this.secretKey = defaults.secretKey;
        }

        public Builder accessKey(String accessKey) {
            this.accessKey = Objects.requireNonNull(accessKey);
            return this;
        }
        public Builder secretKey(String secretKey) {
            this.secretKey = Objects.requireNonNull(secretKey);
            return this;
        }        public GlobalDnsProviderAlidnsConfig build() {
            return new GlobalDnsProviderAlidnsConfig(accessKey, secretKey);
        }
    }
}
