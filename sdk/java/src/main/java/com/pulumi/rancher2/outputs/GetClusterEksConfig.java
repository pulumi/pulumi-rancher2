// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetClusterEksConfig {
    private final String accessKey;
    private final @Nullable String ami;
    private final @Nullable Boolean associateWorkerNodePublicIp;
    private final @Nullable Integer desiredNodes;
    private final @Nullable Boolean ebsEncryption;
    private final @Nullable String instanceType;
    private final @Nullable String keyPairName;
    private final String kubernetesVersion;
    private final @Nullable Integer maximumNodes;
    private final @Nullable Integer minimumNodes;
    private final @Nullable Integer nodeVolumeSize;
    private final @Nullable String region;
    private final String secretKey;
    private final @Nullable List<String> securityGroups;
    private final @Nullable String serviceRole;
    private final @Nullable String sessionToken;
    private final @Nullable List<String> subnets;
    private final String userData;
    private final @Nullable String virtualNetwork;

    @CustomType.Constructor
    private GetClusterEksConfig(
        @CustomType.Parameter("accessKey") String accessKey,
        @CustomType.Parameter("ami") @Nullable String ami,
        @CustomType.Parameter("associateWorkerNodePublicIp") @Nullable Boolean associateWorkerNodePublicIp,
        @CustomType.Parameter("desiredNodes") @Nullable Integer desiredNodes,
        @CustomType.Parameter("ebsEncryption") @Nullable Boolean ebsEncryption,
        @CustomType.Parameter("instanceType") @Nullable String instanceType,
        @CustomType.Parameter("keyPairName") @Nullable String keyPairName,
        @CustomType.Parameter("kubernetesVersion") String kubernetesVersion,
        @CustomType.Parameter("maximumNodes") @Nullable Integer maximumNodes,
        @CustomType.Parameter("minimumNodes") @Nullable Integer minimumNodes,
        @CustomType.Parameter("nodeVolumeSize") @Nullable Integer nodeVolumeSize,
        @CustomType.Parameter("region") @Nullable String region,
        @CustomType.Parameter("secretKey") String secretKey,
        @CustomType.Parameter("securityGroups") @Nullable List<String> securityGroups,
        @CustomType.Parameter("serviceRole") @Nullable String serviceRole,
        @CustomType.Parameter("sessionToken") @Nullable String sessionToken,
        @CustomType.Parameter("subnets") @Nullable List<String> subnets,
        @CustomType.Parameter("userData") String userData,
        @CustomType.Parameter("virtualNetwork") @Nullable String virtualNetwork) {
        this.accessKey = accessKey;
        this.ami = ami;
        this.associateWorkerNodePublicIp = associateWorkerNodePublicIp;
        this.desiredNodes = desiredNodes;
        this.ebsEncryption = ebsEncryption;
        this.instanceType = instanceType;
        this.keyPairName = keyPairName;
        this.kubernetesVersion = kubernetesVersion;
        this.maximumNodes = maximumNodes;
        this.minimumNodes = minimumNodes;
        this.nodeVolumeSize = nodeVolumeSize;
        this.region = region;
        this.secretKey = secretKey;
        this.securityGroups = securityGroups;
        this.serviceRole = serviceRole;
        this.sessionToken = sessionToken;
        this.subnets = subnets;
        this.userData = userData;
        this.virtualNetwork = virtualNetwork;
    }

    public String accessKey() {
        return this.accessKey;
    }
    public Optional<String> ami() {
        return Optional.ofNullable(this.ami);
    }
    public Optional<Boolean> associateWorkerNodePublicIp() {
        return Optional.ofNullable(this.associateWorkerNodePublicIp);
    }
    public Optional<Integer> desiredNodes() {
        return Optional.ofNullable(this.desiredNodes);
    }
    public Optional<Boolean> ebsEncryption() {
        return Optional.ofNullable(this.ebsEncryption);
    }
    public Optional<String> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }
    public Optional<String> keyPairName() {
        return Optional.ofNullable(this.keyPairName);
    }
    public String kubernetesVersion() {
        return this.kubernetesVersion;
    }
    public Optional<Integer> maximumNodes() {
        return Optional.ofNullable(this.maximumNodes);
    }
    public Optional<Integer> minimumNodes() {
        return Optional.ofNullable(this.minimumNodes);
    }
    public Optional<Integer> nodeVolumeSize() {
        return Optional.ofNullable(this.nodeVolumeSize);
    }
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    public String secretKey() {
        return this.secretKey;
    }
    public List<String> securityGroups() {
        return this.securityGroups == null ? List.of() : this.securityGroups;
    }
    public Optional<String> serviceRole() {
        return Optional.ofNullable(this.serviceRole);
    }
    public Optional<String> sessionToken() {
        return Optional.ofNullable(this.sessionToken);
    }
    public List<String> subnets() {
        return this.subnets == null ? List.of() : this.subnets;
    }
    public String userData() {
        return this.userData;
    }
    public Optional<String> virtualNetwork() {
        return Optional.ofNullable(this.virtualNetwork);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterEksConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String accessKey;
        private @Nullable String ami;
        private @Nullable Boolean associateWorkerNodePublicIp;
        private @Nullable Integer desiredNodes;
        private @Nullable Boolean ebsEncryption;
        private @Nullable String instanceType;
        private @Nullable String keyPairName;
        private String kubernetesVersion;
        private @Nullable Integer maximumNodes;
        private @Nullable Integer minimumNodes;
        private @Nullable Integer nodeVolumeSize;
        private @Nullable String region;
        private String secretKey;
        private @Nullable List<String> securityGroups;
        private @Nullable String serviceRole;
        private @Nullable String sessionToken;
        private @Nullable List<String> subnets;
        private String userData;
        private @Nullable String virtualNetwork;

        public Builder() {
    	      // Empty
        }

        public Builder(GetClusterEksConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessKey = defaults.accessKey;
    	      this.ami = defaults.ami;
    	      this.associateWorkerNodePublicIp = defaults.associateWorkerNodePublicIp;
    	      this.desiredNodes = defaults.desiredNodes;
    	      this.ebsEncryption = defaults.ebsEncryption;
    	      this.instanceType = defaults.instanceType;
    	      this.keyPairName = defaults.keyPairName;
    	      this.kubernetesVersion = defaults.kubernetesVersion;
    	      this.maximumNodes = defaults.maximumNodes;
    	      this.minimumNodes = defaults.minimumNodes;
    	      this.nodeVolumeSize = defaults.nodeVolumeSize;
    	      this.region = defaults.region;
    	      this.secretKey = defaults.secretKey;
    	      this.securityGroups = defaults.securityGroups;
    	      this.serviceRole = defaults.serviceRole;
    	      this.sessionToken = defaults.sessionToken;
    	      this.subnets = defaults.subnets;
    	      this.userData = defaults.userData;
    	      this.virtualNetwork = defaults.virtualNetwork;
        }

        public Builder accessKey(String accessKey) {
            this.accessKey = Objects.requireNonNull(accessKey);
            return this;
        }
        public Builder ami(@Nullable String ami) {
            this.ami = ami;
            return this;
        }
        public Builder associateWorkerNodePublicIp(@Nullable Boolean associateWorkerNodePublicIp) {
            this.associateWorkerNodePublicIp = associateWorkerNodePublicIp;
            return this;
        }
        public Builder desiredNodes(@Nullable Integer desiredNodes) {
            this.desiredNodes = desiredNodes;
            return this;
        }
        public Builder ebsEncryption(@Nullable Boolean ebsEncryption) {
            this.ebsEncryption = ebsEncryption;
            return this;
        }
        public Builder instanceType(@Nullable String instanceType) {
            this.instanceType = instanceType;
            return this;
        }
        public Builder keyPairName(@Nullable String keyPairName) {
            this.keyPairName = keyPairName;
            return this;
        }
        public Builder kubernetesVersion(String kubernetesVersion) {
            this.kubernetesVersion = Objects.requireNonNull(kubernetesVersion);
            return this;
        }
        public Builder maximumNodes(@Nullable Integer maximumNodes) {
            this.maximumNodes = maximumNodes;
            return this;
        }
        public Builder minimumNodes(@Nullable Integer minimumNodes) {
            this.minimumNodes = minimumNodes;
            return this;
        }
        public Builder nodeVolumeSize(@Nullable Integer nodeVolumeSize) {
            this.nodeVolumeSize = nodeVolumeSize;
            return this;
        }
        public Builder region(@Nullable String region) {
            this.region = region;
            return this;
        }
        public Builder secretKey(String secretKey) {
            this.secretKey = Objects.requireNonNull(secretKey);
            return this;
        }
        public Builder securityGroups(@Nullable List<String> securityGroups) {
            this.securityGroups = securityGroups;
            return this;
        }
        public Builder securityGroups(String... securityGroups) {
            return securityGroups(List.of(securityGroups));
        }
        public Builder serviceRole(@Nullable String serviceRole) {
            this.serviceRole = serviceRole;
            return this;
        }
        public Builder sessionToken(@Nullable String sessionToken) {
            this.sessionToken = sessionToken;
            return this;
        }
        public Builder subnets(@Nullable List<String> subnets) {
            this.subnets = subnets;
            return this;
        }
        public Builder subnets(String... subnets) {
            return subnets(List.of(subnets));
        }
        public Builder userData(String userData) {
            this.userData = Objects.requireNonNull(userData);
            return this;
        }
        public Builder virtualNetwork(@Nullable String virtualNetwork) {
            this.virtualNetwork = virtualNetwork;
            return this;
        }        public GetClusterEksConfig build() {
            return new GetClusterEksConfig(accessKey, ami, associateWorkerNodePublicIp, desiredNodes, ebsEncryption, instanceType, keyPairName, kubernetesVersion, maximumNodes, minimumNodes, nodeVolumeSize, region, secretKey, securityGroups, serviceRole, sessionToken, subnets, userData, virtualNetwork);
        }
    }
}
