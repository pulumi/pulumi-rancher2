// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.rancher2.inputs.ClusterV2RkeConfigMachineSelectorFileFileSourceConfigmapItemArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterV2RkeConfigMachineSelectorFileFileSourceConfigmapArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterV2RkeConfigMachineSelectorFileFileSourceConfigmapArgs Empty = new ClusterV2RkeConfigMachineSelectorFileFileSourceConfigmapArgs();

    /**
     * The default permissions to be applied when they are not set at the item level
     * 
     */
    @Import(name="defaultPermissions")
    private @Nullable Output<String> defaultPermissions;

    /**
     * @return The default permissions to be applied when they are not set at the item level
     * 
     */
    public Optional<Output<String>> defaultPermissions() {
        return Optional.ofNullable(this.defaultPermissions);
    }

    /**
     * Items(files) to retrieve from the K8s object
     * 
     */
    @Import(name="items")
    private @Nullable Output<List<ClusterV2RkeConfigMachineSelectorFileFileSourceConfigmapItemArgs>> items;

    /**
     * @return Items(files) to retrieve from the K8s object
     * 
     */
    public Optional<Output<List<ClusterV2RkeConfigMachineSelectorFileFileSourceConfigmapItemArgs>>> items() {
        return Optional.ofNullable(this.items);
    }

    /**
     * The name of the cluster.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the cluster.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private ClusterV2RkeConfigMachineSelectorFileFileSourceConfigmapArgs() {}

    private ClusterV2RkeConfigMachineSelectorFileFileSourceConfigmapArgs(ClusterV2RkeConfigMachineSelectorFileFileSourceConfigmapArgs $) {
        this.defaultPermissions = $.defaultPermissions;
        this.items = $.items;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterV2RkeConfigMachineSelectorFileFileSourceConfigmapArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterV2RkeConfigMachineSelectorFileFileSourceConfigmapArgs $;

        public Builder() {
            $ = new ClusterV2RkeConfigMachineSelectorFileFileSourceConfigmapArgs();
        }

        public Builder(ClusterV2RkeConfigMachineSelectorFileFileSourceConfigmapArgs defaults) {
            $ = new ClusterV2RkeConfigMachineSelectorFileFileSourceConfigmapArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param defaultPermissions The default permissions to be applied when they are not set at the item level
         * 
         * @return builder
         * 
         */
        public Builder defaultPermissions(@Nullable Output<String> defaultPermissions) {
            $.defaultPermissions = defaultPermissions;
            return this;
        }

        /**
         * @param defaultPermissions The default permissions to be applied when they are not set at the item level
         * 
         * @return builder
         * 
         */
        public Builder defaultPermissions(String defaultPermissions) {
            return defaultPermissions(Output.of(defaultPermissions));
        }

        /**
         * @param items Items(files) to retrieve from the K8s object
         * 
         * @return builder
         * 
         */
        public Builder items(@Nullable Output<List<ClusterV2RkeConfigMachineSelectorFileFileSourceConfigmapItemArgs>> items) {
            $.items = items;
            return this;
        }

        /**
         * @param items Items(files) to retrieve from the K8s object
         * 
         * @return builder
         * 
         */
        public Builder items(List<ClusterV2RkeConfigMachineSelectorFileFileSourceConfigmapItemArgs> items) {
            return items(Output.of(items));
        }

        /**
         * @param items Items(files) to retrieve from the K8s object
         * 
         * @return builder
         * 
         */
        public Builder items(ClusterV2RkeConfigMachineSelectorFileFileSourceConfigmapItemArgs... items) {
            return items(List.of(items));
        }

        /**
         * @param name The name of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public ClusterV2RkeConfigMachineSelectorFileFileSourceConfigmapArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ClusterV2RkeConfigMachineSelectorFileFileSourceConfigmapArgs", "name");
            }
            return $;
        }
    }

}
