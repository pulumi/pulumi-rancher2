// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterAksConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterAksConfigArgs Empty = new ClusterAksConfigArgs();

    /**
     * The secret of an Azure Active Directory server application (string)
     * 
     */
    @Import(name="aadServerAppSecret")
    private @Nullable Output<String> aadServerAppSecret;

    /**
     * @return The secret of an Azure Active Directory server application (string)
     * 
     */
    public Optional<Output<String>> aadServerAppSecret() {
        return Optional.ofNullable(this.aadServerAppSecret);
    }

    /**
     * The ID of an Azure Active Directory tenant (string)
     * 
     */
    @Import(name="aadTenantId")
    private @Nullable Output<String> aadTenantId;

    /**
     * @return The ID of an Azure Active Directory tenant (string)
     * 
     */
    public Optional<Output<String>> aadTenantId() {
        return Optional.ofNullable(this.aadTenantId);
    }

    /**
     * The ID of an Azure Active Directory client application of type \&#34;Native\&#34;. This application is for user login via kubectl (string)
     * 
     */
    @Import(name="addClientAppId")
    private @Nullable Output<String> addClientAppId;

    /**
     * @return The ID of an Azure Active Directory client application of type \&#34;Native\&#34;. This application is for user login via kubectl (string)
     * 
     */
    public Optional<Output<String>> addClientAppId() {
        return Optional.ofNullable(this.addClientAppId);
    }

    /**
     * The ID of an Azure Active Directory server application of type \&#34;Web app/API\&#34;. This application represents the managed cluster&#39;s apiserver (Server application) (string)
     * 
     */
    @Import(name="addServerAppId")
    private @Nullable Output<String> addServerAppId;

    /**
     * @return The ID of an Azure Active Directory server application of type \&#34;Web app/API\&#34;. This application represents the managed cluster&#39;s apiserver (Server application) (string)
     * 
     */
    public Optional<Output<String>> addServerAppId() {
        return Optional.ofNullable(this.addServerAppId);
    }

    /**
     * The administrator username to use for Linux hosts. Default `azureuser` (string)
     * 
     */
    @Import(name="adminUsername")
    private @Nullable Output<String> adminUsername;

    /**
     * @return The administrator username to use for Linux hosts. Default `azureuser` (string)
     * 
     */
    public Optional<Output<String>> adminUsername() {
        return Optional.ofNullable(this.adminUsername);
    }

    /**
     * DNS prefix to be used to create the FQDN for the agent pool (string)
     * 
     */
    @Import(name="agentDnsPrefix", required=true)
    private Output<String> agentDnsPrefix;

    /**
     * @return DNS prefix to be used to create the FQDN for the agent pool (string)
     * 
     */
    public Output<String> agentDnsPrefix() {
        return this.agentDnsPrefix;
    }

    /**
     * GB size to be used to specify the disk for every machine in the agent pool. If you specify 0, it will apply the default according to the \&#34;agent vm size\&#34; specified. Default `0` (int)
     * 
     */
    @Import(name="agentOsDiskSize")
    private @Nullable Output<Integer> agentOsDiskSize;

    /**
     * @return GB size to be used to specify the disk for every machine in the agent pool. If you specify 0, it will apply the default according to the \&#34;agent vm size\&#34; specified. Default `0` (int)
     * 
     */
    public Optional<Output<Integer>> agentOsDiskSize() {
        return Optional.ofNullable(this.agentOsDiskSize);
    }

    /**
     * Name for the agent pool, upto 12 alphanumeric characters. Default `agentpool0` (string)
     * 
     */
    @Import(name="agentPoolName")
    private @Nullable Output<String> agentPoolName;

    /**
     * @return Name for the agent pool, upto 12 alphanumeric characters. Default `agentpool0` (string)
     * 
     */
    public Optional<Output<String>> agentPoolName() {
        return Optional.ofNullable(this.agentPoolName);
    }

    /**
     * Storage profile specifies what kind of storage used on machine in the agent pool. Chooses from [ManagedDisks StorageAccount]. Default `ManagedDisks` (string)
     * 
     */
    @Import(name="agentStorageProfile")
    private @Nullable Output<String> agentStorageProfile;

    /**
     * @return Storage profile specifies what kind of storage used on machine in the agent pool. Chooses from [ManagedDisks StorageAccount]. Default `ManagedDisks` (string)
     * 
     */
    public Optional<Output<String>> agentStorageProfile() {
        return Optional.ofNullable(this.agentStorageProfile);
    }

    /**
     * Size of machine in the agent pool. Default `Standard_D1_v2` (string)
     * 
     */
    @Import(name="agentVmSize")
    private @Nullable Output<String> agentVmSize;

    /**
     * @return Size of machine in the agent pool. Default `Standard_D1_v2` (string)
     * 
     */
    public Optional<Output<String>> agentVmSize() {
        return Optional.ofNullable(this.agentVmSize);
    }

    /**
     * The AKS auth base url (string)
     * 
     */
    @Import(name="authBaseUrl")
    private @Nullable Output<String> authBaseUrl;

    /**
     * @return The AKS auth base url (string)
     * 
     */
    public Optional<Output<String>> authBaseUrl() {
        return Optional.ofNullable(this.authBaseUrl);
    }

    /**
     * The AKS base url (string)
     * 
     */
    @Import(name="baseUrl")
    private @Nullable Output<String> baseUrl;

    /**
     * @return The AKS base url (string)
     * 
     */
    public Optional<Output<String>> baseUrl() {
        return Optional.ofNullable(this.baseUrl);
    }

    /**
     * Azure client ID to use (string)
     * 
     */
    @Import(name="clientId", required=true)
    private Output<String> clientId;

    /**
     * @return Azure client ID to use (string)
     * 
     */
    public Output<String> clientId() {
        return this.clientId;
    }

    /**
     * Azure client secret associated with the \&#34;client id\&#34; (string)
     * 
     */
    @Import(name="clientSecret", required=true)
    private Output<String> clientSecret;

    /**
     * @return Azure client secret associated with the \&#34;client id\&#34; (string)
     * 
     */
    public Output<String> clientSecret() {
        return this.clientSecret;
    }

    /**
     * The AKS node pool count. Default: `1` (int)
     * 
     */
    @Import(name="count")
    private @Nullable Output<Integer> count;

    /**
     * @return The AKS node pool count. Default: `1` (int)
     * 
     */
    public Optional<Output<Integer>> count() {
        return Optional.ofNullable(this.count);
    }

    /**
     * An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes Service address range specified in \&#34;service cidr\&#34;. Default `10.0.0.10` (string)
     * 
     */
    @Import(name="dnsServiceIp")
    private @Nullable Output<String> dnsServiceIp;

    /**
     * @return An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes Service address range specified in \&#34;service cidr\&#34;. Default `10.0.0.10` (string)
     * 
     */
    public Optional<Output<String>> dnsServiceIp() {
        return Optional.ofNullable(this.dnsServiceIp);
    }

    /**
     * A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes Service address range specified in \&#34;service cidr\&#34;. Default `172.17.0.1/16` (string)
     * 
     */
    @Import(name="dockerBridgeCidr")
    private @Nullable Output<String> dockerBridgeCidr;

    /**
     * @return A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes Service address range specified in \&#34;service cidr\&#34;. Default `172.17.0.1/16` (string)
     * 
     */
    public Optional<Output<String>> dockerBridgeCidr() {
        return Optional.ofNullable(this.dockerBridgeCidr);
    }

    /**
     * Enable the Kubernetes ingress with automatic public DNS name creation. Default `false` (bool)
     * 
     */
    @Import(name="enableHttpApplicationRouting")
    private @Nullable Output<Boolean> enableHttpApplicationRouting;

    /**
     * @return Enable the Kubernetes ingress with automatic public DNS name creation. Default `false` (bool)
     * 
     */
    public Optional<Output<Boolean>> enableHttpApplicationRouting() {
        return Optional.ofNullable(this.enableHttpApplicationRouting);
    }

    /**
     * Turn on Azure Log Analytics monitoring. Uses the Log Analytics \&#34;Default\&#34; workspace if it exists, else creates one. if using an existing workspace, specifies \&#34;log analytics workspace resource id\&#34;. Default `true` (bool)
     * 
     */
    @Import(name="enableMonitoring")
    private @Nullable Output<Boolean> enableMonitoring;

    /**
     * @return Turn on Azure Log Analytics monitoring. Uses the Log Analytics \&#34;Default\&#34; workspace if it exists, else creates one. if using an existing workspace, specifies \&#34;log analytics workspace resource id\&#34;. Default `true` (bool)
     * 
     */
    public Optional<Output<Boolean>> enableMonitoring() {
        return Optional.ofNullable(this.enableMonitoring);
    }

    /**
     * The Kubernetes version that will be used for your master *and* OKE worker nodes (string)
     * 
     */
    @Import(name="kubernetesVersion", required=true)
    private Output<String> kubernetesVersion;

    /**
     * @return The Kubernetes version that will be used for your master *and* OKE worker nodes (string)
     * 
     */
    public Output<String> kubernetesVersion() {
        return this.kubernetesVersion;
    }

    /**
     * The AKS load balancer sku (string)
     * 
     */
    @Import(name="loadBalancerSku")
    private @Nullable Output<String> loadBalancerSku;

    /**
     * @return The AKS load balancer sku (string)
     * 
     */
    public Optional<Output<String>> loadBalancerSku() {
        return Optional.ofNullable(this.loadBalancerSku);
    }

    /**
     * Azure Kubernetes cluster location. Default `eastus` (string)
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Azure Kubernetes cluster location. Default `eastus` (string)
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of an existing Azure Log Analytics Workspace to use for storing monitoring data. If not specified, uses &#39;{resource group}-{subscription id}-{location code}&#39; (string)
     * 
     */
    @Import(name="logAnalyticsWorkspace")
    private @Nullable Output<String> logAnalyticsWorkspace;

    /**
     * @return The name of an existing Azure Log Analytics Workspace to use for storing monitoring data. If not specified, uses &#39;{resource group}-{subscription id}-{location code}&#39; (string)
     * 
     */
    public Optional<Output<String>> logAnalyticsWorkspace() {
        return Optional.ofNullable(this.logAnalyticsWorkspace);
    }

    /**
     * The resource group of an existing Azure Log Analytics Workspace to use for storing monitoring data. If not specified, uses the &#39;Cluster&#39; resource group (string)
     * 
     */
    @Import(name="logAnalyticsWorkspaceResourceGroup")
    private @Nullable Output<String> logAnalyticsWorkspaceResourceGroup;

    /**
     * @return The resource group of an existing Azure Log Analytics Workspace to use for storing monitoring data. If not specified, uses the &#39;Cluster&#39; resource group (string)
     * 
     */
    public Optional<Output<String>> logAnalyticsWorkspaceResourceGroup() {
        return Optional.ofNullable(this.logAnalyticsWorkspaceResourceGroup);
    }

    /**
     * DNS prefix to use the Kubernetes cluster control pane (string)
     * 
     */
    @Import(name="masterDnsPrefix", required=true)
    private Output<String> masterDnsPrefix;

    /**
     * @return DNS prefix to use the Kubernetes cluster control pane (string)
     * 
     */
    public Output<String> masterDnsPrefix() {
        return this.masterDnsPrefix;
    }

    /**
     * The AKS node pool max pods. Default: `110` (int)
     * 
     */
    @Import(name="maxPods")
    private @Nullable Output<Integer> maxPods;

    /**
     * @return The AKS node pool max pods. Default: `110` (int)
     * 
     */
    public Optional<Output<Integer>> maxPods() {
        return Optional.ofNullable(this.maxPods);
    }

    /**
     * The AKS network plugin. Required if `imported=false` (string)
     * 
     */
    @Import(name="networkPlugin")
    private @Nullable Output<String> networkPlugin;

    /**
     * @return The AKS network plugin. Required if `imported=false` (string)
     * 
     */
    public Optional<Output<String>> networkPlugin() {
        return Optional.ofNullable(this.networkPlugin);
    }

    /**
     * The AKS network policy (string)
     * 
     */
    @Import(name="networkPolicy")
    private @Nullable Output<String> networkPolicy;

    /**
     * @return The AKS network policy (string)
     * 
     */
    public Optional<Output<String>> networkPolicy() {
        return Optional.ofNullable(this.networkPolicy);
    }

    /**
     * A CIDR IP range from which to assign Kubernetes Pod IPs (string)
     * 
     */
    @Import(name="podCidr")
    private @Nullable Output<String> podCidr;

    /**
     * @return A CIDR IP range from which to assign Kubernetes Pod IPs (string)
     * 
     */
    public Optional<Output<String>> podCidr() {
        return Optional.ofNullable(this.podCidr);
    }

    /**
     * The AKS resource group (string)
     * 
     */
    @Import(name="resourceGroup", required=true)
    private Output<String> resourceGroup;

    /**
     * @return The AKS resource group (string)
     * 
     */
    public Output<String> resourceGroup() {
        return this.resourceGroup;
    }

    /**
     * A CIDR IP range from which to assign Kubernetes Service IPs (string)
     * 
     */
    @Import(name="serviceCidr")
    private @Nullable Output<String> serviceCidr;

    /**
     * @return A CIDR IP range from which to assign Kubernetes Service IPs (string)
     * 
     */
    public Optional<Output<String>> serviceCidr() {
        return Optional.ofNullable(this.serviceCidr);
    }

    /**
     * Contents of the SSH public key used to authenticate with Linux hosts (string)
     * 
     */
    @Import(name="sshPublicKeyContents", required=true)
    private Output<String> sshPublicKeyContents;

    /**
     * @return Contents of the SSH public key used to authenticate with Linux hosts (string)
     * 
     */
    public Output<String> sshPublicKeyContents() {
        return this.sshPublicKeyContents;
    }

    /**
     * The AKS subnet (string)
     * 
     */
    @Import(name="subnet", required=true)
    private Output<String> subnet;

    /**
     * @return The AKS subnet (string)
     * 
     */
    public Output<String> subnet() {
        return this.subnet;
    }

    /**
     * Subscription credentials which uniquely identify Microsoft Azure subscription (string)
     * 
     */
    @Import(name="subscriptionId", required=true)
    private Output<String> subscriptionId;

    /**
     * @return Subscription credentials which uniquely identify Microsoft Azure subscription (string)
     * 
     */
    public Output<String> subscriptionId() {
        return this.subscriptionId;
    }

    /**
     * Use `tags` argument instead as []string
     * 
     * @deprecated
     * Use tags argument instead as []string
     * 
     */
    @Deprecated /* Use tags argument instead as []string */
    @Import(name="tag")
    private @Nullable Output<Map<String,Object>> tag;

    /**
     * @return Use `tags` argument instead as []string
     * 
     * @deprecated
     * Use tags argument instead as []string
     * 
     */
    @Deprecated /* Use tags argument instead as []string */
    public Optional<Output<Map<String,Object>>> tag() {
        return Optional.ofNullable(this.tag);
    }

    /**
     * The GKE node config tags (List)
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    /**
     * @return The GKE node config tags (List)
     * 
     */
    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Azure tenant ID to use (string)
     * 
     */
    @Import(name="tenantId", required=true)
    private Output<String> tenantId;

    /**
     * @return Azure tenant ID to use (string)
     * 
     */
    public Output<String> tenantId() {
        return this.tenantId;
    }

    /**
     * The name of the virtual network to use. If it&#39;s not specified Rancher will create a new VPC (string)
     * 
     */
    @Import(name="virtualNetwork", required=true)
    private Output<String> virtualNetwork;

    /**
     * @return The name of the virtual network to use. If it&#39;s not specified Rancher will create a new VPC (string)
     * 
     */
    public Output<String> virtualNetwork() {
        return this.virtualNetwork;
    }

    /**
     * The AKS virtual network resource group (string)
     * 
     */
    @Import(name="virtualNetworkResourceGroup", required=true)
    private Output<String> virtualNetworkResourceGroup;

    /**
     * @return The AKS virtual network resource group (string)
     * 
     */
    public Output<String> virtualNetworkResourceGroup() {
        return this.virtualNetworkResourceGroup;
    }

    private ClusterAksConfigArgs() {}

    private ClusterAksConfigArgs(ClusterAksConfigArgs $) {
        this.aadServerAppSecret = $.aadServerAppSecret;
        this.aadTenantId = $.aadTenantId;
        this.addClientAppId = $.addClientAppId;
        this.addServerAppId = $.addServerAppId;
        this.adminUsername = $.adminUsername;
        this.agentDnsPrefix = $.agentDnsPrefix;
        this.agentOsDiskSize = $.agentOsDiskSize;
        this.agentPoolName = $.agentPoolName;
        this.agentStorageProfile = $.agentStorageProfile;
        this.agentVmSize = $.agentVmSize;
        this.authBaseUrl = $.authBaseUrl;
        this.baseUrl = $.baseUrl;
        this.clientId = $.clientId;
        this.clientSecret = $.clientSecret;
        this.count = $.count;
        this.dnsServiceIp = $.dnsServiceIp;
        this.dockerBridgeCidr = $.dockerBridgeCidr;
        this.enableHttpApplicationRouting = $.enableHttpApplicationRouting;
        this.enableMonitoring = $.enableMonitoring;
        this.kubernetesVersion = $.kubernetesVersion;
        this.loadBalancerSku = $.loadBalancerSku;
        this.location = $.location;
        this.logAnalyticsWorkspace = $.logAnalyticsWorkspace;
        this.logAnalyticsWorkspaceResourceGroup = $.logAnalyticsWorkspaceResourceGroup;
        this.masterDnsPrefix = $.masterDnsPrefix;
        this.maxPods = $.maxPods;
        this.networkPlugin = $.networkPlugin;
        this.networkPolicy = $.networkPolicy;
        this.podCidr = $.podCidr;
        this.resourceGroup = $.resourceGroup;
        this.serviceCidr = $.serviceCidr;
        this.sshPublicKeyContents = $.sshPublicKeyContents;
        this.subnet = $.subnet;
        this.subscriptionId = $.subscriptionId;
        this.tag = $.tag;
        this.tags = $.tags;
        this.tenantId = $.tenantId;
        this.virtualNetwork = $.virtualNetwork;
        this.virtualNetworkResourceGroup = $.virtualNetworkResourceGroup;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterAksConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterAksConfigArgs $;

        public Builder() {
            $ = new ClusterAksConfigArgs();
        }

        public Builder(ClusterAksConfigArgs defaults) {
            $ = new ClusterAksConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param aadServerAppSecret The secret of an Azure Active Directory server application (string)
         * 
         * @return builder
         * 
         */
        public Builder aadServerAppSecret(@Nullable Output<String> aadServerAppSecret) {
            $.aadServerAppSecret = aadServerAppSecret;
            return this;
        }

        /**
         * @param aadServerAppSecret The secret of an Azure Active Directory server application (string)
         * 
         * @return builder
         * 
         */
        public Builder aadServerAppSecret(String aadServerAppSecret) {
            return aadServerAppSecret(Output.of(aadServerAppSecret));
        }

        /**
         * @param aadTenantId The ID of an Azure Active Directory tenant (string)
         * 
         * @return builder
         * 
         */
        public Builder aadTenantId(@Nullable Output<String> aadTenantId) {
            $.aadTenantId = aadTenantId;
            return this;
        }

        /**
         * @param aadTenantId The ID of an Azure Active Directory tenant (string)
         * 
         * @return builder
         * 
         */
        public Builder aadTenantId(String aadTenantId) {
            return aadTenantId(Output.of(aadTenantId));
        }

        /**
         * @param addClientAppId The ID of an Azure Active Directory client application of type \&#34;Native\&#34;. This application is for user login via kubectl (string)
         * 
         * @return builder
         * 
         */
        public Builder addClientAppId(@Nullable Output<String> addClientAppId) {
            $.addClientAppId = addClientAppId;
            return this;
        }

        /**
         * @param addClientAppId The ID of an Azure Active Directory client application of type \&#34;Native\&#34;. This application is for user login via kubectl (string)
         * 
         * @return builder
         * 
         */
        public Builder addClientAppId(String addClientAppId) {
            return addClientAppId(Output.of(addClientAppId));
        }

        /**
         * @param addServerAppId The ID of an Azure Active Directory server application of type \&#34;Web app/API\&#34;. This application represents the managed cluster&#39;s apiserver (Server application) (string)
         * 
         * @return builder
         * 
         */
        public Builder addServerAppId(@Nullable Output<String> addServerAppId) {
            $.addServerAppId = addServerAppId;
            return this;
        }

        /**
         * @param addServerAppId The ID of an Azure Active Directory server application of type \&#34;Web app/API\&#34;. This application represents the managed cluster&#39;s apiserver (Server application) (string)
         * 
         * @return builder
         * 
         */
        public Builder addServerAppId(String addServerAppId) {
            return addServerAppId(Output.of(addServerAppId));
        }

        /**
         * @param adminUsername The administrator username to use for Linux hosts. Default `azureuser` (string)
         * 
         * @return builder
         * 
         */
        public Builder adminUsername(@Nullable Output<String> adminUsername) {
            $.adminUsername = adminUsername;
            return this;
        }

        /**
         * @param adminUsername The administrator username to use for Linux hosts. Default `azureuser` (string)
         * 
         * @return builder
         * 
         */
        public Builder adminUsername(String adminUsername) {
            return adminUsername(Output.of(adminUsername));
        }

        /**
         * @param agentDnsPrefix DNS prefix to be used to create the FQDN for the agent pool (string)
         * 
         * @return builder
         * 
         */
        public Builder agentDnsPrefix(Output<String> agentDnsPrefix) {
            $.agentDnsPrefix = agentDnsPrefix;
            return this;
        }

        /**
         * @param agentDnsPrefix DNS prefix to be used to create the FQDN for the agent pool (string)
         * 
         * @return builder
         * 
         */
        public Builder agentDnsPrefix(String agentDnsPrefix) {
            return agentDnsPrefix(Output.of(agentDnsPrefix));
        }

        /**
         * @param agentOsDiskSize GB size to be used to specify the disk for every machine in the agent pool. If you specify 0, it will apply the default according to the \&#34;agent vm size\&#34; specified. Default `0` (int)
         * 
         * @return builder
         * 
         */
        public Builder agentOsDiskSize(@Nullable Output<Integer> agentOsDiskSize) {
            $.agentOsDiskSize = agentOsDiskSize;
            return this;
        }

        /**
         * @param agentOsDiskSize GB size to be used to specify the disk for every machine in the agent pool. If you specify 0, it will apply the default according to the \&#34;agent vm size\&#34; specified. Default `0` (int)
         * 
         * @return builder
         * 
         */
        public Builder agentOsDiskSize(Integer agentOsDiskSize) {
            return agentOsDiskSize(Output.of(agentOsDiskSize));
        }

        /**
         * @param agentPoolName Name for the agent pool, upto 12 alphanumeric characters. Default `agentpool0` (string)
         * 
         * @return builder
         * 
         */
        public Builder agentPoolName(@Nullable Output<String> agentPoolName) {
            $.agentPoolName = agentPoolName;
            return this;
        }

        /**
         * @param agentPoolName Name for the agent pool, upto 12 alphanumeric characters. Default `agentpool0` (string)
         * 
         * @return builder
         * 
         */
        public Builder agentPoolName(String agentPoolName) {
            return agentPoolName(Output.of(agentPoolName));
        }

        /**
         * @param agentStorageProfile Storage profile specifies what kind of storage used on machine in the agent pool. Chooses from [ManagedDisks StorageAccount]. Default `ManagedDisks` (string)
         * 
         * @return builder
         * 
         */
        public Builder agentStorageProfile(@Nullable Output<String> agentStorageProfile) {
            $.agentStorageProfile = agentStorageProfile;
            return this;
        }

        /**
         * @param agentStorageProfile Storage profile specifies what kind of storage used on machine in the agent pool. Chooses from [ManagedDisks StorageAccount]. Default `ManagedDisks` (string)
         * 
         * @return builder
         * 
         */
        public Builder agentStorageProfile(String agentStorageProfile) {
            return agentStorageProfile(Output.of(agentStorageProfile));
        }

        /**
         * @param agentVmSize Size of machine in the agent pool. Default `Standard_D1_v2` (string)
         * 
         * @return builder
         * 
         */
        public Builder agentVmSize(@Nullable Output<String> agentVmSize) {
            $.agentVmSize = agentVmSize;
            return this;
        }

        /**
         * @param agentVmSize Size of machine in the agent pool. Default `Standard_D1_v2` (string)
         * 
         * @return builder
         * 
         */
        public Builder agentVmSize(String agentVmSize) {
            return agentVmSize(Output.of(agentVmSize));
        }

        /**
         * @param authBaseUrl The AKS auth base url (string)
         * 
         * @return builder
         * 
         */
        public Builder authBaseUrl(@Nullable Output<String> authBaseUrl) {
            $.authBaseUrl = authBaseUrl;
            return this;
        }

        /**
         * @param authBaseUrl The AKS auth base url (string)
         * 
         * @return builder
         * 
         */
        public Builder authBaseUrl(String authBaseUrl) {
            return authBaseUrl(Output.of(authBaseUrl));
        }

        /**
         * @param baseUrl The AKS base url (string)
         * 
         * @return builder
         * 
         */
        public Builder baseUrl(@Nullable Output<String> baseUrl) {
            $.baseUrl = baseUrl;
            return this;
        }

        /**
         * @param baseUrl The AKS base url (string)
         * 
         * @return builder
         * 
         */
        public Builder baseUrl(String baseUrl) {
            return baseUrl(Output.of(baseUrl));
        }

        /**
         * @param clientId Azure client ID to use (string)
         * 
         * @return builder
         * 
         */
        public Builder clientId(Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param clientId Azure client ID to use (string)
         * 
         * @return builder
         * 
         */
        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        /**
         * @param clientSecret Azure client secret associated with the \&#34;client id\&#34; (string)
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(Output<String> clientSecret) {
            $.clientSecret = clientSecret;
            return this;
        }

        /**
         * @param clientSecret Azure client secret associated with the \&#34;client id\&#34; (string)
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(String clientSecret) {
            return clientSecret(Output.of(clientSecret));
        }

        /**
         * @param count The AKS node pool count. Default: `1` (int)
         * 
         * @return builder
         * 
         */
        public Builder count(@Nullable Output<Integer> count) {
            $.count = count;
            return this;
        }

        /**
         * @param count The AKS node pool count. Default: `1` (int)
         * 
         * @return builder
         * 
         */
        public Builder count(Integer count) {
            return count(Output.of(count));
        }

        /**
         * @param dnsServiceIp An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes Service address range specified in \&#34;service cidr\&#34;. Default `10.0.0.10` (string)
         * 
         * @return builder
         * 
         */
        public Builder dnsServiceIp(@Nullable Output<String> dnsServiceIp) {
            $.dnsServiceIp = dnsServiceIp;
            return this;
        }

        /**
         * @param dnsServiceIp An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes Service address range specified in \&#34;service cidr\&#34;. Default `10.0.0.10` (string)
         * 
         * @return builder
         * 
         */
        public Builder dnsServiceIp(String dnsServiceIp) {
            return dnsServiceIp(Output.of(dnsServiceIp));
        }

        /**
         * @param dockerBridgeCidr A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes Service address range specified in \&#34;service cidr\&#34;. Default `172.17.0.1/16` (string)
         * 
         * @return builder
         * 
         */
        public Builder dockerBridgeCidr(@Nullable Output<String> dockerBridgeCidr) {
            $.dockerBridgeCidr = dockerBridgeCidr;
            return this;
        }

        /**
         * @param dockerBridgeCidr A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes Service address range specified in \&#34;service cidr\&#34;. Default `172.17.0.1/16` (string)
         * 
         * @return builder
         * 
         */
        public Builder dockerBridgeCidr(String dockerBridgeCidr) {
            return dockerBridgeCidr(Output.of(dockerBridgeCidr));
        }

        /**
         * @param enableHttpApplicationRouting Enable the Kubernetes ingress with automatic public DNS name creation. Default `false` (bool)
         * 
         * @return builder
         * 
         */
        public Builder enableHttpApplicationRouting(@Nullable Output<Boolean> enableHttpApplicationRouting) {
            $.enableHttpApplicationRouting = enableHttpApplicationRouting;
            return this;
        }

        /**
         * @param enableHttpApplicationRouting Enable the Kubernetes ingress with automatic public DNS name creation. Default `false` (bool)
         * 
         * @return builder
         * 
         */
        public Builder enableHttpApplicationRouting(Boolean enableHttpApplicationRouting) {
            return enableHttpApplicationRouting(Output.of(enableHttpApplicationRouting));
        }

        /**
         * @param enableMonitoring Turn on Azure Log Analytics monitoring. Uses the Log Analytics \&#34;Default\&#34; workspace if it exists, else creates one. if using an existing workspace, specifies \&#34;log analytics workspace resource id\&#34;. Default `true` (bool)
         * 
         * @return builder
         * 
         */
        public Builder enableMonitoring(@Nullable Output<Boolean> enableMonitoring) {
            $.enableMonitoring = enableMonitoring;
            return this;
        }

        /**
         * @param enableMonitoring Turn on Azure Log Analytics monitoring. Uses the Log Analytics \&#34;Default\&#34; workspace if it exists, else creates one. if using an existing workspace, specifies \&#34;log analytics workspace resource id\&#34;. Default `true` (bool)
         * 
         * @return builder
         * 
         */
        public Builder enableMonitoring(Boolean enableMonitoring) {
            return enableMonitoring(Output.of(enableMonitoring));
        }

        /**
         * @param kubernetesVersion The Kubernetes version that will be used for your master *and* OKE worker nodes (string)
         * 
         * @return builder
         * 
         */
        public Builder kubernetesVersion(Output<String> kubernetesVersion) {
            $.kubernetesVersion = kubernetesVersion;
            return this;
        }

        /**
         * @param kubernetesVersion The Kubernetes version that will be used for your master *and* OKE worker nodes (string)
         * 
         * @return builder
         * 
         */
        public Builder kubernetesVersion(String kubernetesVersion) {
            return kubernetesVersion(Output.of(kubernetesVersion));
        }

        /**
         * @param loadBalancerSku The AKS load balancer sku (string)
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerSku(@Nullable Output<String> loadBalancerSku) {
            $.loadBalancerSku = loadBalancerSku;
            return this;
        }

        /**
         * @param loadBalancerSku The AKS load balancer sku (string)
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerSku(String loadBalancerSku) {
            return loadBalancerSku(Output.of(loadBalancerSku));
        }

        /**
         * @param location Azure Kubernetes cluster location. Default `eastus` (string)
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Azure Kubernetes cluster location. Default `eastus` (string)
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param logAnalyticsWorkspace The name of an existing Azure Log Analytics Workspace to use for storing monitoring data. If not specified, uses &#39;{resource group}-{subscription id}-{location code}&#39; (string)
         * 
         * @return builder
         * 
         */
        public Builder logAnalyticsWorkspace(@Nullable Output<String> logAnalyticsWorkspace) {
            $.logAnalyticsWorkspace = logAnalyticsWorkspace;
            return this;
        }

        /**
         * @param logAnalyticsWorkspace The name of an existing Azure Log Analytics Workspace to use for storing monitoring data. If not specified, uses &#39;{resource group}-{subscription id}-{location code}&#39; (string)
         * 
         * @return builder
         * 
         */
        public Builder logAnalyticsWorkspace(String logAnalyticsWorkspace) {
            return logAnalyticsWorkspace(Output.of(logAnalyticsWorkspace));
        }

        /**
         * @param logAnalyticsWorkspaceResourceGroup The resource group of an existing Azure Log Analytics Workspace to use for storing monitoring data. If not specified, uses the &#39;Cluster&#39; resource group (string)
         * 
         * @return builder
         * 
         */
        public Builder logAnalyticsWorkspaceResourceGroup(@Nullable Output<String> logAnalyticsWorkspaceResourceGroup) {
            $.logAnalyticsWorkspaceResourceGroup = logAnalyticsWorkspaceResourceGroup;
            return this;
        }

        /**
         * @param logAnalyticsWorkspaceResourceGroup The resource group of an existing Azure Log Analytics Workspace to use for storing monitoring data. If not specified, uses the &#39;Cluster&#39; resource group (string)
         * 
         * @return builder
         * 
         */
        public Builder logAnalyticsWorkspaceResourceGroup(String logAnalyticsWorkspaceResourceGroup) {
            return logAnalyticsWorkspaceResourceGroup(Output.of(logAnalyticsWorkspaceResourceGroup));
        }

        /**
         * @param masterDnsPrefix DNS prefix to use the Kubernetes cluster control pane (string)
         * 
         * @return builder
         * 
         */
        public Builder masterDnsPrefix(Output<String> masterDnsPrefix) {
            $.masterDnsPrefix = masterDnsPrefix;
            return this;
        }

        /**
         * @param masterDnsPrefix DNS prefix to use the Kubernetes cluster control pane (string)
         * 
         * @return builder
         * 
         */
        public Builder masterDnsPrefix(String masterDnsPrefix) {
            return masterDnsPrefix(Output.of(masterDnsPrefix));
        }

        /**
         * @param maxPods The AKS node pool max pods. Default: `110` (int)
         * 
         * @return builder
         * 
         */
        public Builder maxPods(@Nullable Output<Integer> maxPods) {
            $.maxPods = maxPods;
            return this;
        }

        /**
         * @param maxPods The AKS node pool max pods. Default: `110` (int)
         * 
         * @return builder
         * 
         */
        public Builder maxPods(Integer maxPods) {
            return maxPods(Output.of(maxPods));
        }

        /**
         * @param networkPlugin The AKS network plugin. Required if `imported=false` (string)
         * 
         * @return builder
         * 
         */
        public Builder networkPlugin(@Nullable Output<String> networkPlugin) {
            $.networkPlugin = networkPlugin;
            return this;
        }

        /**
         * @param networkPlugin The AKS network plugin. Required if `imported=false` (string)
         * 
         * @return builder
         * 
         */
        public Builder networkPlugin(String networkPlugin) {
            return networkPlugin(Output.of(networkPlugin));
        }

        /**
         * @param networkPolicy The AKS network policy (string)
         * 
         * @return builder
         * 
         */
        public Builder networkPolicy(@Nullable Output<String> networkPolicy) {
            $.networkPolicy = networkPolicy;
            return this;
        }

        /**
         * @param networkPolicy The AKS network policy (string)
         * 
         * @return builder
         * 
         */
        public Builder networkPolicy(String networkPolicy) {
            return networkPolicy(Output.of(networkPolicy));
        }

        /**
         * @param podCidr A CIDR IP range from which to assign Kubernetes Pod IPs (string)
         * 
         * @return builder
         * 
         */
        public Builder podCidr(@Nullable Output<String> podCidr) {
            $.podCidr = podCidr;
            return this;
        }

        /**
         * @param podCidr A CIDR IP range from which to assign Kubernetes Pod IPs (string)
         * 
         * @return builder
         * 
         */
        public Builder podCidr(String podCidr) {
            return podCidr(Output.of(podCidr));
        }

        /**
         * @param resourceGroup The AKS resource group (string)
         * 
         * @return builder
         * 
         */
        public Builder resourceGroup(Output<String> resourceGroup) {
            $.resourceGroup = resourceGroup;
            return this;
        }

        /**
         * @param resourceGroup The AKS resource group (string)
         * 
         * @return builder
         * 
         */
        public Builder resourceGroup(String resourceGroup) {
            return resourceGroup(Output.of(resourceGroup));
        }

        /**
         * @param serviceCidr A CIDR IP range from which to assign Kubernetes Service IPs (string)
         * 
         * @return builder
         * 
         */
        public Builder serviceCidr(@Nullable Output<String> serviceCidr) {
            $.serviceCidr = serviceCidr;
            return this;
        }

        /**
         * @param serviceCidr A CIDR IP range from which to assign Kubernetes Service IPs (string)
         * 
         * @return builder
         * 
         */
        public Builder serviceCidr(String serviceCidr) {
            return serviceCidr(Output.of(serviceCidr));
        }

        /**
         * @param sshPublicKeyContents Contents of the SSH public key used to authenticate with Linux hosts (string)
         * 
         * @return builder
         * 
         */
        public Builder sshPublicKeyContents(Output<String> sshPublicKeyContents) {
            $.sshPublicKeyContents = sshPublicKeyContents;
            return this;
        }

        /**
         * @param sshPublicKeyContents Contents of the SSH public key used to authenticate with Linux hosts (string)
         * 
         * @return builder
         * 
         */
        public Builder sshPublicKeyContents(String sshPublicKeyContents) {
            return sshPublicKeyContents(Output.of(sshPublicKeyContents));
        }

        /**
         * @param subnet The AKS subnet (string)
         * 
         * @return builder
         * 
         */
        public Builder subnet(Output<String> subnet) {
            $.subnet = subnet;
            return this;
        }

        /**
         * @param subnet The AKS subnet (string)
         * 
         * @return builder
         * 
         */
        public Builder subnet(String subnet) {
            return subnet(Output.of(subnet));
        }

        /**
         * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription (string)
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(Output<String> subscriptionId) {
            $.subscriptionId = subscriptionId;
            return this;
        }

        /**
         * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription (string)
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(String subscriptionId) {
            return subscriptionId(Output.of(subscriptionId));
        }

        /**
         * @param tag Use `tags` argument instead as []string
         * 
         * @return builder
         * 
         * @deprecated
         * Use tags argument instead as []string
         * 
         */
        @Deprecated /* Use tags argument instead as []string */
        public Builder tag(@Nullable Output<Map<String,Object>> tag) {
            $.tag = tag;
            return this;
        }

        /**
         * @param tag Use `tags` argument instead as []string
         * 
         * @return builder
         * 
         * @deprecated
         * Use tags argument instead as []string
         * 
         */
        @Deprecated /* Use tags argument instead as []string */
        public Builder tag(Map<String,Object> tag) {
            return tag(Output.of(tag));
        }

        /**
         * @param tags The GKE node config tags (List)
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The GKE node config tags (List)
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags The GKE node config tags (List)
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param tenantId Azure tenant ID to use (string)
         * 
         * @return builder
         * 
         */
        public Builder tenantId(Output<String> tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        /**
         * @param tenantId Azure tenant ID to use (string)
         * 
         * @return builder
         * 
         */
        public Builder tenantId(String tenantId) {
            return tenantId(Output.of(tenantId));
        }

        /**
         * @param virtualNetwork The name of the virtual network to use. If it&#39;s not specified Rancher will create a new VPC (string)
         * 
         * @return builder
         * 
         */
        public Builder virtualNetwork(Output<String> virtualNetwork) {
            $.virtualNetwork = virtualNetwork;
            return this;
        }

        /**
         * @param virtualNetwork The name of the virtual network to use. If it&#39;s not specified Rancher will create a new VPC (string)
         * 
         * @return builder
         * 
         */
        public Builder virtualNetwork(String virtualNetwork) {
            return virtualNetwork(Output.of(virtualNetwork));
        }

        /**
         * @param virtualNetworkResourceGroup The AKS virtual network resource group (string)
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkResourceGroup(Output<String> virtualNetworkResourceGroup) {
            $.virtualNetworkResourceGroup = virtualNetworkResourceGroup;
            return this;
        }

        /**
         * @param virtualNetworkResourceGroup The AKS virtual network resource group (string)
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkResourceGroup(String virtualNetworkResourceGroup) {
            return virtualNetworkResourceGroup(Output.of(virtualNetworkResourceGroup));
        }

        public ClusterAksConfigArgs build() {
            $.agentDnsPrefix = Objects.requireNonNull($.agentDnsPrefix, "expected parameter 'agentDnsPrefix' to be non-null");
            $.clientId = Objects.requireNonNull($.clientId, "expected parameter 'clientId' to be non-null");
            $.clientSecret = Objects.requireNonNull($.clientSecret, "expected parameter 'clientSecret' to be non-null");
            $.kubernetesVersion = Objects.requireNonNull($.kubernetesVersion, "expected parameter 'kubernetesVersion' to be non-null");
            $.masterDnsPrefix = Objects.requireNonNull($.masterDnsPrefix, "expected parameter 'masterDnsPrefix' to be non-null");
            $.resourceGroup = Objects.requireNonNull($.resourceGroup, "expected parameter 'resourceGroup' to be non-null");
            $.sshPublicKeyContents = Objects.requireNonNull($.sshPublicKeyContents, "expected parameter 'sshPublicKeyContents' to be non-null");
            $.subnet = Objects.requireNonNull($.subnet, "expected parameter 'subnet' to be non-null");
            $.subscriptionId = Objects.requireNonNull($.subscriptionId, "expected parameter 'subscriptionId' to be non-null");
            $.tenantId = Objects.requireNonNull($.tenantId, "expected parameter 'tenantId' to be non-null");
            $.virtualNetwork = Objects.requireNonNull($.virtualNetwork, "expected parameter 'virtualNetwork' to be non-null");
            $.virtualNetworkResourceGroup = Objects.requireNonNull($.virtualNetworkResourceGroup, "expected parameter 'virtualNetworkResourceGroup' to be non-null");
            return $;
        }
    }

}
