// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.rancher2.inputs.ProjectResourceQuotaNamespaceDefaultLimitArgs;
import com.pulumi.rancher2.inputs.ProjectResourceQuotaProjectLimitArgs;
import java.util.Objects;


public final class ProjectResourceQuotaArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProjectResourceQuotaArgs Empty = new ProjectResourceQuotaArgs();

    /**
     * Default resource quota limit for  namespaces in project (list maxitems:1)
     * 
     */
    @Import(name="namespaceDefaultLimit", required=true)
    private Output<ProjectResourceQuotaNamespaceDefaultLimitArgs> namespaceDefaultLimit;

    /**
     * @return Default resource quota limit for  namespaces in project (list maxitems:1)
     * 
     */
    public Output<ProjectResourceQuotaNamespaceDefaultLimitArgs> namespaceDefaultLimit() {
        return this.namespaceDefaultLimit;
    }

    /**
     * Resource quota limit for project (list maxitems:1)
     * 
     */
    @Import(name="projectLimit", required=true)
    private Output<ProjectResourceQuotaProjectLimitArgs> projectLimit;

    /**
     * @return Resource quota limit for project (list maxitems:1)
     * 
     */
    public Output<ProjectResourceQuotaProjectLimitArgs> projectLimit() {
        return this.projectLimit;
    }

    private ProjectResourceQuotaArgs() {}

    private ProjectResourceQuotaArgs(ProjectResourceQuotaArgs $) {
        this.namespaceDefaultLimit = $.namespaceDefaultLimit;
        this.projectLimit = $.projectLimit;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectResourceQuotaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectResourceQuotaArgs $;

        public Builder() {
            $ = new ProjectResourceQuotaArgs();
        }

        public Builder(ProjectResourceQuotaArgs defaults) {
            $ = new ProjectResourceQuotaArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param namespaceDefaultLimit Default resource quota limit for  namespaces in project (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder namespaceDefaultLimit(Output<ProjectResourceQuotaNamespaceDefaultLimitArgs> namespaceDefaultLimit) {
            $.namespaceDefaultLimit = namespaceDefaultLimit;
            return this;
        }

        /**
         * @param namespaceDefaultLimit Default resource quota limit for  namespaces in project (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder namespaceDefaultLimit(ProjectResourceQuotaNamespaceDefaultLimitArgs namespaceDefaultLimit) {
            return namespaceDefaultLimit(Output.of(namespaceDefaultLimit));
        }

        /**
         * @param projectLimit Resource quota limit for project (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder projectLimit(Output<ProjectResourceQuotaProjectLimitArgs> projectLimit) {
            $.projectLimit = projectLimit;
            return this;
        }

        /**
         * @param projectLimit Resource quota limit for project (list maxitems:1)
         * 
         * @return builder
         * 
         */
        public Builder projectLimit(ProjectResourceQuotaProjectLimitArgs projectLimit) {
            return projectLimit(Output.of(projectLimit));
        }

        public ProjectResourceQuotaArgs build() {
            $.namespaceDefaultLimit = Objects.requireNonNull($.namespaceDefaultLimit, "expected parameter 'namespaceDefaultLimit' to be non-null");
            $.projectLimit = Objects.requireNonNull($.projectLimit, "expected parameter 'projectLimit' to be non-null");
            return $;
        }
    }

}
