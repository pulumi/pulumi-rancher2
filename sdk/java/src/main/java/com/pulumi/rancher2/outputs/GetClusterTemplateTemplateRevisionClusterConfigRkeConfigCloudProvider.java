// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.rancher2.outputs.GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderAwsCloudProvider;
import com.pulumi.rancher2.outputs.GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderAzureCloudProvider;
import com.pulumi.rancher2.outputs.GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderOpenstackCloudProvider;
import com.pulumi.rancher2.outputs.GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProvider;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProvider {
    private @Nullable GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderAwsCloudProvider awsCloudProvider;
    private @Nullable GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderAzureCloudProvider azureCloudProvider;
    private String customCloudProvider;
    /**
     * @return The cluster template name (string)
     * 
     */
    private @Nullable String name;
    private @Nullable GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderOpenstackCloudProvider openstackCloudProvider;
    private @Nullable GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProvider vsphereCloudProvider;

    private GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProvider() {}
    public Optional<GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderAwsCloudProvider> awsCloudProvider() {
        return Optional.ofNullable(this.awsCloudProvider);
    }
    public Optional<GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderAzureCloudProvider> azureCloudProvider() {
        return Optional.ofNullable(this.azureCloudProvider);
    }
    public String customCloudProvider() {
        return this.customCloudProvider;
    }
    /**
     * @return The cluster template name (string)
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderOpenstackCloudProvider> openstackCloudProvider() {
        return Optional.ofNullable(this.openstackCloudProvider);
    }
    public Optional<GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProvider> vsphereCloudProvider() {
        return Optional.ofNullable(this.vsphereCloudProvider);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProvider defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderAwsCloudProvider awsCloudProvider;
        private @Nullable GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderAzureCloudProvider azureCloudProvider;
        private String customCloudProvider;
        private @Nullable String name;
        private @Nullable GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderOpenstackCloudProvider openstackCloudProvider;
        private @Nullable GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProvider vsphereCloudProvider;
        public Builder() {}
        public Builder(GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProvider defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.awsCloudProvider = defaults.awsCloudProvider;
    	      this.azureCloudProvider = defaults.azureCloudProvider;
    	      this.customCloudProvider = defaults.customCloudProvider;
    	      this.name = defaults.name;
    	      this.openstackCloudProvider = defaults.openstackCloudProvider;
    	      this.vsphereCloudProvider = defaults.vsphereCloudProvider;
        }

        @CustomType.Setter
        public Builder awsCloudProvider(@Nullable GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderAwsCloudProvider awsCloudProvider) {
            this.awsCloudProvider = awsCloudProvider;
            return this;
        }
        @CustomType.Setter
        public Builder azureCloudProvider(@Nullable GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderAzureCloudProvider azureCloudProvider) {
            this.azureCloudProvider = azureCloudProvider;
            return this;
        }
        @CustomType.Setter
        public Builder customCloudProvider(String customCloudProvider) {
            this.customCloudProvider = Objects.requireNonNull(customCloudProvider);
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder openstackCloudProvider(@Nullable GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderOpenstackCloudProvider openstackCloudProvider) {
            this.openstackCloudProvider = openstackCloudProvider;
            return this;
        }
        @CustomType.Setter
        public Builder vsphereCloudProvider(@Nullable GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderVsphereCloudProvider vsphereCloudProvider) {
            this.vsphereCloudProvider = vsphereCloudProvider;
            return this;
        }
        public GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProvider build() {
            final var o = new GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProvider();
            o.awsCloudProvider = awsCloudProvider;
            o.azureCloudProvider = azureCloudProvider;
            o.customCloudProvider = customCloudProvider;
            o.name = name;
            o.openstackCloudProvider = openstackCloudProvider;
            o.vsphereCloudProvider = vsphereCloudProvider;
            return o;
        }
    }
}
