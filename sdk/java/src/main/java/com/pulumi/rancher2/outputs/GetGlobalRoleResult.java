// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.rancher2.outputs.GetGlobalRoleRule;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetGlobalRoleResult {
    /**
     * @return (Computed) Annotations for global role object (map)
     * 
     */
    private final Map<String,Object> annotations;
    /**
     * @return (Computed) Builtin global role (bool)
     * 
     */
    private final Boolean builtin;
    /**
     * @return (Computed) Global role description (string)
     * 
     */
    private final String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return (Computed) Labels for global role object (map)
     * 
     */
    private final Map<String,Object> labels;
    private final String name;
    /**
     * @return (Computed) Whether or not this role should be added to new users (bool)
     * 
     */
    private final Boolean newUserDefault;
    /**
     * @return (Computed) Global role policy rules (list)
     * 
     */
    private final List<GetGlobalRoleRule> rules;

    @CustomType.Constructor
    private GetGlobalRoleResult(
        @CustomType.Parameter("annotations") Map<String,Object> annotations,
        @CustomType.Parameter("builtin") Boolean builtin,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("labels") Map<String,Object> labels,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("newUserDefault") Boolean newUserDefault,
        @CustomType.Parameter("rules") List<GetGlobalRoleRule> rules) {
        this.annotations = annotations;
        this.builtin = builtin;
        this.description = description;
        this.id = id;
        this.labels = labels;
        this.name = name;
        this.newUserDefault = newUserDefault;
        this.rules = rules;
    }

    /**
     * @return (Computed) Annotations for global role object (map)
     * 
     */
    public Map<String,Object> annotations() {
        return this.annotations;
    }
    /**
     * @return (Computed) Builtin global role (bool)
     * 
     */
    public Boolean builtin() {
        return this.builtin;
    }
    /**
     * @return (Computed) Global role description (string)
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return (Computed) Labels for global role object (map)
     * 
     */
    public Map<String,Object> labels() {
        return this.labels;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return (Computed) Whether or not this role should be added to new users (bool)
     * 
     */
    public Boolean newUserDefault() {
        return this.newUserDefault;
    }
    /**
     * @return (Computed) Global role policy rules (list)
     * 
     */
    public List<GetGlobalRoleRule> rules() {
        return this.rules;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGlobalRoleResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Map<String,Object> annotations;
        private Boolean builtin;
        private String description;
        private String id;
        private Map<String,Object> labels;
        private String name;
        private Boolean newUserDefault;
        private List<GetGlobalRoleRule> rules;

        public Builder() {
    	      // Empty
        }

        public Builder(GetGlobalRoleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.annotations = defaults.annotations;
    	      this.builtin = defaults.builtin;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.newUserDefault = defaults.newUserDefault;
    	      this.rules = defaults.rules;
        }

        public Builder annotations(Map<String,Object> annotations) {
            this.annotations = Objects.requireNonNull(annotations);
            return this;
        }
        public Builder builtin(Boolean builtin) {
            this.builtin = Objects.requireNonNull(builtin);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder labels(Map<String,Object> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder newUserDefault(Boolean newUserDefault) {
            this.newUserDefault = Objects.requireNonNull(newUserDefault);
            return this;
        }
        public Builder rules(List<GetGlobalRoleRule> rules) {
            this.rules = Objects.requireNonNull(rules);
            return this;
        }
        public Builder rules(GetGlobalRoleRule... rules) {
            return rules(List.of(rules));
        }        public GetGlobalRoleResult build() {
            return new GetGlobalRoleResult(annotations, builtin, description, id, labels, name, newUserDefault, rules);
        }
    }
}
