// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.rancher2.outputs.GetGlobalRoleRule;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetGlobalRoleResult {
    /**
     * @return (Computed) Annotations for global role object (map)
     * 
     */
    private Map<String,Object> annotations;
    /**
     * @return (Computed) Builtin global role (bool)
     * 
     */
    private Boolean builtin;
    /**
     * @return (Computed) Global role description (string)
     * 
     */
    private String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return (Optional) Names of role templates whose permissions are granted by this global role in every cluster besides the local cluster (list)
     * 
     */
    private @Nullable List<String> inheritedClusterRoles;
    /**
     * @return (Computed) Labels for global role object (map)
     * 
     */
    private Map<String,Object> labels;
    private String name;
    /**
     * @return (Computed) Whether or not this role should be added to new users (bool)
     * 
     */
    private Boolean newUserDefault;
    /**
     * @return (Computed) Global role policy rules (list)
     * 
     */
    private List<GetGlobalRoleRule> rules;

    private GetGlobalRoleResult() {}
    /**
     * @return (Computed) Annotations for global role object (map)
     * 
     */
    public Map<String,Object> annotations() {
        return this.annotations;
    }
    /**
     * @return (Computed) Builtin global role (bool)
     * 
     */
    public Boolean builtin() {
        return this.builtin;
    }
    /**
     * @return (Computed) Global role description (string)
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return (Optional) Names of role templates whose permissions are granted by this global role in every cluster besides the local cluster (list)
     * 
     */
    public List<String> inheritedClusterRoles() {
        return this.inheritedClusterRoles == null ? List.of() : this.inheritedClusterRoles;
    }
    /**
     * @return (Computed) Labels for global role object (map)
     * 
     */
    public Map<String,Object> labels() {
        return this.labels;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return (Computed) Whether or not this role should be added to new users (bool)
     * 
     */
    public Boolean newUserDefault() {
        return this.newUserDefault;
    }
    /**
     * @return (Computed) Global role policy rules (list)
     * 
     */
    public List<GetGlobalRoleRule> rules() {
        return this.rules;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGlobalRoleResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,Object> annotations;
        private Boolean builtin;
        private String description;
        private String id;
        private @Nullable List<String> inheritedClusterRoles;
        private Map<String,Object> labels;
        private String name;
        private Boolean newUserDefault;
        private List<GetGlobalRoleRule> rules;
        public Builder() {}
        public Builder(GetGlobalRoleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.annotations = defaults.annotations;
    	      this.builtin = defaults.builtin;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.inheritedClusterRoles = defaults.inheritedClusterRoles;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.newUserDefault = defaults.newUserDefault;
    	      this.rules = defaults.rules;
        }

        @CustomType.Setter
        public Builder annotations(Map<String,Object> annotations) {
            if (annotations == null) {
              throw new MissingRequiredPropertyException("GetGlobalRoleResult", "annotations");
            }
            this.annotations = annotations;
            return this;
        }
        @CustomType.Setter
        public Builder builtin(Boolean builtin) {
            if (builtin == null) {
              throw new MissingRequiredPropertyException("GetGlobalRoleResult", "builtin");
            }
            this.builtin = builtin;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetGlobalRoleResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetGlobalRoleResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder inheritedClusterRoles(@Nullable List<String> inheritedClusterRoles) {

            this.inheritedClusterRoles = inheritedClusterRoles;
            return this;
        }
        public Builder inheritedClusterRoles(String... inheritedClusterRoles) {
            return inheritedClusterRoles(List.of(inheritedClusterRoles));
        }
        @CustomType.Setter
        public Builder labels(Map<String,Object> labels) {
            if (labels == null) {
              throw new MissingRequiredPropertyException("GetGlobalRoleResult", "labels");
            }
            this.labels = labels;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetGlobalRoleResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder newUserDefault(Boolean newUserDefault) {
            if (newUserDefault == null) {
              throw new MissingRequiredPropertyException("GetGlobalRoleResult", "newUserDefault");
            }
            this.newUserDefault = newUserDefault;
            return this;
        }
        @CustomType.Setter
        public Builder rules(List<GetGlobalRoleRule> rules) {
            if (rules == null) {
              throw new MissingRequiredPropertyException("GetGlobalRoleResult", "rules");
            }
            this.rules = rules;
            return this;
        }
        public Builder rules(GetGlobalRoleRule... rules) {
            return rules(List.of(rules));
        }
        public GetGlobalRoleResult build() {
            final var _resultValue = new GetGlobalRoleResult();
            _resultValue.annotations = annotations;
            _resultValue.builtin = builtin;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.inheritedClusterRoles = inheritedClusterRoles;
            _resultValue.labels = labels;
            _resultValue.name = name;
            _resultValue.newUserDefault = newUserDefault;
            _resultValue.rules = rules;
            return _resultValue;
        }
    }
}
