// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderAzureCloudProvider {
    private final String aadClientCertPassword;
    private final String aadClientCertPath;
    private final String aadClientId;
    private final String aadClientSecret;
    private final String cloud;
    private final Boolean cloudProviderBackoff;
    private final Integer cloudProviderBackoffDuration;
    private final Integer cloudProviderBackoffExponent;
    private final Integer cloudProviderBackoffJitter;
    private final Integer cloudProviderBackoffRetries;
    private final Boolean cloudProviderRateLimit;
    private final Integer cloudProviderRateLimitBucket;
    private final Integer cloudProviderRateLimitQps;
    private final @Nullable String loadBalancerSku;
    private final String location;
    private final Integer maximumLoadBalancerRuleCount;
    private final String primaryAvailabilitySetName;
    private final String primaryScaleSetName;
    private final String resourceGroup;
    private final String routeTableName;
    private final String securityGroupName;
    private final String subnetName;
    private final String subscriptionId;
    private final String tenantId;
    private final Boolean useInstanceMetadata;
    private final Boolean useManagedIdentityExtension;
    private final String vmType;
    private final String vnetName;
    private final String vnetResourceGroup;

    @CustomType.Constructor
    private GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderAzureCloudProvider(
        @CustomType.Parameter("aadClientCertPassword") String aadClientCertPassword,
        @CustomType.Parameter("aadClientCertPath") String aadClientCertPath,
        @CustomType.Parameter("aadClientId") String aadClientId,
        @CustomType.Parameter("aadClientSecret") String aadClientSecret,
        @CustomType.Parameter("cloud") String cloud,
        @CustomType.Parameter("cloudProviderBackoff") Boolean cloudProviderBackoff,
        @CustomType.Parameter("cloudProviderBackoffDuration") Integer cloudProviderBackoffDuration,
        @CustomType.Parameter("cloudProviderBackoffExponent") Integer cloudProviderBackoffExponent,
        @CustomType.Parameter("cloudProviderBackoffJitter") Integer cloudProviderBackoffJitter,
        @CustomType.Parameter("cloudProviderBackoffRetries") Integer cloudProviderBackoffRetries,
        @CustomType.Parameter("cloudProviderRateLimit") Boolean cloudProviderRateLimit,
        @CustomType.Parameter("cloudProviderRateLimitBucket") Integer cloudProviderRateLimitBucket,
        @CustomType.Parameter("cloudProviderRateLimitQps") Integer cloudProviderRateLimitQps,
        @CustomType.Parameter("loadBalancerSku") @Nullable String loadBalancerSku,
        @CustomType.Parameter("location") String location,
        @CustomType.Parameter("maximumLoadBalancerRuleCount") Integer maximumLoadBalancerRuleCount,
        @CustomType.Parameter("primaryAvailabilitySetName") String primaryAvailabilitySetName,
        @CustomType.Parameter("primaryScaleSetName") String primaryScaleSetName,
        @CustomType.Parameter("resourceGroup") String resourceGroup,
        @CustomType.Parameter("routeTableName") String routeTableName,
        @CustomType.Parameter("securityGroupName") String securityGroupName,
        @CustomType.Parameter("subnetName") String subnetName,
        @CustomType.Parameter("subscriptionId") String subscriptionId,
        @CustomType.Parameter("tenantId") String tenantId,
        @CustomType.Parameter("useInstanceMetadata") Boolean useInstanceMetadata,
        @CustomType.Parameter("useManagedIdentityExtension") Boolean useManagedIdentityExtension,
        @CustomType.Parameter("vmType") String vmType,
        @CustomType.Parameter("vnetName") String vnetName,
        @CustomType.Parameter("vnetResourceGroup") String vnetResourceGroup) {
        this.aadClientCertPassword = aadClientCertPassword;
        this.aadClientCertPath = aadClientCertPath;
        this.aadClientId = aadClientId;
        this.aadClientSecret = aadClientSecret;
        this.cloud = cloud;
        this.cloudProviderBackoff = cloudProviderBackoff;
        this.cloudProviderBackoffDuration = cloudProviderBackoffDuration;
        this.cloudProviderBackoffExponent = cloudProviderBackoffExponent;
        this.cloudProviderBackoffJitter = cloudProviderBackoffJitter;
        this.cloudProviderBackoffRetries = cloudProviderBackoffRetries;
        this.cloudProviderRateLimit = cloudProviderRateLimit;
        this.cloudProviderRateLimitBucket = cloudProviderRateLimitBucket;
        this.cloudProviderRateLimitQps = cloudProviderRateLimitQps;
        this.loadBalancerSku = loadBalancerSku;
        this.location = location;
        this.maximumLoadBalancerRuleCount = maximumLoadBalancerRuleCount;
        this.primaryAvailabilitySetName = primaryAvailabilitySetName;
        this.primaryScaleSetName = primaryScaleSetName;
        this.resourceGroup = resourceGroup;
        this.routeTableName = routeTableName;
        this.securityGroupName = securityGroupName;
        this.subnetName = subnetName;
        this.subscriptionId = subscriptionId;
        this.tenantId = tenantId;
        this.useInstanceMetadata = useInstanceMetadata;
        this.useManagedIdentityExtension = useManagedIdentityExtension;
        this.vmType = vmType;
        this.vnetName = vnetName;
        this.vnetResourceGroup = vnetResourceGroup;
    }

    public String aadClientCertPassword() {
        return this.aadClientCertPassword;
    }
    public String aadClientCertPath() {
        return this.aadClientCertPath;
    }
    public String aadClientId() {
        return this.aadClientId;
    }
    public String aadClientSecret() {
        return this.aadClientSecret;
    }
    public String cloud() {
        return this.cloud;
    }
    public Boolean cloudProviderBackoff() {
        return this.cloudProviderBackoff;
    }
    public Integer cloudProviderBackoffDuration() {
        return this.cloudProviderBackoffDuration;
    }
    public Integer cloudProviderBackoffExponent() {
        return this.cloudProviderBackoffExponent;
    }
    public Integer cloudProviderBackoffJitter() {
        return this.cloudProviderBackoffJitter;
    }
    public Integer cloudProviderBackoffRetries() {
        return this.cloudProviderBackoffRetries;
    }
    public Boolean cloudProviderRateLimit() {
        return this.cloudProviderRateLimit;
    }
    public Integer cloudProviderRateLimitBucket() {
        return this.cloudProviderRateLimitBucket;
    }
    public Integer cloudProviderRateLimitQps() {
        return this.cloudProviderRateLimitQps;
    }
    public Optional<String> loadBalancerSku() {
        return Optional.ofNullable(this.loadBalancerSku);
    }
    public String location() {
        return this.location;
    }
    public Integer maximumLoadBalancerRuleCount() {
        return this.maximumLoadBalancerRuleCount;
    }
    public String primaryAvailabilitySetName() {
        return this.primaryAvailabilitySetName;
    }
    public String primaryScaleSetName() {
        return this.primaryScaleSetName;
    }
    public String resourceGroup() {
        return this.resourceGroup;
    }
    public String routeTableName() {
        return this.routeTableName;
    }
    public String securityGroupName() {
        return this.securityGroupName;
    }
    public String subnetName() {
        return this.subnetName;
    }
    public String subscriptionId() {
        return this.subscriptionId;
    }
    public String tenantId() {
        return this.tenantId;
    }
    public Boolean useInstanceMetadata() {
        return this.useInstanceMetadata;
    }
    public Boolean useManagedIdentityExtension() {
        return this.useManagedIdentityExtension;
    }
    public String vmType() {
        return this.vmType;
    }
    public String vnetName() {
        return this.vnetName;
    }
    public String vnetResourceGroup() {
        return this.vnetResourceGroup;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderAzureCloudProvider defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String aadClientCertPassword;
        private String aadClientCertPath;
        private String aadClientId;
        private String aadClientSecret;
        private String cloud;
        private Boolean cloudProviderBackoff;
        private Integer cloudProviderBackoffDuration;
        private Integer cloudProviderBackoffExponent;
        private Integer cloudProviderBackoffJitter;
        private Integer cloudProviderBackoffRetries;
        private Boolean cloudProviderRateLimit;
        private Integer cloudProviderRateLimitBucket;
        private Integer cloudProviderRateLimitQps;
        private @Nullable String loadBalancerSku;
        private String location;
        private Integer maximumLoadBalancerRuleCount;
        private String primaryAvailabilitySetName;
        private String primaryScaleSetName;
        private String resourceGroup;
        private String routeTableName;
        private String securityGroupName;
        private String subnetName;
        private String subscriptionId;
        private String tenantId;
        private Boolean useInstanceMetadata;
        private Boolean useManagedIdentityExtension;
        private String vmType;
        private String vnetName;
        private String vnetResourceGroup;

        public Builder() {
    	      // Empty
        }

        public Builder(GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderAzureCloudProvider defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aadClientCertPassword = defaults.aadClientCertPassword;
    	      this.aadClientCertPath = defaults.aadClientCertPath;
    	      this.aadClientId = defaults.aadClientId;
    	      this.aadClientSecret = defaults.aadClientSecret;
    	      this.cloud = defaults.cloud;
    	      this.cloudProviderBackoff = defaults.cloudProviderBackoff;
    	      this.cloudProviderBackoffDuration = defaults.cloudProviderBackoffDuration;
    	      this.cloudProviderBackoffExponent = defaults.cloudProviderBackoffExponent;
    	      this.cloudProviderBackoffJitter = defaults.cloudProviderBackoffJitter;
    	      this.cloudProviderBackoffRetries = defaults.cloudProviderBackoffRetries;
    	      this.cloudProviderRateLimit = defaults.cloudProviderRateLimit;
    	      this.cloudProviderRateLimitBucket = defaults.cloudProviderRateLimitBucket;
    	      this.cloudProviderRateLimitQps = defaults.cloudProviderRateLimitQps;
    	      this.loadBalancerSku = defaults.loadBalancerSku;
    	      this.location = defaults.location;
    	      this.maximumLoadBalancerRuleCount = defaults.maximumLoadBalancerRuleCount;
    	      this.primaryAvailabilitySetName = defaults.primaryAvailabilitySetName;
    	      this.primaryScaleSetName = defaults.primaryScaleSetName;
    	      this.resourceGroup = defaults.resourceGroup;
    	      this.routeTableName = defaults.routeTableName;
    	      this.securityGroupName = defaults.securityGroupName;
    	      this.subnetName = defaults.subnetName;
    	      this.subscriptionId = defaults.subscriptionId;
    	      this.tenantId = defaults.tenantId;
    	      this.useInstanceMetadata = defaults.useInstanceMetadata;
    	      this.useManagedIdentityExtension = defaults.useManagedIdentityExtension;
    	      this.vmType = defaults.vmType;
    	      this.vnetName = defaults.vnetName;
    	      this.vnetResourceGroup = defaults.vnetResourceGroup;
        }

        public Builder aadClientCertPassword(String aadClientCertPassword) {
            this.aadClientCertPassword = Objects.requireNonNull(aadClientCertPassword);
            return this;
        }
        public Builder aadClientCertPath(String aadClientCertPath) {
            this.aadClientCertPath = Objects.requireNonNull(aadClientCertPath);
            return this;
        }
        public Builder aadClientId(String aadClientId) {
            this.aadClientId = Objects.requireNonNull(aadClientId);
            return this;
        }
        public Builder aadClientSecret(String aadClientSecret) {
            this.aadClientSecret = Objects.requireNonNull(aadClientSecret);
            return this;
        }
        public Builder cloud(String cloud) {
            this.cloud = Objects.requireNonNull(cloud);
            return this;
        }
        public Builder cloudProviderBackoff(Boolean cloudProviderBackoff) {
            this.cloudProviderBackoff = Objects.requireNonNull(cloudProviderBackoff);
            return this;
        }
        public Builder cloudProviderBackoffDuration(Integer cloudProviderBackoffDuration) {
            this.cloudProviderBackoffDuration = Objects.requireNonNull(cloudProviderBackoffDuration);
            return this;
        }
        public Builder cloudProviderBackoffExponent(Integer cloudProviderBackoffExponent) {
            this.cloudProviderBackoffExponent = Objects.requireNonNull(cloudProviderBackoffExponent);
            return this;
        }
        public Builder cloudProviderBackoffJitter(Integer cloudProviderBackoffJitter) {
            this.cloudProviderBackoffJitter = Objects.requireNonNull(cloudProviderBackoffJitter);
            return this;
        }
        public Builder cloudProviderBackoffRetries(Integer cloudProviderBackoffRetries) {
            this.cloudProviderBackoffRetries = Objects.requireNonNull(cloudProviderBackoffRetries);
            return this;
        }
        public Builder cloudProviderRateLimit(Boolean cloudProviderRateLimit) {
            this.cloudProviderRateLimit = Objects.requireNonNull(cloudProviderRateLimit);
            return this;
        }
        public Builder cloudProviderRateLimitBucket(Integer cloudProviderRateLimitBucket) {
            this.cloudProviderRateLimitBucket = Objects.requireNonNull(cloudProviderRateLimitBucket);
            return this;
        }
        public Builder cloudProviderRateLimitQps(Integer cloudProviderRateLimitQps) {
            this.cloudProviderRateLimitQps = Objects.requireNonNull(cloudProviderRateLimitQps);
            return this;
        }
        public Builder loadBalancerSku(@Nullable String loadBalancerSku) {
            this.loadBalancerSku = loadBalancerSku;
            return this;
        }
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder maximumLoadBalancerRuleCount(Integer maximumLoadBalancerRuleCount) {
            this.maximumLoadBalancerRuleCount = Objects.requireNonNull(maximumLoadBalancerRuleCount);
            return this;
        }
        public Builder primaryAvailabilitySetName(String primaryAvailabilitySetName) {
            this.primaryAvailabilitySetName = Objects.requireNonNull(primaryAvailabilitySetName);
            return this;
        }
        public Builder primaryScaleSetName(String primaryScaleSetName) {
            this.primaryScaleSetName = Objects.requireNonNull(primaryScaleSetName);
            return this;
        }
        public Builder resourceGroup(String resourceGroup) {
            this.resourceGroup = Objects.requireNonNull(resourceGroup);
            return this;
        }
        public Builder routeTableName(String routeTableName) {
            this.routeTableName = Objects.requireNonNull(routeTableName);
            return this;
        }
        public Builder securityGroupName(String securityGroupName) {
            this.securityGroupName = Objects.requireNonNull(securityGroupName);
            return this;
        }
        public Builder subnetName(String subnetName) {
            this.subnetName = Objects.requireNonNull(subnetName);
            return this;
        }
        public Builder subscriptionId(String subscriptionId) {
            this.subscriptionId = Objects.requireNonNull(subscriptionId);
            return this;
        }
        public Builder tenantId(String tenantId) {
            this.tenantId = Objects.requireNonNull(tenantId);
            return this;
        }
        public Builder useInstanceMetadata(Boolean useInstanceMetadata) {
            this.useInstanceMetadata = Objects.requireNonNull(useInstanceMetadata);
            return this;
        }
        public Builder useManagedIdentityExtension(Boolean useManagedIdentityExtension) {
            this.useManagedIdentityExtension = Objects.requireNonNull(useManagedIdentityExtension);
            return this;
        }
        public Builder vmType(String vmType) {
            this.vmType = Objects.requireNonNull(vmType);
            return this;
        }
        public Builder vnetName(String vnetName) {
            this.vnetName = Objects.requireNonNull(vnetName);
            return this;
        }
        public Builder vnetResourceGroup(String vnetResourceGroup) {
            this.vnetResourceGroup = Objects.requireNonNull(vnetResourceGroup);
            return this;
        }        public GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderAzureCloudProvider build() {
            return new GetClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProviderAzureCloudProvider(aadClientCertPassword, aadClientCertPath, aadClientId, aadClientSecret, cloud, cloudProviderBackoff, cloudProviderBackoffDuration, cloudProviderBackoffExponent, cloudProviderBackoffJitter, cloudProviderBackoffRetries, cloudProviderRateLimit, cloudProviderRateLimitBucket, cloudProviderRateLimitQps, loadBalancerSku, location, maximumLoadBalancerRuleCount, primaryAvailabilitySetName, primaryScaleSetName, resourceGroup, routeTableName, securityGroupName, subnetName, subscriptionId, tenantId, useInstanceMetadata, useManagedIdentityExtension, vmType, vnetName, vnetResourceGroup);
        }
    }
}
