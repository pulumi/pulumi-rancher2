// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MultiClusterAppAnswerArgs extends com.pulumi.resources.ResourceArgs {

    public static final MultiClusterAppAnswerArgs Empty = new MultiClusterAppAnswerArgs();

    /**
     * Cluster ID for answer
     * 
     */
    @Import(name="clusterId")
    private @Nullable Output<String> clusterId;

    /**
     * @return Cluster ID for answer
     * 
     */
    public Optional<Output<String>> clusterId() {
        return Optional.ofNullable(this.clusterId);
    }

    /**
     * Project ID for answer
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return Project ID for answer
     * 
     */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * Key/values for answer
     * 
     */
    @Import(name="values")
    private @Nullable Output<Map<String,Object>> values;

    /**
     * @return Key/values for answer
     * 
     */
    public Optional<Output<Map<String,Object>>> values() {
        return Optional.ofNullable(this.values);
    }

    private MultiClusterAppAnswerArgs() {}

    private MultiClusterAppAnswerArgs(MultiClusterAppAnswerArgs $) {
        this.clusterId = $.clusterId;
        this.projectId = $.projectId;
        this.values = $.values;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MultiClusterAppAnswerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MultiClusterAppAnswerArgs $;

        public Builder() {
            $ = new MultiClusterAppAnswerArgs();
        }

        public Builder(MultiClusterAppAnswerArgs defaults) {
            $ = new MultiClusterAppAnswerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterId Cluster ID for answer
         * 
         * @return builder
         * 
         */
        public Builder clusterId(@Nullable Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        /**
         * @param clusterId Cluster ID for answer
         * 
         * @return builder
         * 
         */
        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        /**
         * @param projectId Project ID for answer
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId Project ID for answer
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param values Key/values for answer
         * 
         * @return builder
         * 
         */
        public Builder values(@Nullable Output<Map<String,Object>> values) {
            $.values = values;
            return this;
        }

        /**
         * @param values Key/values for answer
         * 
         * @return builder
         * 
         */
        public Builder values(Map<String,Object> values) {
            return values(Output.of(values));
        }

        public MultiClusterAppAnswerArgs build() {
            return $;
        }
    }

}
