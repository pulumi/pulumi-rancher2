// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.rancher2.inputs.ClusterTemplateMemberArgs;
import com.pulumi.rancher2.inputs.ClusterTemplateTemplateRevisionArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterTemplateState extends com.pulumi.resources.ResourceArgs {

    public static final ClusterTemplateState Empty = new ClusterTemplateState();

    /**
     * Annotations for the cluster template (map)
     * 
     */
    @Import(name="annotations")
    private @Nullable Output<Map<String,String>> annotations;

    /**
     * @return Annotations for the cluster template (map)
     * 
     */
    public Optional<Output<Map<String,String>>> annotations() {
        return Optional.ofNullable(this.annotations);
    }

    /**
     * (Computed) Default cluster template revision ID (string)
     * 
     */
    @Import(name="defaultRevisionId")
    private @Nullable Output<String> defaultRevisionId;

    /**
     * @return (Computed) Default cluster template revision ID (string)
     * 
     */
    public Optional<Output<String>> defaultRevisionId() {
        return Optional.ofNullable(this.defaultRevisionId);
    }

    /**
     * Cluster template description
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Cluster template description
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Labels for the cluster template (map)
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return Labels for the cluster template (map)
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * Cluster template members (list)
     * 
     */
    @Import(name="members")
    private @Nullable Output<List<ClusterTemplateMemberArgs>> members;

    /**
     * @return Cluster template members (list)
     * 
     */
    public Optional<Output<List<ClusterTemplateMemberArgs>>> members() {
        return Optional.ofNullable(this.members);
    }

    /**
     * The cluster template name (string)
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The cluster template name (string)
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Cluster template revisions (list)
     * 
     */
    @Import(name="templateRevisions")
    private @Nullable Output<List<ClusterTemplateTemplateRevisionArgs>> templateRevisions;

    /**
     * @return Cluster template revisions (list)
     * 
     */
    public Optional<Output<List<ClusterTemplateTemplateRevisionArgs>>> templateRevisions() {
        return Optional.ofNullable(this.templateRevisions);
    }

    private ClusterTemplateState() {}

    private ClusterTemplateState(ClusterTemplateState $) {
        this.annotations = $.annotations;
        this.defaultRevisionId = $.defaultRevisionId;
        this.description = $.description;
        this.labels = $.labels;
        this.members = $.members;
        this.name = $.name;
        this.templateRevisions = $.templateRevisions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterTemplateState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterTemplateState $;

        public Builder() {
            $ = new ClusterTemplateState();
        }

        public Builder(ClusterTemplateState defaults) {
            $ = new ClusterTemplateState(Objects.requireNonNull(defaults));
        }

        /**
         * @param annotations Annotations for the cluster template (map)
         * 
         * @return builder
         * 
         */
        public Builder annotations(@Nullable Output<Map<String,String>> annotations) {
            $.annotations = annotations;
            return this;
        }

        /**
         * @param annotations Annotations for the cluster template (map)
         * 
         * @return builder
         * 
         */
        public Builder annotations(Map<String,String> annotations) {
            return annotations(Output.of(annotations));
        }

        /**
         * @param defaultRevisionId (Computed) Default cluster template revision ID (string)
         * 
         * @return builder
         * 
         */
        public Builder defaultRevisionId(@Nullable Output<String> defaultRevisionId) {
            $.defaultRevisionId = defaultRevisionId;
            return this;
        }

        /**
         * @param defaultRevisionId (Computed) Default cluster template revision ID (string)
         * 
         * @return builder
         * 
         */
        public Builder defaultRevisionId(String defaultRevisionId) {
            return defaultRevisionId(Output.of(defaultRevisionId));
        }

        /**
         * @param description Cluster template description
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Cluster template description
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param labels Labels for the cluster template (map)
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels Labels for the cluster template (map)
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param members Cluster template members (list)
         * 
         * @return builder
         * 
         */
        public Builder members(@Nullable Output<List<ClusterTemplateMemberArgs>> members) {
            $.members = members;
            return this;
        }

        /**
         * @param members Cluster template members (list)
         * 
         * @return builder
         * 
         */
        public Builder members(List<ClusterTemplateMemberArgs> members) {
            return members(Output.of(members));
        }

        /**
         * @param members Cluster template members (list)
         * 
         * @return builder
         * 
         */
        public Builder members(ClusterTemplateMemberArgs... members) {
            return members(List.of(members));
        }

        /**
         * @param name The cluster template name (string)
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The cluster template name (string)
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param templateRevisions Cluster template revisions (list)
         * 
         * @return builder
         * 
         */
        public Builder templateRevisions(@Nullable Output<List<ClusterTemplateTemplateRevisionArgs>> templateRevisions) {
            $.templateRevisions = templateRevisions;
            return this;
        }

        /**
         * @param templateRevisions Cluster template revisions (list)
         * 
         * @return builder
         * 
         */
        public Builder templateRevisions(List<ClusterTemplateTemplateRevisionArgs> templateRevisions) {
            return templateRevisions(Output.of(templateRevisions));
        }

        /**
         * @param templateRevisions Cluster template revisions (list)
         * 
         * @return builder
         * 
         */
        public Builder templateRevisions(ClusterTemplateTemplateRevisionArgs... templateRevisions) {
            return templateRevisions(List.of(templateRevisions));
        }

        public ClusterTemplateState build() {
            return $;
        }
    }

}
