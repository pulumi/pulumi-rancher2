// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudCredentialHarvesterCredentialConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudCredentialHarvesterCredentialConfigArgs Empty = new CloudCredentialHarvesterCredentialConfigArgs();

    /**
     * Imported Harvester Cluster ID (string)
     * 
     */
    @Import(name="clusterId")
    private @Nullable Output<String> clusterId;

    /**
     * @return Imported Harvester Cluster ID (string)
     * 
     */
    public Optional<Output<String>> clusterId() {
        return Optional.ofNullable(this.clusterId);
    }

    /**
     * Harvester Cluster Type. Supported values : `&#34;imported&#34; | &#34;external&#34;` (string)
     * 
     */
    @Import(name="clusterType", required=true)
    private Output<String> clusterType;

    /**
     * @return Harvester Cluster Type. Supported values : `&#34;imported&#34; | &#34;external&#34;` (string)
     * 
     */
    public Output<String> clusterType() {
        return this.clusterType;
    }

    /**
     * Harvester Cluster KubeConfig Content (string)
     * 
     */
    @Import(name="kubeconfigContent", required=true)
    private Output<String> kubeconfigContent;

    /**
     * @return Harvester Cluster KubeConfig Content (string)
     * 
     */
    public Output<String> kubeconfigContent() {
        return this.kubeconfigContent;
    }

    private CloudCredentialHarvesterCredentialConfigArgs() {}

    private CloudCredentialHarvesterCredentialConfigArgs(CloudCredentialHarvesterCredentialConfigArgs $) {
        this.clusterId = $.clusterId;
        this.clusterType = $.clusterType;
        this.kubeconfigContent = $.kubeconfigContent;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudCredentialHarvesterCredentialConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudCredentialHarvesterCredentialConfigArgs $;

        public Builder() {
            $ = new CloudCredentialHarvesterCredentialConfigArgs();
        }

        public Builder(CloudCredentialHarvesterCredentialConfigArgs defaults) {
            $ = new CloudCredentialHarvesterCredentialConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterId Imported Harvester Cluster ID (string)
         * 
         * @return builder
         * 
         */
        public Builder clusterId(@Nullable Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        /**
         * @param clusterId Imported Harvester Cluster ID (string)
         * 
         * @return builder
         * 
         */
        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        /**
         * @param clusterType Harvester Cluster Type. Supported values : `&#34;imported&#34; | &#34;external&#34;` (string)
         * 
         * @return builder
         * 
         */
        public Builder clusterType(Output<String> clusterType) {
            $.clusterType = clusterType;
            return this;
        }

        /**
         * @param clusterType Harvester Cluster Type. Supported values : `&#34;imported&#34; | &#34;external&#34;` (string)
         * 
         * @return builder
         * 
         */
        public Builder clusterType(String clusterType) {
            return clusterType(Output.of(clusterType));
        }

        /**
         * @param kubeconfigContent Harvester Cluster KubeConfig Content (string)
         * 
         * @return builder
         * 
         */
        public Builder kubeconfigContent(Output<String> kubeconfigContent) {
            $.kubeconfigContent = kubeconfigContent;
            return this;
        }

        /**
         * @param kubeconfigContent Harvester Cluster KubeConfig Content (string)
         * 
         * @return builder
         * 
         */
        public Builder kubeconfigContent(String kubeconfigContent) {
            return kubeconfigContent(Output.of(kubeconfigContent));
        }

        public CloudCredentialHarvesterCredentialConfigArgs build() {
            $.clusterType = Objects.requireNonNull($.clusterType, "expected parameter 'clusterType' to be non-null");
            $.kubeconfigContent = Objects.requireNonNull($.kubeconfigContent, "expected parameter 'kubeconfigContent' to be non-null");
            return $;
        }
    }

}
