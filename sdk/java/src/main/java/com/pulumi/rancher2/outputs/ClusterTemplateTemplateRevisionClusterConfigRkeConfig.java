// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.rancher2.outputs.ClusterTemplateTemplateRevisionClusterConfigRkeConfigAuthentication;
import com.pulumi.rancher2.outputs.ClusterTemplateTemplateRevisionClusterConfigRkeConfigAuthorization;
import com.pulumi.rancher2.outputs.ClusterTemplateTemplateRevisionClusterConfigRkeConfigBastionHost;
import com.pulumi.rancher2.outputs.ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProvider;
import com.pulumi.rancher2.outputs.ClusterTemplateTemplateRevisionClusterConfigRkeConfigDns;
import com.pulumi.rancher2.outputs.ClusterTemplateTemplateRevisionClusterConfigRkeConfigIngress;
import com.pulumi.rancher2.outputs.ClusterTemplateTemplateRevisionClusterConfigRkeConfigMonitoring;
import com.pulumi.rancher2.outputs.ClusterTemplateTemplateRevisionClusterConfigRkeConfigNetwork;
import com.pulumi.rancher2.outputs.ClusterTemplateTemplateRevisionClusterConfigRkeConfigNode;
import com.pulumi.rancher2.outputs.ClusterTemplateTemplateRevisionClusterConfigRkeConfigPrivateRegistry;
import com.pulumi.rancher2.outputs.ClusterTemplateTemplateRevisionClusterConfigRkeConfigServices;
import com.pulumi.rancher2.outputs.ClusterTemplateTemplateRevisionClusterConfigRkeConfigUpgradeStrategy;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterTemplateTemplateRevisionClusterConfigRkeConfig {
    private final @Nullable Integer addonJobTimeout;
    private final @Nullable String addons;
    private final @Nullable List<String> addonsIncludes;
    private final @Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigAuthentication authentication;
    private final @Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigAuthorization authorization;
    private final @Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigBastionHost bastionHost;
    private final @Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProvider cloudProvider;
    private final @Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigDns dns;
    private final @Nullable Boolean enableCriDockerd;
    private final @Nullable Boolean ignoreDockerVersion;
    private final @Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigIngress ingress;
    private final @Nullable String kubernetesVersion;
    private final @Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigMonitoring monitoring;
    private final @Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigNetwork network;
    private final @Nullable List<ClusterTemplateTemplateRevisionClusterConfigRkeConfigNode> nodes;
    private final @Nullable String prefixPath;
    private final @Nullable List<ClusterTemplateTemplateRevisionClusterConfigRkeConfigPrivateRegistry> privateRegistries;
    private final @Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigServices services;
    private final @Nullable Boolean sshAgentAuth;
    private final @Nullable String sshCertPath;
    private final @Nullable String sshKeyPath;
    private final @Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigUpgradeStrategy upgradeStrategy;
    private final @Nullable String winPrefixPath;

    @CustomType.Constructor
    private ClusterTemplateTemplateRevisionClusterConfigRkeConfig(
        @CustomType.Parameter("addonJobTimeout") @Nullable Integer addonJobTimeout,
        @CustomType.Parameter("addons") @Nullable String addons,
        @CustomType.Parameter("addonsIncludes") @Nullable List<String> addonsIncludes,
        @CustomType.Parameter("authentication") @Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigAuthentication authentication,
        @CustomType.Parameter("authorization") @Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigAuthorization authorization,
        @CustomType.Parameter("bastionHost") @Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigBastionHost bastionHost,
        @CustomType.Parameter("cloudProvider") @Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProvider cloudProvider,
        @CustomType.Parameter("dns") @Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigDns dns,
        @CustomType.Parameter("enableCriDockerd") @Nullable Boolean enableCriDockerd,
        @CustomType.Parameter("ignoreDockerVersion") @Nullable Boolean ignoreDockerVersion,
        @CustomType.Parameter("ingress") @Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigIngress ingress,
        @CustomType.Parameter("kubernetesVersion") @Nullable String kubernetesVersion,
        @CustomType.Parameter("monitoring") @Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigMonitoring monitoring,
        @CustomType.Parameter("network") @Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigNetwork network,
        @CustomType.Parameter("nodes") @Nullable List<ClusterTemplateTemplateRevisionClusterConfigRkeConfigNode> nodes,
        @CustomType.Parameter("prefixPath") @Nullable String prefixPath,
        @CustomType.Parameter("privateRegistries") @Nullable List<ClusterTemplateTemplateRevisionClusterConfigRkeConfigPrivateRegistry> privateRegistries,
        @CustomType.Parameter("services") @Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigServices services,
        @CustomType.Parameter("sshAgentAuth") @Nullable Boolean sshAgentAuth,
        @CustomType.Parameter("sshCertPath") @Nullable String sshCertPath,
        @CustomType.Parameter("sshKeyPath") @Nullable String sshKeyPath,
        @CustomType.Parameter("upgradeStrategy") @Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigUpgradeStrategy upgradeStrategy,
        @CustomType.Parameter("winPrefixPath") @Nullable String winPrefixPath) {
        this.addonJobTimeout = addonJobTimeout;
        this.addons = addons;
        this.addonsIncludes = addonsIncludes;
        this.authentication = authentication;
        this.authorization = authorization;
        this.bastionHost = bastionHost;
        this.cloudProvider = cloudProvider;
        this.dns = dns;
        this.enableCriDockerd = enableCriDockerd;
        this.ignoreDockerVersion = ignoreDockerVersion;
        this.ingress = ingress;
        this.kubernetesVersion = kubernetesVersion;
        this.monitoring = monitoring;
        this.network = network;
        this.nodes = nodes;
        this.prefixPath = prefixPath;
        this.privateRegistries = privateRegistries;
        this.services = services;
        this.sshAgentAuth = sshAgentAuth;
        this.sshCertPath = sshCertPath;
        this.sshKeyPath = sshKeyPath;
        this.upgradeStrategy = upgradeStrategy;
        this.winPrefixPath = winPrefixPath;
    }

    public Optional<Integer> addonJobTimeout() {
        return Optional.ofNullable(this.addonJobTimeout);
    }
    public Optional<String> addons() {
        return Optional.ofNullable(this.addons);
    }
    public List<String> addonsIncludes() {
        return this.addonsIncludes == null ? List.of() : this.addonsIncludes;
    }
    public Optional<ClusterTemplateTemplateRevisionClusterConfigRkeConfigAuthentication> authentication() {
        return Optional.ofNullable(this.authentication);
    }
    public Optional<ClusterTemplateTemplateRevisionClusterConfigRkeConfigAuthorization> authorization() {
        return Optional.ofNullable(this.authorization);
    }
    public Optional<ClusterTemplateTemplateRevisionClusterConfigRkeConfigBastionHost> bastionHost() {
        return Optional.ofNullable(this.bastionHost);
    }
    public Optional<ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProvider> cloudProvider() {
        return Optional.ofNullable(this.cloudProvider);
    }
    public Optional<ClusterTemplateTemplateRevisionClusterConfigRkeConfigDns> dns() {
        return Optional.ofNullable(this.dns);
    }
    public Optional<Boolean> enableCriDockerd() {
        return Optional.ofNullable(this.enableCriDockerd);
    }
    public Optional<Boolean> ignoreDockerVersion() {
        return Optional.ofNullable(this.ignoreDockerVersion);
    }
    public Optional<ClusterTemplateTemplateRevisionClusterConfigRkeConfigIngress> ingress() {
        return Optional.ofNullable(this.ingress);
    }
    public Optional<String> kubernetesVersion() {
        return Optional.ofNullable(this.kubernetesVersion);
    }
    public Optional<ClusterTemplateTemplateRevisionClusterConfigRkeConfigMonitoring> monitoring() {
        return Optional.ofNullable(this.monitoring);
    }
    public Optional<ClusterTemplateTemplateRevisionClusterConfigRkeConfigNetwork> network() {
        return Optional.ofNullable(this.network);
    }
    public List<ClusterTemplateTemplateRevisionClusterConfigRkeConfigNode> nodes() {
        return this.nodes == null ? List.of() : this.nodes;
    }
    public Optional<String> prefixPath() {
        return Optional.ofNullable(this.prefixPath);
    }
    public List<ClusterTemplateTemplateRevisionClusterConfigRkeConfigPrivateRegistry> privateRegistries() {
        return this.privateRegistries == null ? List.of() : this.privateRegistries;
    }
    public Optional<ClusterTemplateTemplateRevisionClusterConfigRkeConfigServices> services() {
        return Optional.ofNullable(this.services);
    }
    public Optional<Boolean> sshAgentAuth() {
        return Optional.ofNullable(this.sshAgentAuth);
    }
    public Optional<String> sshCertPath() {
        return Optional.ofNullable(this.sshCertPath);
    }
    public Optional<String> sshKeyPath() {
        return Optional.ofNullable(this.sshKeyPath);
    }
    public Optional<ClusterTemplateTemplateRevisionClusterConfigRkeConfigUpgradeStrategy> upgradeStrategy() {
        return Optional.ofNullable(this.upgradeStrategy);
    }
    public Optional<String> winPrefixPath() {
        return Optional.ofNullable(this.winPrefixPath);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterTemplateTemplateRevisionClusterConfigRkeConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer addonJobTimeout;
        private @Nullable String addons;
        private @Nullable List<String> addonsIncludes;
        private @Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigAuthentication authentication;
        private @Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigAuthorization authorization;
        private @Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigBastionHost bastionHost;
        private @Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProvider cloudProvider;
        private @Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigDns dns;
        private @Nullable Boolean enableCriDockerd;
        private @Nullable Boolean ignoreDockerVersion;
        private @Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigIngress ingress;
        private @Nullable String kubernetesVersion;
        private @Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigMonitoring monitoring;
        private @Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigNetwork network;
        private @Nullable List<ClusterTemplateTemplateRevisionClusterConfigRkeConfigNode> nodes;
        private @Nullable String prefixPath;
        private @Nullable List<ClusterTemplateTemplateRevisionClusterConfigRkeConfigPrivateRegistry> privateRegistries;
        private @Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigServices services;
        private @Nullable Boolean sshAgentAuth;
        private @Nullable String sshCertPath;
        private @Nullable String sshKeyPath;
        private @Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigUpgradeStrategy upgradeStrategy;
        private @Nullable String winPrefixPath;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterTemplateTemplateRevisionClusterConfigRkeConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addonJobTimeout = defaults.addonJobTimeout;
    	      this.addons = defaults.addons;
    	      this.addonsIncludes = defaults.addonsIncludes;
    	      this.authentication = defaults.authentication;
    	      this.authorization = defaults.authorization;
    	      this.bastionHost = defaults.bastionHost;
    	      this.cloudProvider = defaults.cloudProvider;
    	      this.dns = defaults.dns;
    	      this.enableCriDockerd = defaults.enableCriDockerd;
    	      this.ignoreDockerVersion = defaults.ignoreDockerVersion;
    	      this.ingress = defaults.ingress;
    	      this.kubernetesVersion = defaults.kubernetesVersion;
    	      this.monitoring = defaults.monitoring;
    	      this.network = defaults.network;
    	      this.nodes = defaults.nodes;
    	      this.prefixPath = defaults.prefixPath;
    	      this.privateRegistries = defaults.privateRegistries;
    	      this.services = defaults.services;
    	      this.sshAgentAuth = defaults.sshAgentAuth;
    	      this.sshCertPath = defaults.sshCertPath;
    	      this.sshKeyPath = defaults.sshKeyPath;
    	      this.upgradeStrategy = defaults.upgradeStrategy;
    	      this.winPrefixPath = defaults.winPrefixPath;
        }

        public Builder addonJobTimeout(@Nullable Integer addonJobTimeout) {
            this.addonJobTimeout = addonJobTimeout;
            return this;
        }
        public Builder addons(@Nullable String addons) {
            this.addons = addons;
            return this;
        }
        public Builder addonsIncludes(@Nullable List<String> addonsIncludes) {
            this.addonsIncludes = addonsIncludes;
            return this;
        }
        public Builder addonsIncludes(String... addonsIncludes) {
            return addonsIncludes(List.of(addonsIncludes));
        }
        public Builder authentication(@Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigAuthentication authentication) {
            this.authentication = authentication;
            return this;
        }
        public Builder authorization(@Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigAuthorization authorization) {
            this.authorization = authorization;
            return this;
        }
        public Builder bastionHost(@Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigBastionHost bastionHost) {
            this.bastionHost = bastionHost;
            return this;
        }
        public Builder cloudProvider(@Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigCloudProvider cloudProvider) {
            this.cloudProvider = cloudProvider;
            return this;
        }
        public Builder dns(@Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigDns dns) {
            this.dns = dns;
            return this;
        }
        public Builder enableCriDockerd(@Nullable Boolean enableCriDockerd) {
            this.enableCriDockerd = enableCriDockerd;
            return this;
        }
        public Builder ignoreDockerVersion(@Nullable Boolean ignoreDockerVersion) {
            this.ignoreDockerVersion = ignoreDockerVersion;
            return this;
        }
        public Builder ingress(@Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigIngress ingress) {
            this.ingress = ingress;
            return this;
        }
        public Builder kubernetesVersion(@Nullable String kubernetesVersion) {
            this.kubernetesVersion = kubernetesVersion;
            return this;
        }
        public Builder monitoring(@Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigMonitoring monitoring) {
            this.monitoring = monitoring;
            return this;
        }
        public Builder network(@Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigNetwork network) {
            this.network = network;
            return this;
        }
        public Builder nodes(@Nullable List<ClusterTemplateTemplateRevisionClusterConfigRkeConfigNode> nodes) {
            this.nodes = nodes;
            return this;
        }
        public Builder nodes(ClusterTemplateTemplateRevisionClusterConfigRkeConfigNode... nodes) {
            return nodes(List.of(nodes));
        }
        public Builder prefixPath(@Nullable String prefixPath) {
            this.prefixPath = prefixPath;
            return this;
        }
        public Builder privateRegistries(@Nullable List<ClusterTemplateTemplateRevisionClusterConfigRkeConfigPrivateRegistry> privateRegistries) {
            this.privateRegistries = privateRegistries;
            return this;
        }
        public Builder privateRegistries(ClusterTemplateTemplateRevisionClusterConfigRkeConfigPrivateRegistry... privateRegistries) {
            return privateRegistries(List.of(privateRegistries));
        }
        public Builder services(@Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigServices services) {
            this.services = services;
            return this;
        }
        public Builder sshAgentAuth(@Nullable Boolean sshAgentAuth) {
            this.sshAgentAuth = sshAgentAuth;
            return this;
        }
        public Builder sshCertPath(@Nullable String sshCertPath) {
            this.sshCertPath = sshCertPath;
            return this;
        }
        public Builder sshKeyPath(@Nullable String sshKeyPath) {
            this.sshKeyPath = sshKeyPath;
            return this;
        }
        public Builder upgradeStrategy(@Nullable ClusterTemplateTemplateRevisionClusterConfigRkeConfigUpgradeStrategy upgradeStrategy) {
            this.upgradeStrategy = upgradeStrategy;
            return this;
        }
        public Builder winPrefixPath(@Nullable String winPrefixPath) {
            this.winPrefixPath = winPrefixPath;
            return this;
        }        public ClusterTemplateTemplateRevisionClusterConfigRkeConfig build() {
            return new ClusterTemplateTemplateRevisionClusterConfigRkeConfig(addonJobTimeout, addons, addonsIncludes, authentication, authorization, bastionHost, cloudProvider, dns, enableCriDockerd, ignoreDockerVersion, ingress, kubernetesVersion, monitoring, network, nodes, prefixPath, privateRegistries, services, sshAgentAuth, sshCertPath, sshKeyPath, upgradeStrategy, winPrefixPath);
        }
    }
}
