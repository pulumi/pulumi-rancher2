// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NamespaceResourceQuotaLimitArgs extends com.pulumi.resources.ResourceArgs {

    public static final NamespaceResourceQuotaLimitArgs Empty = new NamespaceResourceQuotaLimitArgs();

    /**
     * Limit for config maps in namespace (string)
     * 
     */
    @Import(name="configMaps")
    private @Nullable Output<String> configMaps;

    /**
     * @return Limit for config maps in namespace (string)
     * 
     */
    public Optional<Output<String>> configMaps() {
        return Optional.ofNullable(this.configMaps);
    }

    /**
     * Limit for limits cpu in namespace (string)
     * 
     */
    @Import(name="limitsCpu")
    private @Nullable Output<String> limitsCpu;

    /**
     * @return Limit for limits cpu in namespace (string)
     * 
     */
    public Optional<Output<String>> limitsCpu() {
        return Optional.ofNullable(this.limitsCpu);
    }

    /**
     * Limit for limits memory in namespace (string)
     * 
     */
    @Import(name="limitsMemory")
    private @Nullable Output<String> limitsMemory;

    /**
     * @return Limit for limits memory in namespace (string)
     * 
     */
    public Optional<Output<String>> limitsMemory() {
        return Optional.ofNullable(this.limitsMemory);
    }

    /**
     * Limit for persistent volume claims in namespace (string)
     * 
     */
    @Import(name="persistentVolumeClaims")
    private @Nullable Output<String> persistentVolumeClaims;

    /**
     * @return Limit for persistent volume claims in namespace (string)
     * 
     */
    public Optional<Output<String>> persistentVolumeClaims() {
        return Optional.ofNullable(this.persistentVolumeClaims);
    }

    /**
     * Limit for pods in namespace (string)
     * 
     */
    @Import(name="pods")
    private @Nullable Output<String> pods;

    /**
     * @return Limit for pods in namespace (string)
     * 
     */
    public Optional<Output<String>> pods() {
        return Optional.ofNullable(this.pods);
    }

    /**
     * Limit for replication controllers in namespace (string)
     * 
     */
    @Import(name="replicationControllers")
    private @Nullable Output<String> replicationControllers;

    /**
     * @return Limit for replication controllers in namespace (string)
     * 
     */
    public Optional<Output<String>> replicationControllers() {
        return Optional.ofNullable(this.replicationControllers);
    }

    /**
     * Limit for requests cpu in namespace (string)
     * 
     */
    @Import(name="requestsCpu")
    private @Nullable Output<String> requestsCpu;

    /**
     * @return Limit for requests cpu in namespace (string)
     * 
     */
    public Optional<Output<String>> requestsCpu() {
        return Optional.ofNullable(this.requestsCpu);
    }

    /**
     * Limit for requests memory in namespace (string)
     * 
     */
    @Import(name="requestsMemory")
    private @Nullable Output<String> requestsMemory;

    /**
     * @return Limit for requests memory in namespace (string)
     * 
     */
    public Optional<Output<String>> requestsMemory() {
        return Optional.ofNullable(this.requestsMemory);
    }

    /**
     * Limit for requests storage in namespace (string)
     * 
     */
    @Import(name="requestsStorage")
    private @Nullable Output<String> requestsStorage;

    /**
     * @return Limit for requests storage in namespace (string)
     * 
     */
    public Optional<Output<String>> requestsStorage() {
        return Optional.ofNullable(this.requestsStorage);
    }

    /**
     * Limit for secrets in namespace (string)
     * 
     */
    @Import(name="secrets")
    private @Nullable Output<String> secrets;

    /**
     * @return Limit for secrets in namespace (string)
     * 
     */
    public Optional<Output<String>> secrets() {
        return Optional.ofNullable(this.secrets);
    }

    @Import(name="services")
    private @Nullable Output<String> services;

    public Optional<Output<String>> services() {
        return Optional.ofNullable(this.services);
    }

    /**
     * Limit for services load balancers in namespace (string)
     * 
     */
    @Import(name="servicesLoadBalancers")
    private @Nullable Output<String> servicesLoadBalancers;

    /**
     * @return Limit for services load balancers in namespace (string)
     * 
     */
    public Optional<Output<String>> servicesLoadBalancers() {
        return Optional.ofNullable(this.servicesLoadBalancers);
    }

    /**
     * Limit for services node ports in namespace (string)
     * 
     */
    @Import(name="servicesNodePorts")
    private @Nullable Output<String> servicesNodePorts;

    /**
     * @return Limit for services node ports in namespace (string)
     * 
     */
    public Optional<Output<String>> servicesNodePorts() {
        return Optional.ofNullable(this.servicesNodePorts);
    }

    private NamespaceResourceQuotaLimitArgs() {}

    private NamespaceResourceQuotaLimitArgs(NamespaceResourceQuotaLimitArgs $) {
        this.configMaps = $.configMaps;
        this.limitsCpu = $.limitsCpu;
        this.limitsMemory = $.limitsMemory;
        this.persistentVolumeClaims = $.persistentVolumeClaims;
        this.pods = $.pods;
        this.replicationControllers = $.replicationControllers;
        this.requestsCpu = $.requestsCpu;
        this.requestsMemory = $.requestsMemory;
        this.requestsStorage = $.requestsStorage;
        this.secrets = $.secrets;
        this.services = $.services;
        this.servicesLoadBalancers = $.servicesLoadBalancers;
        this.servicesNodePorts = $.servicesNodePorts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NamespaceResourceQuotaLimitArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NamespaceResourceQuotaLimitArgs $;

        public Builder() {
            $ = new NamespaceResourceQuotaLimitArgs();
        }

        public Builder(NamespaceResourceQuotaLimitArgs defaults) {
            $ = new NamespaceResourceQuotaLimitArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configMaps Limit for config maps in namespace (string)
         * 
         * @return builder
         * 
         */
        public Builder configMaps(@Nullable Output<String> configMaps) {
            $.configMaps = configMaps;
            return this;
        }

        /**
         * @param configMaps Limit for config maps in namespace (string)
         * 
         * @return builder
         * 
         */
        public Builder configMaps(String configMaps) {
            return configMaps(Output.of(configMaps));
        }

        /**
         * @param limitsCpu Limit for limits cpu in namespace (string)
         * 
         * @return builder
         * 
         */
        public Builder limitsCpu(@Nullable Output<String> limitsCpu) {
            $.limitsCpu = limitsCpu;
            return this;
        }

        /**
         * @param limitsCpu Limit for limits cpu in namespace (string)
         * 
         * @return builder
         * 
         */
        public Builder limitsCpu(String limitsCpu) {
            return limitsCpu(Output.of(limitsCpu));
        }

        /**
         * @param limitsMemory Limit for limits memory in namespace (string)
         * 
         * @return builder
         * 
         */
        public Builder limitsMemory(@Nullable Output<String> limitsMemory) {
            $.limitsMemory = limitsMemory;
            return this;
        }

        /**
         * @param limitsMemory Limit for limits memory in namespace (string)
         * 
         * @return builder
         * 
         */
        public Builder limitsMemory(String limitsMemory) {
            return limitsMemory(Output.of(limitsMemory));
        }

        /**
         * @param persistentVolumeClaims Limit for persistent volume claims in namespace (string)
         * 
         * @return builder
         * 
         */
        public Builder persistentVolumeClaims(@Nullable Output<String> persistentVolumeClaims) {
            $.persistentVolumeClaims = persistentVolumeClaims;
            return this;
        }

        /**
         * @param persistentVolumeClaims Limit for persistent volume claims in namespace (string)
         * 
         * @return builder
         * 
         */
        public Builder persistentVolumeClaims(String persistentVolumeClaims) {
            return persistentVolumeClaims(Output.of(persistentVolumeClaims));
        }

        /**
         * @param pods Limit for pods in namespace (string)
         * 
         * @return builder
         * 
         */
        public Builder pods(@Nullable Output<String> pods) {
            $.pods = pods;
            return this;
        }

        /**
         * @param pods Limit for pods in namespace (string)
         * 
         * @return builder
         * 
         */
        public Builder pods(String pods) {
            return pods(Output.of(pods));
        }

        /**
         * @param replicationControllers Limit for replication controllers in namespace (string)
         * 
         * @return builder
         * 
         */
        public Builder replicationControllers(@Nullable Output<String> replicationControllers) {
            $.replicationControllers = replicationControllers;
            return this;
        }

        /**
         * @param replicationControllers Limit for replication controllers in namespace (string)
         * 
         * @return builder
         * 
         */
        public Builder replicationControllers(String replicationControllers) {
            return replicationControllers(Output.of(replicationControllers));
        }

        /**
         * @param requestsCpu Limit for requests cpu in namespace (string)
         * 
         * @return builder
         * 
         */
        public Builder requestsCpu(@Nullable Output<String> requestsCpu) {
            $.requestsCpu = requestsCpu;
            return this;
        }

        /**
         * @param requestsCpu Limit for requests cpu in namespace (string)
         * 
         * @return builder
         * 
         */
        public Builder requestsCpu(String requestsCpu) {
            return requestsCpu(Output.of(requestsCpu));
        }

        /**
         * @param requestsMemory Limit for requests memory in namespace (string)
         * 
         * @return builder
         * 
         */
        public Builder requestsMemory(@Nullable Output<String> requestsMemory) {
            $.requestsMemory = requestsMemory;
            return this;
        }

        /**
         * @param requestsMemory Limit for requests memory in namespace (string)
         * 
         * @return builder
         * 
         */
        public Builder requestsMemory(String requestsMemory) {
            return requestsMemory(Output.of(requestsMemory));
        }

        /**
         * @param requestsStorage Limit for requests storage in namespace (string)
         * 
         * @return builder
         * 
         */
        public Builder requestsStorage(@Nullable Output<String> requestsStorage) {
            $.requestsStorage = requestsStorage;
            return this;
        }

        /**
         * @param requestsStorage Limit for requests storage in namespace (string)
         * 
         * @return builder
         * 
         */
        public Builder requestsStorage(String requestsStorage) {
            return requestsStorage(Output.of(requestsStorage));
        }

        /**
         * @param secrets Limit for secrets in namespace (string)
         * 
         * @return builder
         * 
         */
        public Builder secrets(@Nullable Output<String> secrets) {
            $.secrets = secrets;
            return this;
        }

        /**
         * @param secrets Limit for secrets in namespace (string)
         * 
         * @return builder
         * 
         */
        public Builder secrets(String secrets) {
            return secrets(Output.of(secrets));
        }

        public Builder services(@Nullable Output<String> services) {
            $.services = services;
            return this;
        }

        public Builder services(String services) {
            return services(Output.of(services));
        }

        /**
         * @param servicesLoadBalancers Limit for services load balancers in namespace (string)
         * 
         * @return builder
         * 
         */
        public Builder servicesLoadBalancers(@Nullable Output<String> servicesLoadBalancers) {
            $.servicesLoadBalancers = servicesLoadBalancers;
            return this;
        }

        /**
         * @param servicesLoadBalancers Limit for services load balancers in namespace (string)
         * 
         * @return builder
         * 
         */
        public Builder servicesLoadBalancers(String servicesLoadBalancers) {
            return servicesLoadBalancers(Output.of(servicesLoadBalancers));
        }

        /**
         * @param servicesNodePorts Limit for services node ports in namespace (string)
         * 
         * @return builder
         * 
         */
        public Builder servicesNodePorts(@Nullable Output<String> servicesNodePorts) {
            $.servicesNodePorts = servicesNodePorts;
            return this;
        }

        /**
         * @param servicesNodePorts Limit for services node ports in namespace (string)
         * 
         * @return builder
         * 
         */
        public Builder servicesNodePorts(String servicesNodePorts) {
            return servicesNodePorts(Output.of(servicesNodePorts));
        }

        public NamespaceResourceQuotaLimitArgs build() {
            return $;
        }
    }

}
