// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rancher2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.rancher2.outputs.GetClusterRkeConfigCloudProviderOpenstackCloudProviderBlockStorage;
import com.pulumi.rancher2.outputs.GetClusterRkeConfigCloudProviderOpenstackCloudProviderGlobal;
import com.pulumi.rancher2.outputs.GetClusterRkeConfigCloudProviderOpenstackCloudProviderLoadBalancer;
import com.pulumi.rancher2.outputs.GetClusterRkeConfigCloudProviderOpenstackCloudProviderMetadata;
import com.pulumi.rancher2.outputs.GetClusterRkeConfigCloudProviderOpenstackCloudProviderRoute;
import java.util.Objects;

@CustomType
public final class GetClusterRkeConfigCloudProviderOpenstackCloudProvider {
    private GetClusterRkeConfigCloudProviderOpenstackCloudProviderBlockStorage blockStorage;
    private GetClusterRkeConfigCloudProviderOpenstackCloudProviderGlobal global;
    private GetClusterRkeConfigCloudProviderOpenstackCloudProviderLoadBalancer loadBalancer;
    private GetClusterRkeConfigCloudProviderOpenstackCloudProviderMetadata metadata;
    private GetClusterRkeConfigCloudProviderOpenstackCloudProviderRoute route;

    private GetClusterRkeConfigCloudProviderOpenstackCloudProvider() {}
    public GetClusterRkeConfigCloudProviderOpenstackCloudProviderBlockStorage blockStorage() {
        return this.blockStorage;
    }
    public GetClusterRkeConfigCloudProviderOpenstackCloudProviderGlobal global() {
        return this.global;
    }
    public GetClusterRkeConfigCloudProviderOpenstackCloudProviderLoadBalancer loadBalancer() {
        return this.loadBalancer;
    }
    public GetClusterRkeConfigCloudProviderOpenstackCloudProviderMetadata metadata() {
        return this.metadata;
    }
    public GetClusterRkeConfigCloudProviderOpenstackCloudProviderRoute route() {
        return this.route;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterRkeConfigCloudProviderOpenstackCloudProvider defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetClusterRkeConfigCloudProviderOpenstackCloudProviderBlockStorage blockStorage;
        private GetClusterRkeConfigCloudProviderOpenstackCloudProviderGlobal global;
        private GetClusterRkeConfigCloudProviderOpenstackCloudProviderLoadBalancer loadBalancer;
        private GetClusterRkeConfigCloudProviderOpenstackCloudProviderMetadata metadata;
        private GetClusterRkeConfigCloudProviderOpenstackCloudProviderRoute route;
        public Builder() {}
        public Builder(GetClusterRkeConfigCloudProviderOpenstackCloudProvider defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.blockStorage = defaults.blockStorage;
    	      this.global = defaults.global;
    	      this.loadBalancer = defaults.loadBalancer;
    	      this.metadata = defaults.metadata;
    	      this.route = defaults.route;
        }

        @CustomType.Setter
        public Builder blockStorage(GetClusterRkeConfigCloudProviderOpenstackCloudProviderBlockStorage blockStorage) {
            if (blockStorage == null) {
              throw new MissingRequiredPropertyException("GetClusterRkeConfigCloudProviderOpenstackCloudProvider", "blockStorage");
            }
            this.blockStorage = blockStorage;
            return this;
        }
        @CustomType.Setter
        public Builder global(GetClusterRkeConfigCloudProviderOpenstackCloudProviderGlobal global) {
            if (global == null) {
              throw new MissingRequiredPropertyException("GetClusterRkeConfigCloudProviderOpenstackCloudProvider", "global");
            }
            this.global = global;
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancer(GetClusterRkeConfigCloudProviderOpenstackCloudProviderLoadBalancer loadBalancer) {
            if (loadBalancer == null) {
              throw new MissingRequiredPropertyException("GetClusterRkeConfigCloudProviderOpenstackCloudProvider", "loadBalancer");
            }
            this.loadBalancer = loadBalancer;
            return this;
        }
        @CustomType.Setter
        public Builder metadata(GetClusterRkeConfigCloudProviderOpenstackCloudProviderMetadata metadata) {
            if (metadata == null) {
              throw new MissingRequiredPropertyException("GetClusterRkeConfigCloudProviderOpenstackCloudProvider", "metadata");
            }
            this.metadata = metadata;
            return this;
        }
        @CustomType.Setter
        public Builder route(GetClusterRkeConfigCloudProviderOpenstackCloudProviderRoute route) {
            if (route == null) {
              throw new MissingRequiredPropertyException("GetClusterRkeConfigCloudProviderOpenstackCloudProvider", "route");
            }
            this.route = route;
            return this;
        }
        public GetClusterRkeConfigCloudProviderOpenstackCloudProvider build() {
            final var _resultValue = new GetClusterRkeConfigCloudProviderOpenstackCloudProvider();
            _resultValue.blockStorage = blockStorage;
            _resultValue.global = global;
            _resultValue.loadBalancer = loadBalancer;
            _resultValue.metadata = metadata;
            _resultValue.route = route;
            return _resultValue;
        }
    }
}
