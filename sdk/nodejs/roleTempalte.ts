// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * @deprecated rancher2.RoleTempalte has been deprecated in favor of rancher2.RoleTemplate
 */
export class RoleTempalte extends pulumi.CustomResource {
    /**
     * Get an existing RoleTempalte resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RoleTempalteState, opts?: pulumi.CustomResourceOptions): RoleTempalte {
        pulumi.log.warn("RoleTempalte is deprecated: rancher2.RoleTempalte has been deprecated in favor of rancher2.RoleTemplate")
        return new RoleTempalte(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'rancher2:index/roleTempalte:RoleTempalte';

    /**
     * Returns true if the given object is an instance of RoleTempalte.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RoleTempalte {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RoleTempalte.__pulumiType;
    }

    /**
     * Administrative role template
     */
    public readonly administrative!: pulumi.Output<boolean | undefined>;
    /**
     * Annotations of the resource
     */
    public readonly annotations!: pulumi.Output<{[key: string]: any}>;
    /**
     * Builtin role template
     */
    public /*out*/ readonly builtin!: pulumi.Output<boolean>;
    /**
     * Context role template
     */
    public readonly context!: pulumi.Output<string | undefined>;
    /**
     * Default role template for new created cluster or project
     */
    public readonly defaultRole!: pulumi.Output<boolean | undefined>;
    /**
     * Role template policy description
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * External role template
     */
    public readonly external!: pulumi.Output<boolean | undefined>;
    /**
     * Hidden role template
     */
    public readonly hidden!: pulumi.Output<boolean | undefined>;
    /**
     * Labels of the resource
     */
    public readonly labels!: pulumi.Output<{[key: string]: any}>;
    /**
     * Locked role template
     */
    public readonly locked!: pulumi.Output<boolean | undefined>;
    /**
     * Role template policy name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Inherit role template IDs
     */
    public readonly roleTemplateIds!: pulumi.Output<string[]>;
    /**
     * Role template policy rules
     */
    public readonly rules!: pulumi.Output<outputs.RoleTempalteRule[]>;

    /**
     * Create a RoleTempalte resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated rancher2.RoleTempalte has been deprecated in favor of rancher2.RoleTemplate */
    constructor(name: string, args?: RoleTempalteArgs, opts?: pulumi.CustomResourceOptions)
    /** @deprecated rancher2.RoleTempalte has been deprecated in favor of rancher2.RoleTemplate */
    constructor(name: string, argsOrState?: RoleTempalteArgs | RoleTempalteState, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("RoleTempalte is deprecated: rancher2.RoleTempalte has been deprecated in favor of rancher2.RoleTemplate")
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RoleTempalteState | undefined;
            inputs["administrative"] = state ? state.administrative : undefined;
            inputs["annotations"] = state ? state.annotations : undefined;
            inputs["builtin"] = state ? state.builtin : undefined;
            inputs["context"] = state ? state.context : undefined;
            inputs["defaultRole"] = state ? state.defaultRole : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["external"] = state ? state.external : undefined;
            inputs["hidden"] = state ? state.hidden : undefined;
            inputs["labels"] = state ? state.labels : undefined;
            inputs["locked"] = state ? state.locked : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["roleTemplateIds"] = state ? state.roleTemplateIds : undefined;
            inputs["rules"] = state ? state.rules : undefined;
        } else {
            const args = argsOrState as RoleTempalteArgs | undefined;
            inputs["administrative"] = args ? args.administrative : undefined;
            inputs["annotations"] = args ? args.annotations : undefined;
            inputs["context"] = args ? args.context : undefined;
            inputs["defaultRole"] = args ? args.defaultRole : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["external"] = args ? args.external : undefined;
            inputs["hidden"] = args ? args.hidden : undefined;
            inputs["labels"] = args ? args.labels : undefined;
            inputs["locked"] = args ? args.locked : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["roleTemplateIds"] = args ? args.roleTemplateIds : undefined;
            inputs["rules"] = args ? args.rules : undefined;
            inputs["builtin"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(RoleTempalte.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RoleTempalte resources.
 */
export interface RoleTempalteState {
    /**
     * Administrative role template
     */
    readonly administrative?: pulumi.Input<boolean>;
    /**
     * Annotations of the resource
     */
    readonly annotations?: pulumi.Input<{[key: string]: any}>;
    /**
     * Builtin role template
     */
    readonly builtin?: pulumi.Input<boolean>;
    /**
     * Context role template
     */
    readonly context?: pulumi.Input<string>;
    /**
     * Default role template for new created cluster or project
     */
    readonly defaultRole?: pulumi.Input<boolean>;
    /**
     * Role template policy description
     */
    readonly description?: pulumi.Input<string>;
    /**
     * External role template
     */
    readonly external?: pulumi.Input<boolean>;
    /**
     * Hidden role template
     */
    readonly hidden?: pulumi.Input<boolean>;
    /**
     * Labels of the resource
     */
    readonly labels?: pulumi.Input<{[key: string]: any}>;
    /**
     * Locked role template
     */
    readonly locked?: pulumi.Input<boolean>;
    /**
     * Role template policy name
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Inherit role template IDs
     */
    readonly roleTemplateIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Role template policy rules
     */
    readonly rules?: pulumi.Input<pulumi.Input<inputs.RoleTempalteRule>[]>;
}

/**
 * The set of arguments for constructing a RoleTempalte resource.
 */
export interface RoleTempalteArgs {
    /**
     * Administrative role template
     */
    readonly administrative?: pulumi.Input<boolean>;
    /**
     * Annotations of the resource
     */
    readonly annotations?: pulumi.Input<{[key: string]: any}>;
    /**
     * Context role template
     */
    readonly context?: pulumi.Input<string>;
    /**
     * Default role template for new created cluster or project
     */
    readonly defaultRole?: pulumi.Input<boolean>;
    /**
     * Role template policy description
     */
    readonly description?: pulumi.Input<string>;
    /**
     * External role template
     */
    readonly external?: pulumi.Input<boolean>;
    /**
     * Hidden role template
     */
    readonly hidden?: pulumi.Input<boolean>;
    /**
     * Labels of the resource
     */
    readonly labels?: pulumi.Input<{[key: string]: any}>;
    /**
     * Locked role template
     */
    readonly locked?: pulumi.Input<boolean>;
    /**
     * Role template policy name
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Inherit role template IDs
     */
    readonly roleTemplateIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Role template policy rules
     */
    readonly rules?: pulumi.Input<pulumi.Input<inputs.RoleTempalteRule>[]>;
}
