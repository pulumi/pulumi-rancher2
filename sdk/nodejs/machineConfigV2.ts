// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Provides a Rancher v2 Machine config v2 resource. This can be used to create Machine Config v2 for Rancher v2 and retrieve their information. This resource is supported as tech preview from Rancher v2.6.0 and above.
 *
 * `amazonec2`, `azure`, `digitalocean`, `linode`, `openstack`, and `vsphere` cloud providers are supported for machine config V2
 *
 * **Note** This resource is used by
 */
export class MachineConfigV2 extends pulumi.CustomResource {
    /**
     * Get an existing MachineConfigV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MachineConfigV2State, opts?: pulumi.CustomResourceOptions): MachineConfigV2 {
        return new MachineConfigV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'rancher2:index/machineConfigV2:MachineConfigV2';

    /**
     * Returns true if the given object is an instance of MachineConfigV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MachineConfigV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MachineConfigV2.__pulumiType;
    }

    /**
     * AWS config for the Machine Config V2. Conflicts with `azureConfig`, `digitaloceanConfig`, `linodeConfig`, `openstackConfig` and `vsphereConfig` (list maxitems:1)
     */
    public readonly amazonec2Config!: pulumi.Output<outputs.MachineConfigV2Amazonec2Config | undefined>;
    /**
     * Annotations for Machine Config V2 object (map)
     */
    public readonly annotations!: pulumi.Output<{[key: string]: any}>;
    /**
     * Azure config for the Machine Config V2. Conflicts with `amazonec2Config`, `digitaloceanConfig`, `linodeConfig`, `openstackConfig` and `vsphereConfig` (list maxitems:1)
     */
    public readonly azureConfig!: pulumi.Output<outputs.MachineConfigV2AzureConfig | undefined>;
    /**
     * Digitalocean config for the Machine Config V2. Conflicts with `amazonec2Config`, `azureConfig`, `linodeConfig`, `openstackConfig` and `vsphereConfig` (list maxitems:1)
     */
    public readonly digitaloceanConfig!: pulumi.Output<outputs.MachineConfigV2DigitaloceanConfig | undefined>;
    /**
     * Cluster V2 fleet namespace
     */
    public readonly fleetNamespace!: pulumi.Output<string | undefined>;
    /**
     * Cluster V2 generate name. The pattern to generate machine config name. e.g  generate_name=\"prod-pool1\" will generate \"nc-prod-pool1-?????\" name computed at `name` attribute (string)
     */
    public readonly generateName!: pulumi.Output<string>;
    /**
     * (Computed) The machine config kind (string)
     */
    public /*out*/ readonly kind!: pulumi.Output<string>;
    /**
     * Labels for Machine Config V2 object (map)
     */
    public readonly labels!: pulumi.Output<{[key: string]: any}>;
    /**
     * Linode config for the Machine Config V2. Conflicts with `amazonec2Config`, `azureConfig`, `digitaloceanConfig`, `openstackConfig` and `vsphereConfig` (list maxitems:1)
     */
    public readonly linodeConfig!: pulumi.Output<outputs.MachineConfigV2LinodeConfig | undefined>;
    /**
     * (Computed) The machine config name (string)
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Openstack config for the Machine Config V2. Conflicts with `amazonec2Config`, `azureConfig`, `digitaloceanConfig`, `linodeConfig` and `vsphereConfig` (list maxitems:1)
     */
    public readonly openstackConfig!: pulumi.Output<outputs.MachineConfigV2OpenstackConfig | undefined>;
    /**
     * vSphere config for the Machine Config V2. Conflicts with `amazonec2Config`, `azureConfig`, `digitaloceanConfig`, `linodeConfig` and `openstackConfig` (list maxitems:1)
     */
    public readonly vsphereConfig!: pulumi.Output<outputs.MachineConfigV2VsphereConfig | undefined>;

    /**
     * Create a MachineConfigV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MachineConfigV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MachineConfigV2Args | MachineConfigV2State, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MachineConfigV2State | undefined;
            inputs["amazonec2Config"] = state ? state.amazonec2Config : undefined;
            inputs["annotations"] = state ? state.annotations : undefined;
            inputs["azureConfig"] = state ? state.azureConfig : undefined;
            inputs["digitaloceanConfig"] = state ? state.digitaloceanConfig : undefined;
            inputs["fleetNamespace"] = state ? state.fleetNamespace : undefined;
            inputs["generateName"] = state ? state.generateName : undefined;
            inputs["kind"] = state ? state.kind : undefined;
            inputs["labels"] = state ? state.labels : undefined;
            inputs["linodeConfig"] = state ? state.linodeConfig : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["openstackConfig"] = state ? state.openstackConfig : undefined;
            inputs["vsphereConfig"] = state ? state.vsphereConfig : undefined;
        } else {
            const args = argsOrState as MachineConfigV2Args | undefined;
            if ((!args || args.generateName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'generateName'");
            }
            inputs["amazonec2Config"] = args ? args.amazonec2Config : undefined;
            inputs["annotations"] = args ? args.annotations : undefined;
            inputs["azureConfig"] = args ? args.azureConfig : undefined;
            inputs["digitaloceanConfig"] = args ? args.digitaloceanConfig : undefined;
            inputs["fleetNamespace"] = args ? args.fleetNamespace : undefined;
            inputs["generateName"] = args ? args.generateName : undefined;
            inputs["labels"] = args ? args.labels : undefined;
            inputs["linodeConfig"] = args ? args.linodeConfig : undefined;
            inputs["openstackConfig"] = args ? args.openstackConfig : undefined;
            inputs["vsphereConfig"] = args ? args.vsphereConfig : undefined;
            inputs["kind"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(MachineConfigV2.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MachineConfigV2 resources.
 */
export interface MachineConfigV2State {
    /**
     * AWS config for the Machine Config V2. Conflicts with `azureConfig`, `digitaloceanConfig`, `linodeConfig`, `openstackConfig` and `vsphereConfig` (list maxitems:1)
     */
    readonly amazonec2Config?: pulumi.Input<inputs.MachineConfigV2Amazonec2Config>;
    /**
     * Annotations for Machine Config V2 object (map)
     */
    readonly annotations?: pulumi.Input<{[key: string]: any}>;
    /**
     * Azure config for the Machine Config V2. Conflicts with `amazonec2Config`, `digitaloceanConfig`, `linodeConfig`, `openstackConfig` and `vsphereConfig` (list maxitems:1)
     */
    readonly azureConfig?: pulumi.Input<inputs.MachineConfigV2AzureConfig>;
    /**
     * Digitalocean config for the Machine Config V2. Conflicts with `amazonec2Config`, `azureConfig`, `linodeConfig`, `openstackConfig` and `vsphereConfig` (list maxitems:1)
     */
    readonly digitaloceanConfig?: pulumi.Input<inputs.MachineConfigV2DigitaloceanConfig>;
    /**
     * Cluster V2 fleet namespace
     */
    readonly fleetNamespace?: pulumi.Input<string>;
    /**
     * Cluster V2 generate name. The pattern to generate machine config name. e.g  generate_name=\"prod-pool1\" will generate \"nc-prod-pool1-?????\" name computed at `name` attribute (string)
     */
    readonly generateName?: pulumi.Input<string>;
    /**
     * (Computed) The machine config kind (string)
     */
    readonly kind?: pulumi.Input<string>;
    /**
     * Labels for Machine Config V2 object (map)
     */
    readonly labels?: pulumi.Input<{[key: string]: any}>;
    /**
     * Linode config for the Machine Config V2. Conflicts with `amazonec2Config`, `azureConfig`, `digitaloceanConfig`, `openstackConfig` and `vsphereConfig` (list maxitems:1)
     */
    readonly linodeConfig?: pulumi.Input<inputs.MachineConfigV2LinodeConfig>;
    /**
     * (Computed) The machine config name (string)
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Openstack config for the Machine Config V2. Conflicts with `amazonec2Config`, `azureConfig`, `digitaloceanConfig`, `linodeConfig` and `vsphereConfig` (list maxitems:1)
     */
    readonly openstackConfig?: pulumi.Input<inputs.MachineConfigV2OpenstackConfig>;
    /**
     * vSphere config for the Machine Config V2. Conflicts with `amazonec2Config`, `azureConfig`, `digitaloceanConfig`, `linodeConfig` and `openstackConfig` (list maxitems:1)
     */
    readonly vsphereConfig?: pulumi.Input<inputs.MachineConfigV2VsphereConfig>;
}

/**
 * The set of arguments for constructing a MachineConfigV2 resource.
 */
export interface MachineConfigV2Args {
    /**
     * AWS config for the Machine Config V2. Conflicts with `azureConfig`, `digitaloceanConfig`, `linodeConfig`, `openstackConfig` and `vsphereConfig` (list maxitems:1)
     */
    readonly amazonec2Config?: pulumi.Input<inputs.MachineConfigV2Amazonec2Config>;
    /**
     * Annotations for Machine Config V2 object (map)
     */
    readonly annotations?: pulumi.Input<{[key: string]: any}>;
    /**
     * Azure config for the Machine Config V2. Conflicts with `amazonec2Config`, `digitaloceanConfig`, `linodeConfig`, `openstackConfig` and `vsphereConfig` (list maxitems:1)
     */
    readonly azureConfig?: pulumi.Input<inputs.MachineConfigV2AzureConfig>;
    /**
     * Digitalocean config for the Machine Config V2. Conflicts with `amazonec2Config`, `azureConfig`, `linodeConfig`, `openstackConfig` and `vsphereConfig` (list maxitems:1)
     */
    readonly digitaloceanConfig?: pulumi.Input<inputs.MachineConfigV2DigitaloceanConfig>;
    /**
     * Cluster V2 fleet namespace
     */
    readonly fleetNamespace?: pulumi.Input<string>;
    /**
     * Cluster V2 generate name. The pattern to generate machine config name. e.g  generate_name=\"prod-pool1\" will generate \"nc-prod-pool1-?????\" name computed at `name` attribute (string)
     */
    readonly generateName: pulumi.Input<string>;
    /**
     * Labels for Machine Config V2 object (map)
     */
    readonly labels?: pulumi.Input<{[key: string]: any}>;
    /**
     * Linode config for the Machine Config V2. Conflicts with `amazonec2Config`, `azureConfig`, `digitaloceanConfig`, `openstackConfig` and `vsphereConfig` (list maxitems:1)
     */
    readonly linodeConfig?: pulumi.Input<inputs.MachineConfigV2LinodeConfig>;
    /**
     * Openstack config for the Machine Config V2. Conflicts with `amazonec2Config`, `azureConfig`, `digitaloceanConfig`, `linodeConfig` and `vsphereConfig` (list maxitems:1)
     */
    readonly openstackConfig?: pulumi.Input<inputs.MachineConfigV2OpenstackConfig>;
    /**
     * vSphere config for the Machine Config V2. Conflicts with `amazonec2Config`, `azureConfig`, `digitaloceanConfig`, `linodeConfig` and `openstackConfig` (list maxitems:1)
     */
    readonly vsphereConfig?: pulumi.Input<inputs.MachineConfigV2VsphereConfig>;
}
