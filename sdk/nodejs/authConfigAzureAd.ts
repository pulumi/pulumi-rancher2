// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a Rancher v2 Auth Config AzureAD resource. This can be used to configure and enable Auth Config AzureAD for Rancher v2 RKE clusters and retrieve their information.
 * 
 * In addition to the built-in local auth, only one external auth config provider can be enabled at a time.
 * 
 * ## Example Usage
 * 
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as rancher2 from "@pulumi/rancher2";
 * 
 * // Create a new rancher2 Auth Config AzureAD
 * const azuread = new rancher2.AuthConfigAzureAd("azuread", {
 *     applicationId: "<AZUREAD_APP_ID>",
 *     applicationSecret: "<AZUREAD_APP_SECRET>",
 *     authEndpoint: "<AZUREAD_AUTH_ENDPOINT>",
 *     graphEndpoint: "<AZUREAD_GRAPH_ENDPOINT>",
 *     rancherUrl: "<RANCHER_URL>",
 *     tenantId: "<AZUREAD_TENANT_ID>",
 *     tokenEndpoint: "<AZUREAD_TOKEN_ENDPOINT>",
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-rancher2/blob/master/website/docs/r/authConfigAzureAD.html.markdown.
 */
export class AuthConfigAzureAd extends pulumi.CustomResource {
    /**
     * Get an existing AuthConfigAzureAd resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AuthConfigAzureAdState, opts?: pulumi.CustomResourceOptions): AuthConfigAzureAd {
        return new AuthConfigAzureAd(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'rancher2:index/authConfigAzureAd:AuthConfigAzureAd';

    /**
     * Returns true if the given object is an instance of AuthConfigAzureAd.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AuthConfigAzureAd {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AuthConfigAzureAd.__pulumiType;
    }

    /**
     * Access mode for auth. `required`, `restricted`, `unrestricted` are supported. Default `unrestricted` (string)
     */
    public readonly accessMode!: pulumi.Output<string | undefined>;
    /**
     * Allowed principal ids for auth. Required if `accessMode` is `required` or `restricted`. Ex: `azuread_user://<USER_ID>`  `azuread_group://<GROUP_ID>` (list)
     */
    public readonly allowedPrincipalIds!: pulumi.Output<string[] | undefined>;
    /**
     * Annotations of the resource (map)
     */
    public readonly annotations!: pulumi.Output<{[key: string]: any}>;
    /**
     * AzureAD auth application ID (string)
     */
    public readonly applicationId!: pulumi.Output<string>;
    /**
     * AzureAD auth application secret (string)
     */
    public readonly applicationSecret!: pulumi.Output<string>;
    /**
     * AzureAD auth endpoint (string)
     */
    public readonly authEndpoint!: pulumi.Output<string>;
    /**
     * Enable auth config provider. Default `true` (bool)
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * AzureAD endpoint. Default `https://login.microsoftonline.com/` (string)
     */
    public readonly endpoint!: pulumi.Output<string | undefined>;
    /**
     * AzureAD graph endpoint (string)
     */
    public readonly graphEndpoint!: pulumi.Output<string>;
    /**
     * Labels of the resource (map)
     */
    public readonly labels!: pulumi.Output<{[key: string]: any}>;
    /**
     * (Computed) The name of the resource (string)
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Rancher URL (string). "<rancher_url>/verify-auth-azure"
     */
    public readonly rancherUrl!: pulumi.Output<string>;
    /**
     * AzureAD tenant ID (string)
     */
    public readonly tenantId!: pulumi.Output<string>;
    /**
     * AzureAD token endpoint (string)
     */
    public readonly tokenEndpoint!: pulumi.Output<string>;
    /**
     * (Computed) The type of the resource (string)
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a AuthConfigAzureAd resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AuthConfigAzureAdArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AuthConfigAzureAdArgs | AuthConfigAzureAdState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as AuthConfigAzureAdState | undefined;
            inputs["accessMode"] = state ? state.accessMode : undefined;
            inputs["allowedPrincipalIds"] = state ? state.allowedPrincipalIds : undefined;
            inputs["annotations"] = state ? state.annotations : undefined;
            inputs["applicationId"] = state ? state.applicationId : undefined;
            inputs["applicationSecret"] = state ? state.applicationSecret : undefined;
            inputs["authEndpoint"] = state ? state.authEndpoint : undefined;
            inputs["enabled"] = state ? state.enabled : undefined;
            inputs["endpoint"] = state ? state.endpoint : undefined;
            inputs["graphEndpoint"] = state ? state.graphEndpoint : undefined;
            inputs["labels"] = state ? state.labels : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["rancherUrl"] = state ? state.rancherUrl : undefined;
            inputs["tenantId"] = state ? state.tenantId : undefined;
            inputs["tokenEndpoint"] = state ? state.tokenEndpoint : undefined;
            inputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as AuthConfigAzureAdArgs | undefined;
            if (!args || args.applicationId === undefined) {
                throw new Error("Missing required property 'applicationId'");
            }
            if (!args || args.applicationSecret === undefined) {
                throw new Error("Missing required property 'applicationSecret'");
            }
            if (!args || args.authEndpoint === undefined) {
                throw new Error("Missing required property 'authEndpoint'");
            }
            if (!args || args.graphEndpoint === undefined) {
                throw new Error("Missing required property 'graphEndpoint'");
            }
            if (!args || args.rancherUrl === undefined) {
                throw new Error("Missing required property 'rancherUrl'");
            }
            if (!args || args.tenantId === undefined) {
                throw new Error("Missing required property 'tenantId'");
            }
            if (!args || args.tokenEndpoint === undefined) {
                throw new Error("Missing required property 'tokenEndpoint'");
            }
            inputs["accessMode"] = args ? args.accessMode : undefined;
            inputs["allowedPrincipalIds"] = args ? args.allowedPrincipalIds : undefined;
            inputs["annotations"] = args ? args.annotations : undefined;
            inputs["applicationId"] = args ? args.applicationId : undefined;
            inputs["applicationSecret"] = args ? args.applicationSecret : undefined;
            inputs["authEndpoint"] = args ? args.authEndpoint : undefined;
            inputs["enabled"] = args ? args.enabled : undefined;
            inputs["endpoint"] = args ? args.endpoint : undefined;
            inputs["graphEndpoint"] = args ? args.graphEndpoint : undefined;
            inputs["labels"] = args ? args.labels : undefined;
            inputs["rancherUrl"] = args ? args.rancherUrl : undefined;
            inputs["tenantId"] = args ? args.tenantId : undefined;
            inputs["tokenEndpoint"] = args ? args.tokenEndpoint : undefined;
            inputs["name"] = undefined /*out*/;
            inputs["type"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(AuthConfigAzureAd.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AuthConfigAzureAd resources.
 */
export interface AuthConfigAzureAdState {
    /**
     * Access mode for auth. `required`, `restricted`, `unrestricted` are supported. Default `unrestricted` (string)
     */
    readonly accessMode?: pulumi.Input<string>;
    /**
     * Allowed principal ids for auth. Required if `accessMode` is `required` or `restricted`. Ex: `azuread_user://<USER_ID>`  `azuread_group://<GROUP_ID>` (list)
     */
    readonly allowedPrincipalIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Annotations of the resource (map)
     */
    readonly annotations?: pulumi.Input<{[key: string]: any}>;
    /**
     * AzureAD auth application ID (string)
     */
    readonly applicationId?: pulumi.Input<string>;
    /**
     * AzureAD auth application secret (string)
     */
    readonly applicationSecret?: pulumi.Input<string>;
    /**
     * AzureAD auth endpoint (string)
     */
    readonly authEndpoint?: pulumi.Input<string>;
    /**
     * Enable auth config provider. Default `true` (bool)
     */
    readonly enabled?: pulumi.Input<boolean>;
    /**
     * AzureAD endpoint. Default `https://login.microsoftonline.com/` (string)
     */
    readonly endpoint?: pulumi.Input<string>;
    /**
     * AzureAD graph endpoint (string)
     */
    readonly graphEndpoint?: pulumi.Input<string>;
    /**
     * Labels of the resource (map)
     */
    readonly labels?: pulumi.Input<{[key: string]: any}>;
    /**
     * (Computed) The name of the resource (string)
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Rancher URL (string). "<rancher_url>/verify-auth-azure"
     */
    readonly rancherUrl?: pulumi.Input<string>;
    /**
     * AzureAD tenant ID (string)
     */
    readonly tenantId?: pulumi.Input<string>;
    /**
     * AzureAD token endpoint (string)
     */
    readonly tokenEndpoint?: pulumi.Input<string>;
    /**
     * (Computed) The type of the resource (string)
     */
    readonly type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AuthConfigAzureAd resource.
 */
export interface AuthConfigAzureAdArgs {
    /**
     * Access mode for auth. `required`, `restricted`, `unrestricted` are supported. Default `unrestricted` (string)
     */
    readonly accessMode?: pulumi.Input<string>;
    /**
     * Allowed principal ids for auth. Required if `accessMode` is `required` or `restricted`. Ex: `azuread_user://<USER_ID>`  `azuread_group://<GROUP_ID>` (list)
     */
    readonly allowedPrincipalIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Annotations of the resource (map)
     */
    readonly annotations?: pulumi.Input<{[key: string]: any}>;
    /**
     * AzureAD auth application ID (string)
     */
    readonly applicationId: pulumi.Input<string>;
    /**
     * AzureAD auth application secret (string)
     */
    readonly applicationSecret: pulumi.Input<string>;
    /**
     * AzureAD auth endpoint (string)
     */
    readonly authEndpoint: pulumi.Input<string>;
    /**
     * Enable auth config provider. Default `true` (bool)
     */
    readonly enabled?: pulumi.Input<boolean>;
    /**
     * AzureAD endpoint. Default `https://login.microsoftonline.com/` (string)
     */
    readonly endpoint?: pulumi.Input<string>;
    /**
     * AzureAD graph endpoint (string)
     */
    readonly graphEndpoint: pulumi.Input<string>;
    /**
     * Labels of the resource (map)
     */
    readonly labels?: pulumi.Input<{[key: string]: any}>;
    /**
     * Rancher URL (string). "<rancher_url>/verify-auth-azure"
     */
    readonly rancherUrl: pulumi.Input<string>;
    /**
     * AzureAD tenant ID (string)
     */
    readonly tenantId: pulumi.Input<string>;
    /**
     * AzureAD token endpoint (string)
     */
    readonly tokenEndpoint: pulumi.Input<string>;
}
