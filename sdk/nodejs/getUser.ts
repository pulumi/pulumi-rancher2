// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Use this data source to retrieve information about a Rancher v2 user
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-rancher2/blob/master/website/docs/d/user.html.markdown.
 */
export function getUser(args?: GetUserArgs, opts?: pulumi.InvokeOptions): Promise<GetUserResult> & GetUserResult {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    const promise: Promise<GetUserResult> = pulumi.runtime.invoke("rancher2:index/getUser:getUser", {
        "isExternal": args.isExternal,
        "name": args.name,
        "username": args.username,
    }, opts);

    return pulumi.utils.liftProperties(promise, opts);
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserArgs {
    /**
     * Set is the user if the user is external. Default: `false` (bool)
     */
    readonly isExternal?: boolean;
    /**
     * The name of the user (string)
     */
    readonly name?: string;
    /**
     * The username of the user (string)
     */
    readonly username?: string;
}

/**
 * A collection of values returned by getUser.
 */
export interface GetUserResult {
    /**
     * (Computed) Annotations of the resource (map)
     */
    readonly annotations: {[key: string]: any};
    /**
     * (Computed) The user is enabled (bool)
     */
    readonly enabled: boolean;
    readonly isExternal?: boolean;
    /**
     * (Computed) Labels of the resource (map)
     */
    readonly labels: {[key: string]: any};
    /**
     * (Computed) The user common name (string)
     */
    readonly name: string;
    /**
     * (Computed) The user principal IDs (list)
     */
    readonly principalIds: string[];
    readonly username: string;
    /**
     * id is the provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
