// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Import
 *
 * Clusters v2 can be imported using the Rancher Cluster v2 ID, that is in the form &lt;FLEET_NAMESPACE&gt;/&lt;CLUSTER_NAME&gt;
 *
 * ```sh
 *  $ pulumi import rancher2:index/clusterV2:ClusterV2 foo &lt;FLEET_NAMESPACE&gt;/&lt;CLUSTER_NAME&gt;
 * ```
 */
export class ClusterV2 extends pulumi.CustomResource {
    /**
     * Get an existing ClusterV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterV2State, opts?: pulumi.CustomResourceOptions): ClusterV2 {
        return new ClusterV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'rancher2:index/clusterV2:ClusterV2';

    /**
     * Returns true if the given object is an instance of ClusterV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ClusterV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ClusterV2.__pulumiType;
    }

    /**
     * Optional Agent Env Vars for Rancher agent (list)
     */
    public readonly agentEnvVars!: pulumi.Output<outputs.ClusterV2AgentEnvVar[] | undefined>;
    /**
     * Annotations for the Cluster V2 (map)
     */
    public readonly annotations!: pulumi.Output<{[key: string]: any}>;
    /**
     * Cluster V2 cloud credential secret name (string)
     */
    public readonly cloudCredentialSecretName!: pulumi.Output<string | undefined>;
    /**
     * Optional customization for cluster agent (list)
     */
    public readonly clusterAgentDeploymentCustomizations!: pulumi.Output<outputs.ClusterV2ClusterAgentDeploymentCustomization[] | undefined>;
    /**
     * (Computed/Sensitive) Cluster Registration Token generated for the cluster v2 (list maxitems:1)
     */
    public /*out*/ readonly clusterRegistrationToken!: pulumi.Output<outputs.ClusterV2ClusterRegistrationToken>;
    /**
     * (Computed) Cluster v1 id for cluster v2. (e.g to be used with `rancher2Sync`) (string)
     */
    public /*out*/ readonly clusterV1Id!: pulumi.Output<string>;
    /**
     * Cluster V2 default cluster role for project members (string)
     */
    public readonly defaultClusterRoleForProjectMembers!: pulumi.Output<string | undefined>;
    /**
     * Cluster V2 default pod security admission configuration template name (string)
     */
    public readonly defaultPodSecurityAdmissionConfigurationTemplateName!: pulumi.Output<string | undefined>;
    /**
     * Cluster V2 default pod security policy template name (string)
     */
    public readonly defaultPodSecurityPolicyTemplateName!: pulumi.Output<string | undefined>;
    /**
     * Enable k8s network policy at Cluster V2 (bool)
     */
    public readonly enableNetworkPolicy!: pulumi.Output<boolean>;
    /**
     * Optional customization for fleet agent (list)
     */
    public readonly fleetAgentDeploymentCustomizations!: pulumi.Output<outputs.ClusterV2FleetAgentDeploymentCustomization[] | undefined>;
    /**
     * The fleet namespace of the Cluster v2. Default: `\"fleet-default\"` (string)
     */
    public readonly fleetNamespace!: pulumi.Output<string | undefined>;
    /**
     * (Computed/Sensitive) Kube Config generated for the cluster v2. Note: When the cluster has `localAuthEndpoint` enabled, the kubeConfig will not be available until the cluster is `connected` (string)
     */
    public /*out*/ readonly kubeConfig!: pulumi.Output<string>;
    /**
     * The kubernetes version of the Cluster v2 (list maxitems:1)
     */
    public readonly kubernetesVersion!: pulumi.Output<string>;
    /**
     * Labels for the Cluster V2 (map)
     */
    public readonly labels!: pulumi.Output<{[key: string]: any}>;
    /**
     * Cluster V2 local auth endpoint (list maxitems:1)
     */
    public readonly localAuthEndpoint!: pulumi.Output<outputs.ClusterV2LocalAuthEndpoint | undefined>;
    /**
     * The name of the Cluster v2 (string)
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * (Computed) Cluster v2 k8s resource version (string)
     */
    public /*out*/ readonly resourceVersion!: pulumi.Output<string>;
    /**
     * The RKE configuration for `k3s` and `rke2` Clusters v2. (list maxitems:1)
     */
    public readonly rkeConfig!: pulumi.Output<outputs.ClusterV2RkeConfig>;

    /**
     * Create a ClusterV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClusterV2Args | ClusterV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClusterV2State | undefined;
            resourceInputs["agentEnvVars"] = state ? state.agentEnvVars : undefined;
            resourceInputs["annotations"] = state ? state.annotations : undefined;
            resourceInputs["cloudCredentialSecretName"] = state ? state.cloudCredentialSecretName : undefined;
            resourceInputs["clusterAgentDeploymentCustomizations"] = state ? state.clusterAgentDeploymentCustomizations : undefined;
            resourceInputs["clusterRegistrationToken"] = state ? state.clusterRegistrationToken : undefined;
            resourceInputs["clusterV1Id"] = state ? state.clusterV1Id : undefined;
            resourceInputs["defaultClusterRoleForProjectMembers"] = state ? state.defaultClusterRoleForProjectMembers : undefined;
            resourceInputs["defaultPodSecurityAdmissionConfigurationTemplateName"] = state ? state.defaultPodSecurityAdmissionConfigurationTemplateName : undefined;
            resourceInputs["defaultPodSecurityPolicyTemplateName"] = state ? state.defaultPodSecurityPolicyTemplateName : undefined;
            resourceInputs["enableNetworkPolicy"] = state ? state.enableNetworkPolicy : undefined;
            resourceInputs["fleetAgentDeploymentCustomizations"] = state ? state.fleetAgentDeploymentCustomizations : undefined;
            resourceInputs["fleetNamespace"] = state ? state.fleetNamespace : undefined;
            resourceInputs["kubeConfig"] = state ? state.kubeConfig : undefined;
            resourceInputs["kubernetesVersion"] = state ? state.kubernetesVersion : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["localAuthEndpoint"] = state ? state.localAuthEndpoint : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resourceVersion"] = state ? state.resourceVersion : undefined;
            resourceInputs["rkeConfig"] = state ? state.rkeConfig : undefined;
        } else {
            const args = argsOrState as ClusterV2Args | undefined;
            if ((!args || args.kubernetesVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'kubernetesVersion'");
            }
            resourceInputs["agentEnvVars"] = args ? args.agentEnvVars : undefined;
            resourceInputs["annotations"] = args ? args.annotations : undefined;
            resourceInputs["cloudCredentialSecretName"] = args ? args.cloudCredentialSecretName : undefined;
            resourceInputs["clusterAgentDeploymentCustomizations"] = args ? args.clusterAgentDeploymentCustomizations : undefined;
            resourceInputs["defaultClusterRoleForProjectMembers"] = args ? args.defaultClusterRoleForProjectMembers : undefined;
            resourceInputs["defaultPodSecurityAdmissionConfigurationTemplateName"] = args ? args.defaultPodSecurityAdmissionConfigurationTemplateName : undefined;
            resourceInputs["defaultPodSecurityPolicyTemplateName"] = args ? args.defaultPodSecurityPolicyTemplateName : undefined;
            resourceInputs["enableNetworkPolicy"] = args ? args.enableNetworkPolicy : undefined;
            resourceInputs["fleetAgentDeploymentCustomizations"] = args ? args.fleetAgentDeploymentCustomizations : undefined;
            resourceInputs["fleetNamespace"] = args ? args.fleetNamespace : undefined;
            resourceInputs["kubernetesVersion"] = args ? args.kubernetesVersion : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["localAuthEndpoint"] = args ? args.localAuthEndpoint : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["rkeConfig"] = args ? args.rkeConfig : undefined;
            resourceInputs["clusterRegistrationToken"] = undefined /*out*/;
            resourceInputs["clusterV1Id"] = undefined /*out*/;
            resourceInputs["kubeConfig"] = undefined /*out*/;
            resourceInputs["resourceVersion"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["clusterRegistrationToken", "kubeConfig"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ClusterV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ClusterV2 resources.
 */
export interface ClusterV2State {
    /**
     * Optional Agent Env Vars for Rancher agent (list)
     */
    agentEnvVars?: pulumi.Input<pulumi.Input<inputs.ClusterV2AgentEnvVar>[]>;
    /**
     * Annotations for the Cluster V2 (map)
     */
    annotations?: pulumi.Input<{[key: string]: any}>;
    /**
     * Cluster V2 cloud credential secret name (string)
     */
    cloudCredentialSecretName?: pulumi.Input<string>;
    /**
     * Optional customization for cluster agent (list)
     */
    clusterAgentDeploymentCustomizations?: pulumi.Input<pulumi.Input<inputs.ClusterV2ClusterAgentDeploymentCustomization>[]>;
    /**
     * (Computed/Sensitive) Cluster Registration Token generated for the cluster v2 (list maxitems:1)
     */
    clusterRegistrationToken?: pulumi.Input<inputs.ClusterV2ClusterRegistrationToken>;
    /**
     * (Computed) Cluster v1 id for cluster v2. (e.g to be used with `rancher2Sync`) (string)
     */
    clusterV1Id?: pulumi.Input<string>;
    /**
     * Cluster V2 default cluster role for project members (string)
     */
    defaultClusterRoleForProjectMembers?: pulumi.Input<string>;
    /**
     * Cluster V2 default pod security admission configuration template name (string)
     */
    defaultPodSecurityAdmissionConfigurationTemplateName?: pulumi.Input<string>;
    /**
     * Cluster V2 default pod security policy template name (string)
     */
    defaultPodSecurityPolicyTemplateName?: pulumi.Input<string>;
    /**
     * Enable k8s network policy at Cluster V2 (bool)
     */
    enableNetworkPolicy?: pulumi.Input<boolean>;
    /**
     * Optional customization for fleet agent (list)
     */
    fleetAgentDeploymentCustomizations?: pulumi.Input<pulumi.Input<inputs.ClusterV2FleetAgentDeploymentCustomization>[]>;
    /**
     * The fleet namespace of the Cluster v2. Default: `\"fleet-default\"` (string)
     */
    fleetNamespace?: pulumi.Input<string>;
    /**
     * (Computed/Sensitive) Kube Config generated for the cluster v2. Note: When the cluster has `localAuthEndpoint` enabled, the kubeConfig will not be available until the cluster is `connected` (string)
     */
    kubeConfig?: pulumi.Input<string>;
    /**
     * The kubernetes version of the Cluster v2 (list maxitems:1)
     */
    kubernetesVersion?: pulumi.Input<string>;
    /**
     * Labels for the Cluster V2 (map)
     */
    labels?: pulumi.Input<{[key: string]: any}>;
    /**
     * Cluster V2 local auth endpoint (list maxitems:1)
     */
    localAuthEndpoint?: pulumi.Input<inputs.ClusterV2LocalAuthEndpoint>;
    /**
     * The name of the Cluster v2 (string)
     */
    name?: pulumi.Input<string>;
    /**
     * (Computed) Cluster v2 k8s resource version (string)
     */
    resourceVersion?: pulumi.Input<string>;
    /**
     * The RKE configuration for `k3s` and `rke2` Clusters v2. (list maxitems:1)
     */
    rkeConfig?: pulumi.Input<inputs.ClusterV2RkeConfig>;
}

/**
 * The set of arguments for constructing a ClusterV2 resource.
 */
export interface ClusterV2Args {
    /**
     * Optional Agent Env Vars for Rancher agent (list)
     */
    agentEnvVars?: pulumi.Input<pulumi.Input<inputs.ClusterV2AgentEnvVar>[]>;
    /**
     * Annotations for the Cluster V2 (map)
     */
    annotations?: pulumi.Input<{[key: string]: any}>;
    /**
     * Cluster V2 cloud credential secret name (string)
     */
    cloudCredentialSecretName?: pulumi.Input<string>;
    /**
     * Optional customization for cluster agent (list)
     */
    clusterAgentDeploymentCustomizations?: pulumi.Input<pulumi.Input<inputs.ClusterV2ClusterAgentDeploymentCustomization>[]>;
    /**
     * Cluster V2 default cluster role for project members (string)
     */
    defaultClusterRoleForProjectMembers?: pulumi.Input<string>;
    /**
     * Cluster V2 default pod security admission configuration template name (string)
     */
    defaultPodSecurityAdmissionConfigurationTemplateName?: pulumi.Input<string>;
    /**
     * Cluster V2 default pod security policy template name (string)
     */
    defaultPodSecurityPolicyTemplateName?: pulumi.Input<string>;
    /**
     * Enable k8s network policy at Cluster V2 (bool)
     */
    enableNetworkPolicy?: pulumi.Input<boolean>;
    /**
     * Optional customization for fleet agent (list)
     */
    fleetAgentDeploymentCustomizations?: pulumi.Input<pulumi.Input<inputs.ClusterV2FleetAgentDeploymentCustomization>[]>;
    /**
     * The fleet namespace of the Cluster v2. Default: `\"fleet-default\"` (string)
     */
    fleetNamespace?: pulumi.Input<string>;
    /**
     * The kubernetes version of the Cluster v2 (list maxitems:1)
     */
    kubernetesVersion: pulumi.Input<string>;
    /**
     * Labels for the Cluster V2 (map)
     */
    labels?: pulumi.Input<{[key: string]: any}>;
    /**
     * Cluster V2 local auth endpoint (list maxitems:1)
     */
    localAuthEndpoint?: pulumi.Input<inputs.ClusterV2LocalAuthEndpoint>;
    /**
     * The name of the Cluster v2 (string)
     */
    name?: pulumi.Input<string>;
    /**
     * The RKE configuration for `k3s` and `rke2` Clusters v2. (list maxitems:1)
     */
    rkeConfig?: pulumi.Input<inputs.ClusterV2RkeConfig>;
}
