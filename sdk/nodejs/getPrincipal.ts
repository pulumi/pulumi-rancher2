// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use this data source to retrieve information about a Rancher v2 Principal resource.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as rancher2 from "@pulumi/rancher2";
 *
 * const foo = rancher2.getPrincipal({
 *     name: "user@example.com",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getPrincipal(args: GetPrincipalArgs, opts?: pulumi.InvokeOptions): Promise<GetPrincipalResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("rancher2:index/getPrincipal:getPrincipal", {
        "name": args.name,
        "type": args.type,
    }, opts);
}

/**
 * A collection of arguments for invoking getPrincipal.
 */
export interface GetPrincipalArgs {
    /**
     * The full name of the principal (string)
     */
    name: string;
    /**
     * The type of the identity (string). Defaults to `user`. Only `user` and `group` values are supported (string)
     */
    type?: string;
}

/**
 * A collection of values returned by getPrincipal.
 */
export interface GetPrincipalResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly type?: string;
}
/**
 * Use this data source to retrieve information about a Rancher v2 Principal resource.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as rancher2 from "@pulumi/rancher2";
 *
 * const foo = rancher2.getPrincipal({
 *     name: "user@example.com",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getPrincipalOutput(args: GetPrincipalOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPrincipalResult> {
    return pulumi.output(args).apply((a: any) => getPrincipal(a, opts))
}

/**
 * A collection of arguments for invoking getPrincipal.
 */
export interface GetPrincipalOutputArgs {
    /**
     * The full name of the principal (string)
     */
    name: pulumi.Input<string>;
    /**
     * The type of the identity (string). Defaults to `user`. Only `user` and `group` values are supported (string)
     */
    type?: pulumi.Input<string>;
}
