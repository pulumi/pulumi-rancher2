# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables


class ClusterSync(pulumi.CustomResource):
    cluster_id: pulumi.Output[str]
    """
    The cluster ID that is syncing (string)
    """
    default_project_id: pulumi.Output[str]
    """
    (Computed) Default project ID for the cluster sync (string)
    """
    kube_config: pulumi.Output[str]
    """
    (Computed/Sensitive) Kube Config generated for the cluster sync (string)
    """
    node_pool_ids: pulumi.Output[list]
    """
    The node pool IDs used by the cluster id (list)
    """
    synced: pulumi.Output[bool]
    system_project_id: pulumi.Output[str]
    """
    (Computed) System project ID for the cluster sync (string)
    """
    wait_monitoring: pulumi.Output[bool]
    """
    Wait until monitoring is up and running. Default: `false` (bool)
    """
    def __init__(__self__, resource_name, opts=None, cluster_id=None, node_pool_ids=None, synced=None, wait_monitoring=None, __props__=None, __name__=None, __opts__=None):
        """
        Create a ClusterSync resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] cluster_id: The cluster ID that is syncing (string)
        :param pulumi.Input[list] node_pool_ids: The node pool IDs used by the cluster id (list)
        :param pulumi.Input[bool] wait_monitoring: Wait until monitoring is up and running. Default: `false` (bool)
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            if cluster_id is None:
                raise TypeError("Missing required property 'cluster_id'")
            __props__['cluster_id'] = cluster_id
            __props__['node_pool_ids'] = node_pool_ids
            __props__['synced'] = synced
            __props__['wait_monitoring'] = wait_monitoring
            __props__['default_project_id'] = None
            __props__['kube_config'] = None
            __props__['system_project_id'] = None
        super(ClusterSync, __self__).__init__(
            'rancher2:index/clusterSync:ClusterSync',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, cluster_id=None, default_project_id=None, kube_config=None, node_pool_ids=None, synced=None, system_project_id=None, wait_monitoring=None):
        """
        Get an existing ClusterSync resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] cluster_id: The cluster ID that is syncing (string)
        :param pulumi.Input[str] default_project_id: (Computed) Default project ID for the cluster sync (string)
        :param pulumi.Input[str] kube_config: (Computed/Sensitive) Kube Config generated for the cluster sync (string)
        :param pulumi.Input[list] node_pool_ids: The node pool IDs used by the cluster id (list)
        :param pulumi.Input[str] system_project_id: (Computed) System project ID for the cluster sync (string)
        :param pulumi.Input[bool] wait_monitoring: Wait until monitoring is up and running. Default: `false` (bool)
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["cluster_id"] = cluster_id
        __props__["default_project_id"] = default_project_id
        __props__["kube_config"] = kube_config
        __props__["node_pool_ids"] = node_pool_ids
        __props__["synced"] = synced
        __props__["system_project_id"] = system_project_id
        __props__["wait_monitoring"] = wait_monitoring
        return ClusterSync(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
