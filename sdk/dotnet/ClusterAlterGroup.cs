// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2
{
    /// <summary>
    /// Provides a Rancher v2 Cluster Alert Group resource. This can be used to create Cluster Alert Group for Rancher v2 environments and retrieve their information.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-rancher2/blob/master/website/docs/r/clusterAlertGroup.html.markdown.
    /// </summary>
    public partial class ClusterAlterGroup : Pulumi.CustomResource
    {
        /// <summary>
        /// The cluster alert group annotations (map)
        /// </summary>
        [Output("annotations")]
        public Output<ImmutableDictionary<string, object>> Annotations { get; private set; } = null!;

        /// <summary>
        /// The cluster id where create cluster alert group (string)
        /// </summary>
        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        /// <summary>
        /// The cluster alert group description (string)
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The cluster alert group interval seconds. Default: `180` (int)
        /// </summary>
        [Output("groupIntervalSeconds")]
        public Output<int?> GroupIntervalSeconds { get; private set; } = null!;

        /// <summary>
        /// The cluster alert group wait seconds. Default: `180` (int)
        /// </summary>
        [Output("groupWaitSeconds")]
        public Output<int?> GroupWaitSeconds { get; private set; } = null!;

        /// <summary>
        /// The cluster alert group labels (map)
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, object>> Labels { get; private set; } = null!;

        /// <summary>
        /// The cluster alert group name (string)
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The cluster alert group recipients (list)
        /// </summary>
        [Output("recipients")]
        public Output<ImmutableArray<Outputs.ClusterAlterGroupRecipients>> Recipients { get; private set; } = null!;

        /// <summary>
        /// The cluster alert group wait seconds. Default: `3600` (int)
        /// </summary>
        [Output("repeatIntervalSeconds")]
        public Output<int?> RepeatIntervalSeconds { get; private set; } = null!;


        /// <summary>
        /// Create a ClusterAlterGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ClusterAlterGroup(string name, ClusterAlterGroupArgs args, CustomResourceOptions? options = null)
            : base("rancher2:index/clusterAlterGroup:ClusterAlterGroup", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private ClusterAlterGroup(string name, Input<string> id, ClusterAlterGroupState? state = null, CustomResourceOptions? options = null)
            : base("rancher2:index/clusterAlterGroup:ClusterAlterGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ClusterAlterGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ClusterAlterGroup Get(string name, Input<string> id, ClusterAlterGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new ClusterAlterGroup(name, id, state, options);
        }
    }

    public sealed class ClusterAlterGroupArgs : Pulumi.ResourceArgs
    {
        [Input("annotations")]
        private InputMap<object>? _annotations;

        /// <summary>
        /// The cluster alert group annotations (map)
        /// </summary>
        public InputMap<object> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<object>());
            set => _annotations = value;
        }

        /// <summary>
        /// The cluster id where create cluster alert group (string)
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        /// <summary>
        /// The cluster alert group description (string)
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The cluster alert group interval seconds. Default: `180` (int)
        /// </summary>
        [Input("groupIntervalSeconds")]
        public Input<int>? GroupIntervalSeconds { get; set; }

        /// <summary>
        /// The cluster alert group wait seconds. Default: `180` (int)
        /// </summary>
        [Input("groupWaitSeconds")]
        public Input<int>? GroupWaitSeconds { get; set; }

        [Input("labels")]
        private InputMap<object>? _labels;

        /// <summary>
        /// The cluster alert group labels (map)
        /// </summary>
        public InputMap<object> Labels
        {
            get => _labels ?? (_labels = new InputMap<object>());
            set => _labels = value;
        }

        /// <summary>
        /// The cluster alert group name (string)
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("recipients")]
        private InputList<Inputs.ClusterAlterGroupRecipientsArgs>? _recipients;

        /// <summary>
        /// The cluster alert group recipients (list)
        /// </summary>
        public InputList<Inputs.ClusterAlterGroupRecipientsArgs> Recipients
        {
            get => _recipients ?? (_recipients = new InputList<Inputs.ClusterAlterGroupRecipientsArgs>());
            set => _recipients = value;
        }

        /// <summary>
        /// The cluster alert group wait seconds. Default: `3600` (int)
        /// </summary>
        [Input("repeatIntervalSeconds")]
        public Input<int>? RepeatIntervalSeconds { get; set; }

        public ClusterAlterGroupArgs()
        {
        }
    }

    public sealed class ClusterAlterGroupState : Pulumi.ResourceArgs
    {
        [Input("annotations")]
        private InputMap<object>? _annotations;

        /// <summary>
        /// The cluster alert group annotations (map)
        /// </summary>
        public InputMap<object> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<object>());
            set => _annotations = value;
        }

        /// <summary>
        /// The cluster id where create cluster alert group (string)
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// The cluster alert group description (string)
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The cluster alert group interval seconds. Default: `180` (int)
        /// </summary>
        [Input("groupIntervalSeconds")]
        public Input<int>? GroupIntervalSeconds { get; set; }

        /// <summary>
        /// The cluster alert group wait seconds. Default: `180` (int)
        /// </summary>
        [Input("groupWaitSeconds")]
        public Input<int>? GroupWaitSeconds { get; set; }

        [Input("labels")]
        private InputMap<object>? _labels;

        /// <summary>
        /// The cluster alert group labels (map)
        /// </summary>
        public InputMap<object> Labels
        {
            get => _labels ?? (_labels = new InputMap<object>());
            set => _labels = value;
        }

        /// <summary>
        /// The cluster alert group name (string)
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("recipients")]
        private InputList<Inputs.ClusterAlterGroupRecipientsGetArgs>? _recipients;

        /// <summary>
        /// The cluster alert group recipients (list)
        /// </summary>
        public InputList<Inputs.ClusterAlterGroupRecipientsGetArgs> Recipients
        {
            get => _recipients ?? (_recipients = new InputList<Inputs.ClusterAlterGroupRecipientsGetArgs>());
            set => _recipients = value;
        }

        /// <summary>
        /// The cluster alert group wait seconds. Default: `3600` (int)
        /// </summary>
        [Input("repeatIntervalSeconds")]
        public Input<int>? RepeatIntervalSeconds { get; set; }

        public ClusterAlterGroupState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class ClusterAlterGroupRecipientsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Use notifier default recipient, overriding `recipient` argument if set.  Default: `false` (bool)
        /// </summary>
        [Input("defaultRecipient")]
        public Input<bool>? DefaultRecipient { get; set; }

        /// <summary>
        /// Recipient notifier ID (string)
        /// </summary>
        [Input("notifierId", required: true)]
        public Input<string> NotifierId { get; set; } = null!;

        /// <summary>
        /// Recipient notifier ID. Supported values : `"pagerduty" | "slack" | "email" | "webhook" | "wechat"` (string)
        /// </summary>
        [Input("notifierType")]
        public Input<string>? NotifierType { get; set; }

        /// <summary>
        /// Recipient (string)
        /// </summary>
        [Input("recipient")]
        public Input<string>? Recipient { get; set; }

        public ClusterAlterGroupRecipientsArgs()
        {
        }
    }

    public sealed class ClusterAlterGroupRecipientsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Use notifier default recipient, overriding `recipient` argument if set.  Default: `false` (bool)
        /// </summary>
        [Input("defaultRecipient")]
        public Input<bool>? DefaultRecipient { get; set; }

        /// <summary>
        /// Recipient notifier ID (string)
        /// </summary>
        [Input("notifierId", required: true)]
        public Input<string> NotifierId { get; set; } = null!;

        /// <summary>
        /// Recipient notifier ID. Supported values : `"pagerduty" | "slack" | "email" | "webhook" | "wechat"` (string)
        /// </summary>
        [Input("notifierType")]
        public Input<string>? NotifierType { get; set; }

        /// <summary>
        /// Recipient (string)
        /// </summary>
        [Input("recipient")]
        public Input<string>? Recipient { get; set; }

        public ClusterAlterGroupRecipientsGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class ClusterAlterGroupRecipients
    {
        /// <summary>
        /// Use notifier default recipient, overriding `recipient` argument if set.  Default: `false` (bool)
        /// </summary>
        public readonly bool? DefaultRecipient;
        /// <summary>
        /// Recipient notifier ID (string)
        /// </summary>
        public readonly string NotifierId;
        /// <summary>
        /// Recipient notifier ID. Supported values : `"pagerduty" | "slack" | "email" | "webhook" | "wechat"` (string)
        /// </summary>
        public readonly string NotifierType;
        /// <summary>
        /// Recipient (string)
        /// </summary>
        public readonly string Recipient;

        [OutputConstructor]
        private ClusterAlterGroupRecipients(
            bool? defaultRecipient,
            string notifierId,
            string notifierType,
            string recipient)
        {
            DefaultRecipient = defaultRecipient;
            NotifierId = notifierId;
            NotifierType = notifierType;
            Recipient = recipient;
        }
    }
    }
}
