// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2
{
    public static class GetGlobalDnsProvider
    {
        /// <summary>
        /// Provides a Rancher V2 Global DNS Provider data source. Use this data source to retrieve information about a Rancher v2 global DNS provider
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Rancher2 = Pulumi.Rancher2;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Rancher2.GetGlobalDnsProvider.Invoke(new()
        ///     {
        ///         Name = "foo",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetGlobalDnsProviderResult> InvokeAsync(GetGlobalDnsProviderArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGlobalDnsProviderResult>("rancher2:index/getGlobalDnsProvider:getGlobalDnsProvider", args ?? new GetGlobalDnsProviderArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a Rancher V2 Global DNS Provider data source. Use this data source to retrieve information about a Rancher v2 global DNS provider
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Rancher2 = Pulumi.Rancher2;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Rancher2.GetGlobalDnsProvider.Invoke(new()
        ///     {
        ///         Name = "foo",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetGlobalDnsProviderResult> Invoke(GetGlobalDnsProviderInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGlobalDnsProviderResult>("rancher2:index/getGlobalDnsProvider:getGlobalDnsProvider", args ?? new GetGlobalDnsProviderInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGlobalDnsProviderArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the global DNS provider (string)
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetGlobalDnsProviderArgs()
        {
        }
        public static new GetGlobalDnsProviderArgs Empty => new GetGlobalDnsProviderArgs();
    }

    public sealed class GetGlobalDnsProviderInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the global DNS provider (string)
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetGlobalDnsProviderInvokeArgs()
        {
        }
        public static new GetGlobalDnsProviderInvokeArgs Empty => new GetGlobalDnsProviderInvokeArgs();
    }


    [OutputType]
    public sealed class GetGlobalDnsProviderResult
    {
        public readonly Outputs.GetGlobalDnsProviderAlidnsConfigResult AlidnsConfig;
        /// <summary>
        /// (Computed) Annotations of the resource (map)
        /// </summary>
        public readonly ImmutableDictionary<string, object> Annotations;
        public readonly Outputs.GetGlobalDnsProviderCloudflareConfigResult CloudflareConfig;
        public readonly string DnsProvider;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (Computed) Labels of the resource (map)
        /// </summary>
        public readonly ImmutableDictionary<string, object> Labels;
        /// <summary>
        /// (Computed) The name of the global DNS provider (string)
        /// </summary>
        public readonly string Name;
        public readonly string RootDomain;
        public readonly Outputs.GetGlobalDnsProviderRoute53ConfigResult Route53Config;

        [OutputConstructor]
        private GetGlobalDnsProviderResult(
            Outputs.GetGlobalDnsProviderAlidnsConfigResult alidnsConfig,

            ImmutableDictionary<string, object> annotations,

            Outputs.GetGlobalDnsProviderCloudflareConfigResult cloudflareConfig,

            string dnsProvider,

            string id,

            ImmutableDictionary<string, object> labels,

            string name,

            string rootDomain,

            Outputs.GetGlobalDnsProviderRoute53ConfigResult route53Config)
        {
            AlidnsConfig = alidnsConfig;
            Annotations = annotations;
            CloudflareConfig = cloudflareConfig;
            DnsProvider = dnsProvider;
            Id = id;
            Labels = labels;
            Name = name;
            RootDomain = rootDomain;
            Route53Config = route53Config;
        }
    }
}
