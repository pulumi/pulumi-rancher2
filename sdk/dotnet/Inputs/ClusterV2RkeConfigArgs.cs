// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2.Inputs
{

    public sealed class ClusterV2RkeConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Cluster V2 additional manifest
        /// </summary>
        [Input("additionalManifest")]
        public Input<string>? AdditionalManifest { get; set; }

        /// <summary>
        /// Cluster V2 chart values. It should be in YAML format
        /// </summary>
        [Input("chartValues")]
        public Input<string>? ChartValues { get; set; }

        /// <summary>
        /// Cluster V2 etcd
        /// </summary>
        [Input("etcd")]
        public Input<Inputs.ClusterV2RkeConfigEtcdArgs>? Etcd { get; set; }

        /// <summary>
        /// Cluster V2 etcd snapshot create
        /// </summary>
        [Input("etcdSnapshotCreate")]
        public Input<Inputs.ClusterV2RkeConfigEtcdSnapshotCreateArgs>? EtcdSnapshotCreate { get; set; }

        /// <summary>
        /// Cluster V2 etcd snapshot restore
        /// </summary>
        [Input("etcdSnapshotRestore")]
        public Input<Inputs.ClusterV2RkeConfigEtcdSnapshotRestoreArgs>? EtcdSnapshotRestore { get; set; }

        /// <summary>
        /// Local auth endpoint configures the Authorized Cluster Endpoint (ACE) which can be used to directly access the Kubernetes API server, without requiring communication through Rancher. For more information, please refer to [Rancher Documentation](https://ranchermanager.docs.rancher.com/how-to-guides/new-user-guides/kubernetes-clusters-in-rancher-setup/register-existing-clusters#authorized-cluster-endpoint-support-for-rke2-and-k3s-clusters).
        /// </summary>
        [Input("localAuthEndpoint")]
        public Input<Inputs.ClusterV2RkeConfigLocalAuthEndpointArgs>? LocalAuthEndpoint { get; set; }

        /// <summary>
        /// Cluster V2 machine global config
        /// </summary>
        [Input("machineGlobalConfig")]
        public Input<string>? MachineGlobalConfig { get; set; }

        [Input("machinePoolDefaults")]
        private InputList<Inputs.ClusterV2RkeConfigMachinePoolDefaultArgs>? _machinePoolDefaults;

        /// <summary>
        /// Default values for machine pool configurations if unset
        /// </summary>
        public InputList<Inputs.ClusterV2RkeConfigMachinePoolDefaultArgs> MachinePoolDefaults
        {
            get => _machinePoolDefaults ?? (_machinePoolDefaults = new InputList<Inputs.ClusterV2RkeConfigMachinePoolDefaultArgs>());
            set => _machinePoolDefaults = value;
        }

        [Input("machinePools")]
        private InputList<Inputs.ClusterV2RkeConfigMachinePoolArgs>? _machinePools;

        /// <summary>
        /// Cluster V2 machine pools
        /// </summary>
        public InputList<Inputs.ClusterV2RkeConfigMachinePoolArgs> MachinePools
        {
            get => _machinePools ?? (_machinePools = new InputList<Inputs.ClusterV2RkeConfigMachinePoolArgs>());
            set => _machinePools = value;
        }

        [Input("machineSelectorConfigs")]
        private InputList<Inputs.ClusterV2RkeConfigMachineSelectorConfigArgs>? _machineSelectorConfigs;

        /// <summary>
        /// Cluster V2 machine selector config
        /// </summary>
        public InputList<Inputs.ClusterV2RkeConfigMachineSelectorConfigArgs> MachineSelectorConfigs
        {
            get => _machineSelectorConfigs ?? (_machineSelectorConfigs = new InputList<Inputs.ClusterV2RkeConfigMachineSelectorConfigArgs>());
            set => _machineSelectorConfigs = value;
        }

        [Input("machineSelectorFiles")]
        private InputList<Inputs.ClusterV2RkeConfigMachineSelectorFileArgs>? _machineSelectorFiles;

        /// <summary>
        /// Cluster V2 machine selector files
        /// </summary>
        public InputList<Inputs.ClusterV2RkeConfigMachineSelectorFileArgs> MachineSelectorFiles
        {
            get => _machineSelectorFiles ?? (_machineSelectorFiles = new InputList<Inputs.ClusterV2RkeConfigMachineSelectorFileArgs>());
            set => _machineSelectorFiles = value;
        }

        /// <summary>
        /// Cluster V2 registries
        /// </summary>
        [Input("registries")]
        public Input<Inputs.ClusterV2RkeConfigRegistriesArgs>? Registries { get; set; }

        /// <summary>
        /// Cluster V2 certificate rotation
        /// </summary>
        [Input("rotateCertificates")]
        public Input<Inputs.ClusterV2RkeConfigRotateCertificatesArgs>? RotateCertificates { get; set; }

        /// <summary>
        /// Cluster V2 upgrade strategy
        /// </summary>
        [Input("upgradeStrategy")]
        public Input<Inputs.ClusterV2RkeConfigUpgradeStrategyArgs>? UpgradeStrategy { get; set; }

        public ClusterV2RkeConfigArgs()
        {
        }
        public static new ClusterV2RkeConfigArgs Empty => new ClusterV2RkeConfigArgs();
    }
}
