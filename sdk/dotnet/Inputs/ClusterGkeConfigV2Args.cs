// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2.Inputs
{

    public sealed class ClusterGkeConfigV2Args : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The GKE cluster addons (List maxitems:1)
        /// </summary>
        [Input("clusterAddons")]
        public Input<Inputs.ClusterGkeConfigV2ClusterAddonsArgs>? ClusterAddons { get; set; }

        /// <summary>
        /// The GKE cluster ip v4 allocation cidr block (string)
        /// </summary>
        [Input("clusterIpv4CidrBlock")]
        public Input<string>? ClusterIpv4CidrBlock { get; set; }

        /// <summary>
        /// The description for Cluster (string)
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Enable Kubernetes alpha. Default: `false` (bool)
        /// </summary>
        [Input("enableKubernetesAlpha")]
        public Input<bool>? EnableKubernetesAlpha { get; set; }

        [Input("googleCredentialSecret", required: true)]
        private Input<string>? _googleCredentialSecret;

        /// <summary>
        /// Google credential secret (string)
        /// </summary>
        public Input<string>? GoogleCredentialSecret
        {
            get => _googleCredentialSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _googleCredentialSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Is GKE cluster imported? Default: `false` (bool)
        /// </summary>
        [Input("imported")]
        public Input<bool>? Imported { get; set; }

        /// <summary>
        /// The GKE ip allocation policy (List maxitems:1)
        /// </summary>
        [Input("ipAllocationPolicy")]
        public Input<Inputs.ClusterGkeConfigV2IpAllocationPolicyArgs>? IpAllocationPolicy { get; set; }

        /// <summary>
        /// The kubernetes master version. Required if `imported=false` (string)
        /// </summary>
        [Input("kubernetesVersion")]
        public Input<string>? KubernetesVersion { get; set; }

        [Input("labels")]
        private InputMap<object>? _labels;

        /// <summary>
        /// Labels for the Cluster (map)
        /// </summary>
        public InputMap<object> Labels
        {
            get => _labels ?? (_labels = new InputMap<object>());
            set => _labels = value;
        }

        [Input("locations")]
        private InputList<string>? _locations;

        /// <summary>
        /// The GKE cluster locations (List)
        /// </summary>
        public InputList<string> Locations
        {
            get => _locations ?? (_locations = new InputList<string>());
            set => _locations = value;
        }

        /// <summary>
        /// The GKE cluster logging service (string)
        /// </summary>
        [Input("loggingService")]
        public Input<string>? LoggingService { get; set; }

        /// <summary>
        /// The GKE cluster maintenance window (string)
        /// </summary>
        [Input("maintenanceWindow")]
        public Input<string>? MaintenanceWindow { get; set; }

        /// <summary>
        /// The GKE cluster master authorized networks config (List maxitems:1)
        /// </summary>
        [Input("masterAuthorizedNetworksConfig")]
        public Input<Inputs.ClusterGkeConfigV2MasterAuthorizedNetworksConfigArgs>? MasterAuthorizedNetworksConfig { get; set; }

        /// <summary>
        /// The GKE cluster monitoring service (string)
        /// </summary>
        [Input("monitoringService")]
        public Input<string>? MonitoringService { get; set; }

        /// <summary>
        /// The AKS cluster name (string)
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The GKE cluster network. Required for create new cluster (string)
        /// </summary>
        [Input("network")]
        public Input<string>? Network { get; set; }

        /// <summary>
        /// Is GKE cluster network policy enabled? Default: `false` (bool)
        /// </summary>
        [Input("networkPolicyEnabled")]
        public Input<bool>? NetworkPolicyEnabled { get; set; }

        [Input("nodePools")]
        private InputList<Inputs.ClusterGkeConfigV2NodePoolArgs>? _nodePools;

        /// <summary>
        /// The AKS nnode pools. Required if `imported=false` (list)
        /// </summary>
        public InputList<Inputs.ClusterGkeConfigV2NodePoolArgs> NodePools
        {
            get => _nodePools ?? (_nodePools = new InputList<Inputs.ClusterGkeConfigV2NodePoolArgs>());
            set => _nodePools = value;
        }

        /// <summary>
        /// The GKE private cluster config (List maxitems:1)
        /// </summary>
        [Input("privateClusterConfig")]
        public Input<Inputs.ClusterGkeConfigV2PrivateClusterConfigArgs>? PrivateClusterConfig { get; set; }

        /// <summary>
        /// Project ID to apply answer (string)
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// The availability domain within the region to host the cluster. See [here](https://docs.cloud.oracle.com/en-us/iaas/Content/General/Concepts/regions.htm) for a list of region names. (string)
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The GKE cluster subnetwork. Required for create new cluster (string)
        /// </summary>
        [Input("subnetwork")]
        public Input<string>? Subnetwork { get; set; }

        /// <summary>
        /// The GKE cluster zone. Required if `region` not set (string)
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public ClusterGkeConfigV2Args()
        {
        }
        public static new ClusterGkeConfigV2Args Empty => new ClusterGkeConfigV2Args();
    }
}
