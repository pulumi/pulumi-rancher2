// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2.Inputs
{

    public sealed class ClusterEksConfigV2NodeGroupGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The EKS node group desired size
        /// </summary>
        [Input("desiredSize")]
        public Input<int>? DesiredSize { get; set; }

        /// <summary>
        /// The EKS node group disk size
        /// </summary>
        [Input("diskSize")]
        public Input<int>? DiskSize { get; set; }

        /// <summary>
        /// The EKS node group ssh key
        /// </summary>
        [Input("ec2SshKey")]
        public Input<string>? Ec2SshKey { get; set; }

        /// <summary>
        /// Is EKS cluster using gpu?
        /// </summary>
        [Input("gpu")]
        public Input<bool>? Gpu { get; set; }

        /// <summary>
        /// The EKS node group image ID
        /// </summary>
        [Input("imageId")]
        public Input<string>? ImageId { get; set; }

        /// <summary>
        /// The EKS node group instance type
        /// </summary>
        [Input("instanceType")]
        public Input<string>? InstanceType { get; set; }

        [Input("labels")]
        private InputMap<object>? _labels;

        /// <summary>
        /// Labels for the Cluster (map)
        /// </summary>
        public InputMap<object> Labels
        {
            get => _labels ?? (_labels = new InputMap<object>());
            set => _labels = value;
        }

        [Input("launchTemplates")]
        private InputList<Inputs.ClusterEksConfigV2NodeGroupLaunchTemplateGetArgs>? _launchTemplates;

        /// <summary>
        /// The EKS node groups launch template
        /// </summary>
        public InputList<Inputs.ClusterEksConfigV2NodeGroupLaunchTemplateGetArgs> LaunchTemplates
        {
            get => _launchTemplates ?? (_launchTemplates = new InputList<Inputs.ClusterEksConfigV2NodeGroupLaunchTemplateGetArgs>());
            set => _launchTemplates = value;
        }

        /// <summary>
        /// The EKS node group maximum size
        /// </summary>
        [Input("maxSize")]
        public Input<int>? MaxSize { get; set; }

        /// <summary>
        /// The EKS node group minimum size
        /// </summary>
        [Input("minSize")]
        public Input<int>? MinSize { get; set; }

        /// <summary>
        /// The name of the Cluster (string)
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The EKS node group node role ARN
        /// </summary>
        [Input("nodeRole")]
        public Input<string>? NodeRole { get; set; }

        /// <summary>
        /// Enable EKS node group request spot instances
        /// </summary>
        [Input("requestSpotInstances")]
        public Input<bool>? RequestSpotInstances { get; set; }

        [Input("resourceTags")]
        private InputMap<object>? _resourceTags;

        /// <summary>
        /// The EKS node group resource tags
        /// </summary>
        public InputMap<object> ResourceTags
        {
            get => _resourceTags ?? (_resourceTags = new InputMap<object>());
            set => _resourceTags = value;
        }

        [Input("spotInstanceTypes")]
        private InputList<string>? _spotInstanceTypes;

        /// <summary>
        /// The EKS node group spot instance types
        /// </summary>
        public InputList<string> SpotInstanceTypes
        {
            get => _spotInstanceTypes ?? (_spotInstanceTypes = new InputList<string>());
            set => _spotInstanceTypes = value;
        }

        [Input("subnets")]
        private InputList<string>? _subnets;

        /// <summary>
        /// The EKS node group subnets
        /// </summary>
        public InputList<string> Subnets
        {
            get => _subnets ?? (_subnets = new InputList<string>());
            set => _subnets = value;
        }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// The EKS node group tags
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// The EKS node group user data
        /// </summary>
        [Input("userData")]
        public Input<string>? UserData { get; set; }

        /// <summary>
        /// The EKS node group k8s version
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public ClusterEksConfigV2NodeGroupGetArgs()
        {
        }
        public static new ClusterEksConfigV2NodeGroupGetArgs Empty => new ClusterEksConfigV2NodeGroupGetArgs();
    }
}
