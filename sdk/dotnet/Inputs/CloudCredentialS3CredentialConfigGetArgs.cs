// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2.Inputs
{

    public sealed class CloudCredentialS3CredentialConfigGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("accessKey", required: true)]
        private Input<string>? _accessKey;

        /// <summary>
        /// AWS Access Key
        /// </summary>
        public Input<string>? AccessKey
        {
            get => _accessKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _accessKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// AWS default bucket
        /// </summary>
        [Input("defaultBucket")]
        public Input<string>? DefaultBucket { get; set; }

        /// <summary>
        /// AWS default endpoint
        /// </summary>
        [Input("defaultEndpoint")]
        public Input<string>? DefaultEndpoint { get; set; }

        [Input("defaultEndpointCa")]
        private Input<string>? _defaultEndpointCa;

        /// <summary>
        /// AWS default endpoint CA
        /// </summary>
        public Input<string>? DefaultEndpointCa
        {
            get => _defaultEndpointCa;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _defaultEndpointCa = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// AWS default folder
        /// </summary>
        [Input("defaultFolder")]
        public Input<string>? DefaultFolder { get; set; }

        /// <summary>
        /// AWS default region
        /// </summary>
        [Input("defaultRegion")]
        public Input<string>? DefaultRegion { get; set; }

        /// <summary>
        /// AWS default skip ssl verify
        /// </summary>
        [Input("defaultSkipSslVerify")]
        public Input<bool>? DefaultSkipSslVerify { get; set; }

        [Input("secretKey", required: true)]
        private Input<string>? _secretKey;

        /// <summary>
        /// AWS Secret Key
        /// </summary>
        public Input<string>? SecretKey
        {
            get => _secretKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _secretKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public CloudCredentialS3CredentialConfigGetArgs()
        {
        }
        public static new CloudCredentialS3CredentialConfigGetArgs Empty => new CloudCredentialS3CredentialConfigGetArgs();
    }
}
