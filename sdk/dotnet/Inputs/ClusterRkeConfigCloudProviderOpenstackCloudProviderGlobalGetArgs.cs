// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2.Inputs
{

    public sealed class ClusterRkeConfigCloudProviderOpenstackCloudProviderGlobalGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("authUrl", required: true)]
        public Input<string> AuthUrl { get; set; } = null!;

        [Input("caFile")]
        public Input<string>? CaFile { get; set; }

        [Input("domainId")]
        private Input<string>? _domainId;
        public Input<string>? DomainId
        {
            get => _domainId;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _domainId = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("domainName")]
        public Input<string>? DomainName { get; set; }

        [Input("password", required: true)]
        private Input<string>? _password;
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("tenantId")]
        private Input<string>? _tenantId;
        public Input<string>? TenantId
        {
            get => _tenantId;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _tenantId = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("tenantName")]
        public Input<string>? TenantName { get; set; }

        [Input("trustId")]
        private Input<string>? _trustId;
        public Input<string>? TrustId
        {
            get => _trustId;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _trustId = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("username", required: true)]
        private Input<string>? _username;
        public Input<string>? Username
        {
            get => _username;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _username = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public ClusterRkeConfigCloudProviderOpenstackCloudProviderGlobalGetArgs()
        {
        }
        public static new ClusterRkeConfigCloudProviderOpenstackCloudProviderGlobalGetArgs Empty => new ClusterRkeConfigCloudProviderOpenstackCloudProviderGlobalGetArgs();
    }
}
