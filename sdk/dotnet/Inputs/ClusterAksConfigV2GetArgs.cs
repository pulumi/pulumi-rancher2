// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2.Inputs
{

    public sealed class ClusterAksConfigV2GetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The AKS auth base url (string)
        /// </summary>
        [Input("authBaseUrl")]
        public Input<string>? AuthBaseUrl { get; set; }

        [Input("authorizedIpRanges")]
        private InputList<string>? _authorizedIpRanges;

        /// <summary>
        /// The AKS authorized ip ranges (list)
        /// </summary>
        public InputList<string> AuthorizedIpRanges
        {
            get => _authorizedIpRanges ?? (_authorizedIpRanges = new InputList<string>());
            set => _authorizedIpRanges = value;
        }

        /// <summary>
        /// The AKS base url (string)
        /// </summary>
        [Input("baseUrl")]
        public Input<string>? BaseUrl { get; set; }

        /// <summary>
        /// The EKS cloud_credential id (string)
        /// </summary>
        [Input("cloudCredentialId", required: true)]
        public Input<string> CloudCredentialId { get; set; } = null!;

        /// <summary>
        /// The AKS dns prefix. Required if `imported=false` (string)
        /// </summary>
        [Input("dnsPrefix")]
        public Input<string>? DnsPrefix { get; set; }

        /// <summary>
        /// Enable AKS http application routing? (bool)
        /// </summary>
        [Input("httpApplicationRouting")]
        public Input<bool>? HttpApplicationRouting { get; set; }

        /// <summary>
        /// Is GKE cluster imported? Default: `false` (bool)
        /// </summary>
        [Input("imported")]
        public Input<bool>? Imported { get; set; }

        /// <summary>
        /// The Kubernetes version that will be used for your master *and* OKE worker nodes (string)
        /// </summary>
        [Input("kubernetesVersion")]
        public Input<string>? KubernetesVersion { get; set; }

        /// <summary>
        /// The AKS linux admin username (string)
        /// </summary>
        [Input("linuxAdminUsername")]
        public Input<string>? LinuxAdminUsername { get; set; }

        /// <summary>
        /// The AKS linux ssh public key (string)
        /// </summary>
        [Input("linuxSshPublicKey")]
        public Input<string>? LinuxSshPublicKey { get; set; }

        /// <summary>
        /// The AKS load balancer sku (string)
        /// </summary>
        [Input("loadBalancerSku")]
        public Input<string>? LoadBalancerSku { get; set; }

        /// <summary>
        /// The AKS log analytics workspace group (string)
        /// </summary>
        [Input("logAnalyticsWorkspaceGroup")]
        public Input<string>? LogAnalyticsWorkspaceGroup { get; set; }

        /// <summary>
        /// The AKS log analytics workspace name (string)
        /// </summary>
        [Input("logAnalyticsWorkspaceName")]
        public Input<string>? LogAnalyticsWorkspaceName { get; set; }

        /// <summary>
        /// Is AKS cluster monitoring enabled? (bool)
        /// </summary>
        [Input("monitoring")]
        public Input<bool>? Monitoring { get; set; }

        /// <summary>
        /// Name of cluster registration token (string)
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The AKS network dns service ip (string)
        /// </summary>
        [Input("networkDnsServiceIp")]
        public Input<string>? NetworkDnsServiceIp { get; set; }

        /// <summary>
        /// The AKS network docker bridge cidr (string)
        /// </summary>
        [Input("networkDockerBridgeCidr")]
        public Input<string>? NetworkDockerBridgeCidr { get; set; }

        /// <summary>
        /// The AKS network plugin. Required if `imported=false` (string)
        /// </summary>
        [Input("networkPlugin")]
        public Input<string>? NetworkPlugin { get; set; }

        /// <summary>
        /// The AKS network pod cidr (string)
        /// </summary>
        [Input("networkPodCidr")]
        public Input<string>? NetworkPodCidr { get; set; }

        /// <summary>
        /// The AKS network policy (string)
        /// </summary>
        [Input("networkPolicy")]
        public Input<string>? NetworkPolicy { get; set; }

        /// <summary>
        /// The AKS network service cidr (string)
        /// </summary>
        [Input("networkServiceCidr")]
        public Input<string>? NetworkServiceCidr { get; set; }

        [Input("nodePools")]
        private InputList<Inputs.ClusterAksConfigV2NodePoolGetArgs>? _nodePools;

        /// <summary>
        /// The GKE cluster node pools. Required for create new cluster (List)
        /// </summary>
        public InputList<Inputs.ClusterAksConfigV2NodePoolGetArgs> NodePools
        {
            get => _nodePools ?? (_nodePools = new InputList<Inputs.ClusterAksConfigV2NodePoolGetArgs>());
            set => _nodePools = value;
        }

        /// <summary>
        /// Is AKS cluster private? (bool)
        /// </summary>
        [Input("privateCluster")]
        public Input<bool>? PrivateCluster { get; set; }

        /// <summary>
        /// The AKS resource group (string)
        /// </summary>
        [Input("resourceGroup", required: true)]
        public Input<string> ResourceGroup { get; set; } = null!;

        /// <summary>
        /// The AKS resource location (string)
        /// </summary>
        [Input("resourceLocation", required: true)]
        public Input<string> ResourceLocation { get; set; } = null!;

        /// <summary>
        /// The AKS subnet (string)
        /// </summary>
        [Input("subnet")]
        public Input<string>? Subnet { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// The GKE node config tags (List)
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// The name of the virtual network to use. If it's not specified Rancher will create a new VPC (string)
        /// </summary>
        [Input("virtualNetwork")]
        public Input<string>? VirtualNetwork { get; set; }

        /// <summary>
        /// The AKS virtual network resource group (string)
        /// </summary>
        [Input("virtualNetworkResourceGroup")]
        public Input<string>? VirtualNetworkResourceGroup { get; set; }

        public ClusterAksConfigV2GetArgs()
        {
        }
    }
}
