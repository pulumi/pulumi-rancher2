// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2.Inputs
{

    public sealed class NodeTemplateHetznerConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Hetzner Cloud project API token (string)
        /// </summary>
        [Input("apiToken", required: true)]
        public Input<string> ApiToken { get; set; } = null!;

        /// <summary>
        /// Specifies the Linode Instance image which determines the OS distribution and base files. Default `linode/ubuntu18.04` (string)
        /// </summary>
        [Input("image")]
        public Input<string>? Image { get; set; }

        /// <summary>
        /// Comma-separated list of network IDs or names which should be attached to the server private network interface (string)
        /// </summary>
        [Input("networks")]
        public Input<string>? Networks { get; set; }

        [Input("serverLabels")]
        private InputMap<object>? _serverLabels;

        /// <summary>
        /// Map of the labels which will be assigned to the server. This argument is only available on [Hetzner Docker Node Driver:v3.6.0](https://github.com/JonasProgrammer/docker-machine-driver-hetzner/releases/tag/3.6.0) and above (map)
        /// </summary>
        public InputMap<object> ServerLabels
        {
            get => _serverLabels ?? (_serverLabels = new InputMap<object>());
            set => _serverLabels = value;
        }

        /// <summary>
        /// Hetzner Cloud datacenter. Default `nbg1` (string)
        /// </summary>
        [Input("serverLocation")]
        public Input<string>? ServerLocation { get; set; }

        /// <summary>
        /// Hetzner Cloud server type. Default `cx11` (string)
        /// </summary>
        [Input("serverType")]
        public Input<string>? ServerType { get; set; }

        /// <summary>
        /// Use private network. Default `false` (bool)
        /// </summary>
        [Input("usePrivateNetwork")]
        public Input<bool>? UsePrivateNetwork { get; set; }

        /// <summary>
        /// Path to file with cloud-init user-data (string)
        /// </summary>
        [Input("userdata")]
        public Input<string>? Userdata { get; set; }

        /// <summary>
        /// Comma-separated list of volume IDs or names which should be attached to the server (string)
        /// </summary>
        [Input("volumes")]
        public Input<string>? Volumes { get; set; }

        public NodeTemplateHetznerConfigArgs()
        {
        }
    }
}
