// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2.Inputs
{

    public sealed class ClusterLoggingFluentdConfigFluentServerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Endpoint of the syslog service (string)
        /// </summary>
        [Input("endpoint", required: true)]
        public Input<string> Endpoint { get; set; } = null!;

        /// <summary>
        /// Hostname of the fluentd service (string)
        /// </summary>
        [Input("hostname")]
        public Input<string>? Hostname { get; set; }

        [Input("password")]
        private Input<string>? _password;

        /// <summary>
        /// User password of the fluentd service (string)
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("sharedKey")]
        private Input<string>? _sharedKey;

        /// <summary>
        /// Shared key of the fluentd service (string)
        /// </summary>
        public Input<string>? SharedKey
        {
            get => _sharedKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _sharedKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Standby server of the fluentd service (bool)
        /// </summary>
        [Input("standby")]
        public Input<bool>? Standby { get; set; }

        [Input("username")]
        private Input<string>? _username;

        /// <summary>
        /// Username of the fluentd service (string)
        /// </summary>
        public Input<string>? Username
        {
            get => _username;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _username = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Weight of the fluentd server (int)
        /// </summary>
        [Input("weight")]
        public Input<int>? Weight { get; set; }

        public ClusterLoggingFluentdConfigFluentServerArgs()
        {
        }
        public static new ClusterLoggingFluentdConfigFluentServerArgs Empty => new ClusterLoggingFluentdConfigFluentServerArgs();
    }
}
