// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2.Inputs
{

    public sealed class MachineConfigV2HarvesterConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// CPU count, Default `2` (string)
        /// </summary>
        [Input("cpuCount")]
        public Input<string>? CpuCount { get; set; }

        /// <summary>
        /// Use `disk_info` instead
        /// </summary>
        [Input("diskBus")]
        public Input<string>? DiskBus { get; set; }

        /// <summary>
        /// A JSON string specifying info for the disks e.g. `{\"disks\":[{\"imageName\":\"harvester-public/image-57hzg\",\"bootOrder\":1,\"size\":40},{\"storageClassName\":\"node-driver-test\",\"bootOrder\":2,\"size\":1}]}` (string)
        /// </summary>
        [Input("diskInfo", required: true)]
        public Input<string> DiskInfo { get; set; } = null!;

        /// <summary>
        /// Disk size if using managed disk. Just for Rancher v2.3.x and above. Default `30` (string)
        /// </summary>
        [Input("diskSize")]
        public Input<string>? DiskSize { get; set; }

        /// <summary>
        /// Use `disk_info` instead
        /// </summary>
        [Input("imageName")]
        public Input<string>? ImageName { get; set; }

        /// <summary>
        /// Memory size (in GiB), Default `4` (string)
        /// </summary>
        [Input("memorySize")]
        public Input<string>? MemorySize { get; set; }

        /// <summary>
        /// NetworkData content of cloud-init, base64 is supported (string)
        /// </summary>
        [Input("networkData")]
        public Input<string>? NetworkData { get; set; }

        /// <summary>
        /// A JSON string specifying info for the networks e.g. `{\"interfaces\":[{\"networkName\":\"harvester-public/vlan1\"},{\"networkName\":\"harvester-public/vlan2\"}]}` (string)
        /// </summary>
        [Input("networkInfo", required: true)]
        public Input<string> NetworkInfo { get; set; } = null!;

        /// <summary>
        /// Use `network_info` instead
        /// </summary>
        [Input("networkModel")]
        public Input<string>? NetworkModel { get; set; }

        /// <summary>
        /// Use `network_info` instead
        /// </summary>
        [Input("networkName")]
        public Input<string>? NetworkName { get; set; }

        [Input("sshPassword")]
        private Input<string>? _sshPassword;

        /// <summary>
        /// SSH password (string)
        /// </summary>
        public Input<string>? SshPassword
        {
            get => _sshPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _sshPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Set the name of the ssh user (string)
        /// </summary>
        [Input("sshUser", required: true)]
        public Input<string> SshUser { get; set; } = null!;

        /// <summary>
        /// UserData content of cloud-init, base64 is supported. If the image does not contain the qemu-guest-agent package, you must install and start qemu-guest-agent using userdata (string)
        /// </summary>
        [Input("userData")]
        public Input<string>? UserData { get; set; }

        /// <summary>
        /// Virtual machine affinity, only base64 format is supported. For Rancher v2.6.7 or above (string)
        /// </summary>
        [Input("vmAffinity")]
        public Input<string>? VmAffinity { get; set; }

        /// <summary>
        /// Virtual machine namespace e.g. `default` (string)
        /// </summary>
        [Input("vmNamespace", required: true)]
        public Input<string> VmNamespace { get; set; } = null!;

        public MachineConfigV2HarvesterConfigArgs()
        {
        }
        public static new MachineConfigV2HarvesterConfigArgs Empty => new MachineConfigV2HarvesterConfigArgs();
    }
}
