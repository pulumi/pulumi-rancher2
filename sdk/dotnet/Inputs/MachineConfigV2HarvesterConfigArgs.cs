// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2.Inputs
{

    public sealed class MachineConfigV2HarvesterConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// vSphere CPU number for docker VM. Default `2` (string)
        /// </summary>
        [Input("cpuCount")]
        public Input<string>? CpuCount { get; set; }

        /// <summary>
        /// Disk bus, Default `virtio` (string)
        /// </summary>
        [Input("diskBus")]
        public Input<string>? DiskBus { get; set; }

        /// <summary>
        /// vSphere size of disk for docker VM (in MB). Default `20480` (string)
        /// </summary>
        [Input("diskSize")]
        public Input<string>? DiskSize { get; set; }

        /// <summary>
        /// OpenStack image name to use for the instance. Conflicts with `image_id` (string)
        /// </summary>
        [Input("imageName", required: true)]
        public Input<string> ImageName { get; set; } = null!;

        /// <summary>
        /// vSphere size of memory for docker VM (in MB). Default `2048` (string)
        /// </summary>
        [Input("memorySize")]
        public Input<string>? MemorySize { get; set; }

        /// <summary>
        /// NetworkData content of cloud-init, base64 is supported (string)
        /// </summary>
        [Input("networkData")]
        public Input<string>? NetworkData { get; set; }

        /// <summary>
        /// Network model, Default `virtio` (string)
        /// </summary>
        [Input("networkModel")]
        public Input<string>? NetworkModel { get; set; }

        /// <summary>
        /// Network name e.g. `harvester-public/vlan1` (string)
        /// </summary>
        [Input("networkName", required: true)]
        public Input<string> NetworkName { get; set; } = null!;

        /// <summary>
        /// If using a non-B2D image you can specify the ssh password. Default `tcuser` (string)
        /// </summary>
        [Input("sshPassword")]
        public Input<string>? SshPassword { get; set; }

        /// <summary>
        /// If using a non-B2D image you can specify the ssh user. Default `docker`. (string)
        /// </summary>
        [Input("sshUser", required: true)]
        public Input<string> SshUser { get; set; } = null!;

        /// <summary>
        /// UserData content of cloud-init, base64 is supported (string)
        /// </summary>
        [Input("userData")]
        public Input<string>? UserData { get; set; }

        /// <summary>
        /// Virtual machine namespace e.g. `default` (string)
        /// </summary>
        [Input("vmNamespace", required: true)]
        public Input<string> VmNamespace { get; set; } = null!;

        public MachineConfigV2HarvesterConfigArgs()
        {
        }
    }
}
