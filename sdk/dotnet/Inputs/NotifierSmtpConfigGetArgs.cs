// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2.Inputs
{

    public sealed class NotifierSmtpConfigGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Wechat default recipient (string)
        /// </summary>
        [Input("defaultRecipient", required: true)]
        public Input<string> DefaultRecipient { get; set; } = null!;

        /// <summary>
        /// SMTP host (string)
        /// </summary>
        [Input("host", required: true)]
        public Input<string> Host { get; set; } = null!;

        [Input("password")]
        private Input<string>? _password;

        /// <summary>
        /// SMTP password (string)
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// SMTP port (int)
        /// </summary>
        [Input("port", required: true)]
        public Input<int> Port { get; set; } = null!;

        /// <summary>
        /// SMTP sender (string)
        /// </summary>
        [Input("sender", required: true)]
        public Input<string> Sender { get; set; } = null!;

        /// <summary>
        /// SMTP tls. Default `true` (bool)
        /// </summary>
        [Input("tls")]
        public Input<bool>? Tls { get; set; }

        /// <summary>
        /// SMTP username (string)
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public NotifierSmtpConfigGetArgs()
        {
        }
        public static new NotifierSmtpConfigGetArgs Empty => new NotifierSmtpConfigGetArgs();
    }
}
