// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2.Inputs
{

    public sealed class ProjectLoggingSplunkConfigArgs : global::Pulumi.ResourceArgs
    {
        [Input("certificate")]
        private Input<string>? _certificate;

        /// <summary>
        /// SSL certificate for the syslog service (string)
        /// </summary>
        public Input<string>? Certificate
        {
            get => _certificate;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _certificate = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("clientCert")]
        private Input<string>? _clientCert;

        /// <summary>
        /// SSL client certificate for the syslog service (string)
        /// </summary>
        public Input<string>? ClientCert
        {
            get => _clientCert;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientCert = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("clientKey")]
        private Input<string>? _clientKey;

        /// <summary>
        /// SSL client key for the syslog service (string)
        /// </summary>
        public Input<string>? ClientKey
        {
            get => _clientKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("clientKeyPass")]
        private Input<string>? _clientKeyPass;

        /// <summary>
        /// SSL client key password for the splunk service (string)
        /// </summary>
        public Input<string>? ClientKeyPass
        {
            get => _clientKeyPass;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientKeyPass = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Endpoint of the syslog service (string)
        /// </summary>
        [Input("endpoint", required: true)]
        public Input<string> Endpoint { get; set; } = null!;

        /// <summary>
        /// Index prefix for the splunk logs (string)
        /// </summary>
        [Input("index")]
        public Input<string>? Index { get; set; }

        /// <summary>
        /// Date format for the splunk logs (string)
        /// </summary>
        [Input("source")]
        public Input<string>? Source { get; set; }

        /// <summary>
        /// SSL verify for the syslog service (bool)
        /// </summary>
        [Input("sslVerify")]
        public Input<bool>? SslVerify { get; set; }

        [Input("token", required: true)]
        private Input<string>? _token;

        /// <summary>
        /// Token for the syslog service (string)
        /// </summary>
        public Input<string>? Token
        {
            get => _token;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _token = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public ProjectLoggingSplunkConfigArgs()
        {
        }
        public static new ProjectLoggingSplunkConfigArgs Empty => new ProjectLoggingSplunkConfigArgs();
    }
}
