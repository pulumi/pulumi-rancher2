// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2
{
    /// <summary>
    /// Provides a Rancher v2 Global Role resource. This can be used to create Global Role for Rancher v2 and retrieve their information.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Rancher2 = Pulumi.Rancher2;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Create a new rancher2 Global Role
    ///     var foo = new Rancher2.GlobalRole("foo", new()
    ///     {
    ///         Name = "foo",
    ///         NewUserDefault = true,
    ///         Description = "Terraform global role acceptance test",
    ///         Rules = new[]
    ///         {
    ///             new Rancher2.Inputs.GlobalRoleRuleArgs
    ///             {
    ///                 ApiGroups = new[]
    ///                 {
    ///                     "*",
    ///                 },
    ///                 Resources = new[]
    ///                 {
    ///                     "secrets",
    ///                 },
    ///                 Verbs = new[]
    ///                 {
    ///                     "create",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// Global Role can be imported using the Rancher Global Role ID
    /// 
    /// ```sh
    /// $ pulumi import rancher2:index/globalRole:GlobalRole foo &amp;lt;global_role_id&amp;gt;
    /// ```
    /// </summary>
    [Rancher2ResourceType("rancher2:index/globalRole:GlobalRole")]
    public partial class GlobalRole : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Annotations for global role object (map)
        /// </summary>
        [Output("annotations")]
        public Output<ImmutableDictionary<string, object>> Annotations { get; private set; } = null!;

        /// <summary>
        /// (Computed) Builtin global role (bool)
        /// </summary>
        [Output("builtin")]
        public Output<bool> Builtin { get; private set; } = null!;

        /// <summary>
        /// Global role description (string)
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Names of role templates whose permissions are granted by this global role in every cluster besides the local cluster
        /// </summary>
        [Output("inheritedClusterRoles")]
        public Output<ImmutableArray<string>> InheritedClusterRoles { get; private set; } = null!;

        /// <summary>
        /// Labels for global role object (map)
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, object>> Labels { get; private set; } = null!;

        /// <summary>
        /// Global role name (string)
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Whether or not this role should be added to new users. Default `false` (bool)
        /// </summary>
        [Output("newUserDefault")]
        public Output<bool?> NewUserDefault { get; private set; } = null!;

        /// <summary>
        /// Global role policy rules (list)
        /// </summary>
        [Output("rules")]
        public Output<ImmutableArray<Outputs.GlobalRoleRule>> Rules { get; private set; } = null!;


        /// <summary>
        /// Create a GlobalRole resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GlobalRole(string name, GlobalRoleArgs? args = null, CustomResourceOptions? options = null)
            : base("rancher2:index/globalRole:GlobalRole", name, args ?? new GlobalRoleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GlobalRole(string name, Input<string> id, GlobalRoleState? state = null, CustomResourceOptions? options = null)
            : base("rancher2:index/globalRole:GlobalRole", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GlobalRole resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GlobalRole Get(string name, Input<string> id, GlobalRoleState? state = null, CustomResourceOptions? options = null)
        {
            return new GlobalRole(name, id, state, options);
        }
    }

    public sealed class GlobalRoleArgs : global::Pulumi.ResourceArgs
    {
        [Input("annotations")]
        private InputMap<object>? _annotations;

        /// <summary>
        /// Annotations for global role object (map)
        /// </summary>
        public InputMap<object> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<object>());
            set => _annotations = value;
        }

        /// <summary>
        /// Global role description (string)
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("inheritedClusterRoles")]
        private InputList<string>? _inheritedClusterRoles;

        /// <summary>
        /// Names of role templates whose permissions are granted by this global role in every cluster besides the local cluster
        /// </summary>
        public InputList<string> InheritedClusterRoles
        {
            get => _inheritedClusterRoles ?? (_inheritedClusterRoles = new InputList<string>());
            set => _inheritedClusterRoles = value;
        }

        [Input("labels")]
        private InputMap<object>? _labels;

        /// <summary>
        /// Labels for global role object (map)
        /// </summary>
        public InputMap<object> Labels
        {
            get => _labels ?? (_labels = new InputMap<object>());
            set => _labels = value;
        }

        /// <summary>
        /// Global role name (string)
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Whether or not this role should be added to new users. Default `false` (bool)
        /// </summary>
        [Input("newUserDefault")]
        public Input<bool>? NewUserDefault { get; set; }

        [Input("rules")]
        private InputList<Inputs.GlobalRoleRuleArgs>? _rules;

        /// <summary>
        /// Global role policy rules (list)
        /// </summary>
        public InputList<Inputs.GlobalRoleRuleArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.GlobalRoleRuleArgs>());
            set => _rules = value;
        }

        public GlobalRoleArgs()
        {
        }
        public static new GlobalRoleArgs Empty => new GlobalRoleArgs();
    }

    public sealed class GlobalRoleState : global::Pulumi.ResourceArgs
    {
        [Input("annotations")]
        private InputMap<object>? _annotations;

        /// <summary>
        /// Annotations for global role object (map)
        /// </summary>
        public InputMap<object> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<object>());
            set => _annotations = value;
        }

        /// <summary>
        /// (Computed) Builtin global role (bool)
        /// </summary>
        [Input("builtin")]
        public Input<bool>? Builtin { get; set; }

        /// <summary>
        /// Global role description (string)
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("inheritedClusterRoles")]
        private InputList<string>? _inheritedClusterRoles;

        /// <summary>
        /// Names of role templates whose permissions are granted by this global role in every cluster besides the local cluster
        /// </summary>
        public InputList<string> InheritedClusterRoles
        {
            get => _inheritedClusterRoles ?? (_inheritedClusterRoles = new InputList<string>());
            set => _inheritedClusterRoles = value;
        }

        [Input("labels")]
        private InputMap<object>? _labels;

        /// <summary>
        /// Labels for global role object (map)
        /// </summary>
        public InputMap<object> Labels
        {
            get => _labels ?? (_labels = new InputMap<object>());
            set => _labels = value;
        }

        /// <summary>
        /// Global role name (string)
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Whether or not this role should be added to new users. Default `false` (bool)
        /// </summary>
        [Input("newUserDefault")]
        public Input<bool>? NewUserDefault { get; set; }

        [Input("rules")]
        private InputList<Inputs.GlobalRoleRuleGetArgs>? _rules;

        /// <summary>
        /// Global role policy rules (list)
        /// </summary>
        public InputList<Inputs.GlobalRoleRuleGetArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.GlobalRoleRuleGetArgs>());
            set => _rules = value;
        }

        public GlobalRoleState()
        {
        }
        public static new GlobalRoleState Empty => new GlobalRoleState();
    }
}
