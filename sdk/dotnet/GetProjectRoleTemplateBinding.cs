// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2
{
    public static partial class Invokes
    {
        /// <summary>
        /// Use this data source to retrieve information about a Rancher v2 project role template binding.
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-rancher2/blob/master/website/docs/d/projectRole.html.markdown.
        /// </summary>
        [Obsolete("Use GetProjectRoleTemplateBinding.InvokeAsync() instead")]
        public static Task<GetProjectRoleTemplateBindingResult> GetProjectRoleTemplateBinding(GetProjectRoleTemplateBindingArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetProjectRoleTemplateBindingResult>("rancher2:index/getProjectRoleTemplateBinding:getProjectRoleTemplateBinding", args ?? InvokeArgs.Empty, options.WithVersion());
    }
    public static class GetProjectRoleTemplateBinding
    {
        /// <summary>
        /// Use this data source to retrieve information about a Rancher v2 project role template binding.
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-rancher2/blob/master/website/docs/d/projectRole.html.markdown.
        /// </summary>
        public static Task<GetProjectRoleTemplateBindingResult> InvokeAsync(GetProjectRoleTemplateBindingArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetProjectRoleTemplateBindingResult>("rancher2:index/getProjectRoleTemplateBinding:getProjectRoleTemplateBinding", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetProjectRoleTemplateBindingArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the project role template binding (string)
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The project id where bind project role template (string)
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        /// <summary>
        /// The role template id from create project role template binding (string)
        /// </summary>
        [Input("roleTemplateId")]
        public string? RoleTemplateId { get; set; }

        public GetProjectRoleTemplateBindingArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetProjectRoleTemplateBindingResult
    {
        /// <summary>
        /// (Computed) Annotations of the resource (map)
        /// </summary>
        public readonly ImmutableDictionary<string, object> Annotations;
        /// <summary>
        /// (Computed) The group ID to assign project role template binding (string)
        /// </summary>
        public readonly string GroupId;
        /// <summary>
        /// (Computed) The group_principal ID to assign project role template binding (string)
        /// </summary>
        public readonly string GroupPrincipalId;
        /// <summary>
        /// (Computed) Labels of the resource (map)
        /// </summary>
        public readonly ImmutableDictionary<string, object> Labels;
        public readonly string Name;
        public readonly string ProjectId;
        public readonly string RoleTemplateId;
        /// <summary>
        /// (Computed) The user ID to assign project role template binding (string)
        /// </summary>
        public readonly string UserId;
        /// <summary>
        /// (Computed) The user_principal ID to assign project role template binding (string)
        /// </summary>
        public readonly string UserPrincipalId;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetProjectRoleTemplateBindingResult(
            ImmutableDictionary<string, object> annotations,
            string groupId,
            string groupPrincipalId,
            ImmutableDictionary<string, object> labels,
            string name,
            string projectId,
            string roleTemplateId,
            string userId,
            string userPrincipalId,
            string id)
        {
            Annotations = annotations;
            GroupId = groupId;
            GroupPrincipalId = groupPrincipalId;
            Labels = labels;
            Name = name;
            ProjectId = projectId;
            RoleTemplateId = roleTemplateId;
            UserId = userId;
            UserPrincipalId = userPrincipalId;
            Id = id;
        }
    }
}
