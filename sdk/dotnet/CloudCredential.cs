// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2
{
    /// <summary>
    /// Provides a Rancher v2 Cloud Credential resource. This can be used to create Cloud Credential for Rancher v2.2.x and retrieve their information.
    /// 
    /// amazonec2, azure, digitalocean, linode, openstack and vsphere credentials config are supported for Cloud Credential.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-rancher2/blob/master/website/docs/r/cloudCredential.html.markdown.
    /// </summary>
    public partial class CloudCredential : Pulumi.CustomResource
    {
        /// <summary>
        /// AWS config for the Cloud Credential (list maxitems:1)
        /// </summary>
        [Output("amazonec2CredentialConfig")]
        public Output<Outputs.CloudCredentialAmazonec2CredentialConfig?> Amazonec2CredentialConfig { get; private set; } = null!;

        /// <summary>
        /// Annotations for Cloud Credential object (map)
        /// </summary>
        [Output("annotations")]
        public Output<ImmutableDictionary<string, object>?> Annotations { get; private set; } = null!;

        /// <summary>
        /// Azure config for the Cloud Credential (list maxitems:1)
        /// </summary>
        [Output("azureCredentialConfig")]
        public Output<Outputs.CloudCredentialAzureCredentialConfig?> AzureCredentialConfig { get; private set; } = null!;

        /// <summary>
        /// Description for the Cloud Credential (string)
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// DigitalOcean config for the Cloud Credential (list maxitems:1)
        /// </summary>
        [Output("digitaloceanCredentialConfig")]
        public Output<Outputs.CloudCredentialDigitaloceanCredentialConfig?> DigitaloceanCredentialConfig { get; private set; } = null!;

        /// <summary>
        /// (Computed) The driver of the Cloud Credential (string)
        /// </summary>
        [Output("driver")]
        public Output<string> Driver { get; private set; } = null!;

        /// <summary>
        /// Labels for Cloud Credential object (map)
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, object>> Labels { get; private set; } = null!;

        /// <summary>
        /// Linode config for the Cloud Credential (list maxitems:1)
        /// </summary>
        [Output("linodeCredentialConfig")]
        public Output<Outputs.CloudCredentialLinodeCredentialConfig?> LinodeCredentialConfig { get; private set; } = null!;

        /// <summary>
        /// The name of the Cloud Credential (string)
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// OpenStack config for the Cloud Credential (list maxitems:1)
        /// </summary>
        [Output("openstackCredentialConfig")]
        public Output<Outputs.CloudCredentialOpenstackCredentialConfig?> OpenstackCredentialConfig { get; private set; } = null!;

        /// <summary>
        /// vSphere config for the Cloud Credential (list maxitems:1)
        /// </summary>
        [Output("vsphereCredentialConfig")]
        public Output<Outputs.CloudCredentialVsphereCredentialConfig?> VsphereCredentialConfig { get; private set; } = null!;


        /// <summary>
        /// Create a CloudCredential resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CloudCredential(string name, CloudCredentialArgs? args = null, CustomResourceOptions? options = null)
            : base("rancher2:index/cloudCredential:CloudCredential", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private CloudCredential(string name, Input<string> id, CloudCredentialState? state = null, CustomResourceOptions? options = null)
            : base("rancher2:index/cloudCredential:CloudCredential", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CloudCredential resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CloudCredential Get(string name, Input<string> id, CloudCredentialState? state = null, CustomResourceOptions? options = null)
        {
            return new CloudCredential(name, id, state, options);
        }
    }

    public sealed class CloudCredentialArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// AWS config for the Cloud Credential (list maxitems:1)
        /// </summary>
        [Input("amazonec2CredentialConfig")]
        public Input<Inputs.CloudCredentialAmazonec2CredentialConfigArgs>? Amazonec2CredentialConfig { get; set; }

        [Input("annotations")]
        private InputMap<object>? _annotations;

        /// <summary>
        /// Annotations for Cloud Credential object (map)
        /// </summary>
        public InputMap<object> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<object>());
            set => _annotations = value;
        }

        /// <summary>
        /// Azure config for the Cloud Credential (list maxitems:1)
        /// </summary>
        [Input("azureCredentialConfig")]
        public Input<Inputs.CloudCredentialAzureCredentialConfigArgs>? AzureCredentialConfig { get; set; }

        /// <summary>
        /// Description for the Cloud Credential (string)
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// DigitalOcean config for the Cloud Credential (list maxitems:1)
        /// </summary>
        [Input("digitaloceanCredentialConfig")]
        public Input<Inputs.CloudCredentialDigitaloceanCredentialConfigArgs>? DigitaloceanCredentialConfig { get; set; }

        [Input("labels")]
        private InputMap<object>? _labels;

        /// <summary>
        /// Labels for Cloud Credential object (map)
        /// </summary>
        public InputMap<object> Labels
        {
            get => _labels ?? (_labels = new InputMap<object>());
            set => _labels = value;
        }

        /// <summary>
        /// Linode config for the Cloud Credential (list maxitems:1)
        /// </summary>
        [Input("linodeCredentialConfig")]
        public Input<Inputs.CloudCredentialLinodeCredentialConfigArgs>? LinodeCredentialConfig { get; set; }

        /// <summary>
        /// The name of the Cloud Credential (string)
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// OpenStack config for the Cloud Credential (list maxitems:1)
        /// </summary>
        [Input("openstackCredentialConfig")]
        public Input<Inputs.CloudCredentialOpenstackCredentialConfigArgs>? OpenstackCredentialConfig { get; set; }

        /// <summary>
        /// vSphere config for the Cloud Credential (list maxitems:1)
        /// </summary>
        [Input("vsphereCredentialConfig")]
        public Input<Inputs.CloudCredentialVsphereCredentialConfigArgs>? VsphereCredentialConfig { get; set; }

        public CloudCredentialArgs()
        {
        }
    }

    public sealed class CloudCredentialState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// AWS config for the Cloud Credential (list maxitems:1)
        /// </summary>
        [Input("amazonec2CredentialConfig")]
        public Input<Inputs.CloudCredentialAmazonec2CredentialConfigGetArgs>? Amazonec2CredentialConfig { get; set; }

        [Input("annotations")]
        private InputMap<object>? _annotations;

        /// <summary>
        /// Annotations for Cloud Credential object (map)
        /// </summary>
        public InputMap<object> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<object>());
            set => _annotations = value;
        }

        /// <summary>
        /// Azure config for the Cloud Credential (list maxitems:1)
        /// </summary>
        [Input("azureCredentialConfig")]
        public Input<Inputs.CloudCredentialAzureCredentialConfigGetArgs>? AzureCredentialConfig { get; set; }

        /// <summary>
        /// Description for the Cloud Credential (string)
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// DigitalOcean config for the Cloud Credential (list maxitems:1)
        /// </summary>
        [Input("digitaloceanCredentialConfig")]
        public Input<Inputs.CloudCredentialDigitaloceanCredentialConfigGetArgs>? DigitaloceanCredentialConfig { get; set; }

        /// <summary>
        /// (Computed) The driver of the Cloud Credential (string)
        /// </summary>
        [Input("driver")]
        public Input<string>? Driver { get; set; }

        [Input("labels")]
        private InputMap<object>? _labels;

        /// <summary>
        /// Labels for Cloud Credential object (map)
        /// </summary>
        public InputMap<object> Labels
        {
            get => _labels ?? (_labels = new InputMap<object>());
            set => _labels = value;
        }

        /// <summary>
        /// Linode config for the Cloud Credential (list maxitems:1)
        /// </summary>
        [Input("linodeCredentialConfig")]
        public Input<Inputs.CloudCredentialLinodeCredentialConfigGetArgs>? LinodeCredentialConfig { get; set; }

        /// <summary>
        /// The name of the Cloud Credential (string)
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// OpenStack config for the Cloud Credential (list maxitems:1)
        /// </summary>
        [Input("openstackCredentialConfig")]
        public Input<Inputs.CloudCredentialOpenstackCredentialConfigGetArgs>? OpenstackCredentialConfig { get; set; }

        /// <summary>
        /// vSphere config for the Cloud Credential (list maxitems:1)
        /// </summary>
        [Input("vsphereCredentialConfig")]
        public Input<Inputs.CloudCredentialVsphereCredentialConfigGetArgs>? VsphereCredentialConfig { get; set; }

        public CloudCredentialState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class CloudCredentialAmazonec2CredentialConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// AWS access key (string)
        /// </summary>
        [Input("accessKey", required: true)]
        public Input<string> AccessKey { get; set; } = null!;

        /// <summary>
        /// AWS secret key (string)
        /// </summary>
        [Input("secretKey", required: true)]
        public Input<string> SecretKey { get; set; } = null!;

        public CloudCredentialAmazonec2CredentialConfigArgs()
        {
        }
    }

    public sealed class CloudCredentialAmazonec2CredentialConfigGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// AWS access key (string)
        /// </summary>
        [Input("accessKey", required: true)]
        public Input<string> AccessKey { get; set; } = null!;

        /// <summary>
        /// AWS secret key (string)
        /// </summary>
        [Input("secretKey", required: true)]
        public Input<string> SecretKey { get; set; } = null!;

        public CloudCredentialAmazonec2CredentialConfigGetArgs()
        {
        }
    }

    public sealed class CloudCredentialAzureCredentialConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Azure Service Principal Account ID (string)
        /// </summary>
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        /// <summary>
        /// Azure Service Principal Account password (string)
        /// </summary>
        [Input("clientSecret", required: true)]
        public Input<string> ClientSecret { get; set; } = null!;

        /// <summary>
        /// Azure Subscription ID (string)
        /// </summary>
        [Input("subscriptionId", required: true)]
        public Input<string> SubscriptionId { get; set; } = null!;

        public CloudCredentialAzureCredentialConfigArgs()
        {
        }
    }

    public sealed class CloudCredentialAzureCredentialConfigGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Azure Service Principal Account ID (string)
        /// </summary>
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        /// <summary>
        /// Azure Service Principal Account password (string)
        /// </summary>
        [Input("clientSecret", required: true)]
        public Input<string> ClientSecret { get; set; } = null!;

        /// <summary>
        /// Azure Subscription ID (string)
        /// </summary>
        [Input("subscriptionId", required: true)]
        public Input<string> SubscriptionId { get; set; } = null!;

        public CloudCredentialAzureCredentialConfigGetArgs()
        {
        }
    }

    public sealed class CloudCredentialDigitaloceanCredentialConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// DigitalOcean access token (string)
        /// </summary>
        [Input("accessToken", required: true)]
        public Input<string> AccessToken { get; set; } = null!;

        public CloudCredentialDigitaloceanCredentialConfigArgs()
        {
        }
    }

    public sealed class CloudCredentialDigitaloceanCredentialConfigGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// DigitalOcean access token (string)
        /// </summary>
        [Input("accessToken", required: true)]
        public Input<string> AccessToken { get; set; } = null!;

        public CloudCredentialDigitaloceanCredentialConfigGetArgs()
        {
        }
    }

    public sealed class CloudCredentialLinodeCredentialConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Linode API token (string)
        /// </summary>
        [Input("token", required: true)]
        public Input<string> Token { get; set; } = null!;

        public CloudCredentialLinodeCredentialConfigArgs()
        {
        }
    }

    public sealed class CloudCredentialLinodeCredentialConfigGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Linode API token (string)
        /// </summary>
        [Input("token", required: true)]
        public Input<string> Token { get; set; } = null!;

        public CloudCredentialLinodeCredentialConfigGetArgs()
        {
        }
    }

    public sealed class CloudCredentialOpenstackCredentialConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// vSphere password (string)
        /// </summary>
        [Input("password", required: true)]
        public Input<string> Password { get; set; } = null!;

        public CloudCredentialOpenstackCredentialConfigArgs()
        {
        }
    }

    public sealed class CloudCredentialOpenstackCredentialConfigGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// vSphere password (string)
        /// </summary>
        [Input("password", required: true)]
        public Input<string> Password { get; set; } = null!;

        public CloudCredentialOpenstackCredentialConfigGetArgs()
        {
        }
    }

    public sealed class CloudCredentialVsphereCredentialConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// vSphere password (string)
        /// </summary>
        [Input("password", required: true)]
        public Input<string> Password { get; set; } = null!;

        /// <summary>
        /// vSphere username (string)
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        /// <summary>
        /// vSphere IP/hostname for vCenter (string)
        /// </summary>
        [Input("vcenter", required: true)]
        public Input<string> Vcenter { get; set; } = null!;

        /// <summary>
        /// vSphere Port for vCenter. Default `443` (string)
        /// </summary>
        [Input("vcenterPort")]
        public Input<string>? VcenterPort { get; set; }

        public CloudCredentialVsphereCredentialConfigArgs()
        {
        }
    }

    public sealed class CloudCredentialVsphereCredentialConfigGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// vSphere password (string)
        /// </summary>
        [Input("password", required: true)]
        public Input<string> Password { get; set; } = null!;

        /// <summary>
        /// vSphere username (string)
        /// </summary>
        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        /// <summary>
        /// vSphere IP/hostname for vCenter (string)
        /// </summary>
        [Input("vcenter", required: true)]
        public Input<string> Vcenter { get; set; } = null!;

        /// <summary>
        /// vSphere Port for vCenter. Default `443` (string)
        /// </summary>
        [Input("vcenterPort")]
        public Input<string>? VcenterPort { get; set; }

        public CloudCredentialVsphereCredentialConfigGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class CloudCredentialAmazonec2CredentialConfig
    {
        /// <summary>
        /// AWS access key (string)
        /// </summary>
        public readonly string AccessKey;
        /// <summary>
        /// AWS secret key (string)
        /// </summary>
        public readonly string SecretKey;

        [OutputConstructor]
        private CloudCredentialAmazonec2CredentialConfig(
            string accessKey,
            string secretKey)
        {
            AccessKey = accessKey;
            SecretKey = secretKey;
        }
    }

    [OutputType]
    public sealed class CloudCredentialAzureCredentialConfig
    {
        /// <summary>
        /// Azure Service Principal Account ID (string)
        /// </summary>
        public readonly string ClientId;
        /// <summary>
        /// Azure Service Principal Account password (string)
        /// </summary>
        public readonly string ClientSecret;
        /// <summary>
        /// Azure Subscription ID (string)
        /// </summary>
        public readonly string SubscriptionId;

        [OutputConstructor]
        private CloudCredentialAzureCredentialConfig(
            string clientId,
            string clientSecret,
            string subscriptionId)
        {
            ClientId = clientId;
            ClientSecret = clientSecret;
            SubscriptionId = subscriptionId;
        }
    }

    [OutputType]
    public sealed class CloudCredentialDigitaloceanCredentialConfig
    {
        /// <summary>
        /// DigitalOcean access token (string)
        /// </summary>
        public readonly string AccessToken;

        [OutputConstructor]
        private CloudCredentialDigitaloceanCredentialConfig(string accessToken)
        {
            AccessToken = accessToken;
        }
    }

    [OutputType]
    public sealed class CloudCredentialLinodeCredentialConfig
    {
        /// <summary>
        /// Linode API token (string)
        /// </summary>
        public readonly string Token;

        [OutputConstructor]
        private CloudCredentialLinodeCredentialConfig(string token)
        {
            Token = token;
        }
    }

    [OutputType]
    public sealed class CloudCredentialOpenstackCredentialConfig
    {
        /// <summary>
        /// vSphere password (string)
        /// </summary>
        public readonly string Password;

        [OutputConstructor]
        private CloudCredentialOpenstackCredentialConfig(string password)
        {
            Password = password;
        }
    }

    [OutputType]
    public sealed class CloudCredentialVsphereCredentialConfig
    {
        /// <summary>
        /// vSphere password (string)
        /// </summary>
        public readonly string Password;
        /// <summary>
        /// vSphere username (string)
        /// </summary>
        public readonly string Username;
        /// <summary>
        /// vSphere IP/hostname for vCenter (string)
        /// </summary>
        public readonly string Vcenter;
        /// <summary>
        /// vSphere Port for vCenter. Default `443` (string)
        /// </summary>
        public readonly string? VcenterPort;

        [OutputConstructor]
        private CloudCredentialVsphereCredentialConfig(
            string password,
            string username,
            string vcenter,
            string? vcenterPort)
        {
            Password = password;
            Username = username;
            Vcenter = vcenter;
            VcenterPort = vcenterPort;
        }
    }
    }
}
