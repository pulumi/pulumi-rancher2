// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2.Outputs
{

    [OutputType]
    public sealed class ClusterV2RkeConfig
    {
        /// <summary>
        /// Cluster V2 additional manifest (string)
        /// </summary>
        public readonly string? AdditionalManifest;
        /// <summary>
        /// Cluster V2 chart values. Must be in YAML format (string)
        /// </summary>
        public readonly string? ChartValues;
        /// <summary>
        /// Cluster V2 etcd (list maxitems:1)
        /// </summary>
        public readonly Outputs.ClusterV2RkeConfigEtcd? Etcd;
        /// <summary>
        /// Cluster V2 etcd snapshot create (list maxitems:1)
        /// </summary>
        public readonly Outputs.ClusterV2RkeConfigEtcdSnapshotCreate? EtcdSnapshotCreate;
        /// <summary>
        /// Cluster V2 etcd snapshot restore (list maxitems:1)
        /// </summary>
        public readonly Outputs.ClusterV2RkeConfigEtcdSnapshotRestore? EtcdSnapshotRestore;
        /// <summary>
        /// Use rancher2_cluster_v2.local_auth_endpoint instead
        /// </summary>
        public readonly Outputs.ClusterV2RkeConfigLocalAuthEndpoint? LocalAuthEndpoint;
        /// <summary>
        /// Cluster V2 machine global config. Must be in YAML format (string)
        /// </summary>
        public readonly string? MachineGlobalConfig;
        /// <summary>
        /// Cluster V2 machine pools (list)
        /// </summary>
        public readonly ImmutableArray<Outputs.ClusterV2RkeConfigMachinePool> MachinePools;
        /// <summary>
        /// Cluster V2 machine selector config (list)
        /// </summary>
        public readonly ImmutableArray<Outputs.ClusterV2RkeConfigMachineSelectorConfig> MachineSelectorConfigs;
        /// <summary>
        /// Cluster V2 docker registries (list maxitems:1)
        /// </summary>
        public readonly Outputs.ClusterV2RkeConfigRegistries? Registries;
        /// <summary>
        /// Cluster V2 certificate rotation (list maxitems:1)
        /// </summary>
        public readonly Outputs.ClusterV2RkeConfigRotateCertificates? RotateCertificates;
        /// <summary>
        /// Cluster V2 upgrade strategy (list maxitems:1)
        /// </summary>
        public readonly Outputs.ClusterV2RkeConfigUpgradeStrategy? UpgradeStrategy;

        [OutputConstructor]
        private ClusterV2RkeConfig(
            string? additionalManifest,

            string? chartValues,

            Outputs.ClusterV2RkeConfigEtcd? etcd,

            Outputs.ClusterV2RkeConfigEtcdSnapshotCreate? etcdSnapshotCreate,

            Outputs.ClusterV2RkeConfigEtcdSnapshotRestore? etcdSnapshotRestore,

            Outputs.ClusterV2RkeConfigLocalAuthEndpoint? localAuthEndpoint,

            string? machineGlobalConfig,

            ImmutableArray<Outputs.ClusterV2RkeConfigMachinePool> machinePools,

            ImmutableArray<Outputs.ClusterV2RkeConfigMachineSelectorConfig> machineSelectorConfigs,

            Outputs.ClusterV2RkeConfigRegistries? registries,

            Outputs.ClusterV2RkeConfigRotateCertificates? rotateCertificates,

            Outputs.ClusterV2RkeConfigUpgradeStrategy? upgradeStrategy)
        {
            AdditionalManifest = additionalManifest;
            ChartValues = chartValues;
            Etcd = etcd;
            EtcdSnapshotCreate = etcdSnapshotCreate;
            EtcdSnapshotRestore = etcdSnapshotRestore;
            LocalAuthEndpoint = localAuthEndpoint;
            MachineGlobalConfig = machineGlobalConfig;
            MachinePools = machinePools;
            MachineSelectorConfigs = machineSelectorConfigs;
            Registries = registries;
            RotateCertificates = rotateCertificates;
            UpgradeStrategy = upgradeStrategy;
        }
    }
}
