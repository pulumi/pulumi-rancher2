// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2.Outputs
{

    [OutputType]
    public sealed class ClusterV2RkeConfig
    {
        /// <summary>
        /// Cluster V2 additional manifest
        /// </summary>
        public readonly string? AdditionalManifest;
        /// <summary>
        /// Cluster V2 chart values. It should be in YAML format
        /// </summary>
        public readonly string? ChartValues;
        /// <summary>
        /// Cluster V2 etcd
        /// </summary>
        public readonly Outputs.ClusterV2RkeConfigEtcd? Etcd;
        /// <summary>
        /// Cluster V2 etcd snapshot create
        /// </summary>
        public readonly Outputs.ClusterV2RkeConfigEtcdSnapshotCreate? EtcdSnapshotCreate;
        /// <summary>
        /// Cluster V2 etcd snapshot restore
        /// </summary>
        public readonly Outputs.ClusterV2RkeConfigEtcdSnapshotRestore? EtcdSnapshotRestore;
        /// <summary>
        /// Local auth endpoint configures the Authorized Cluster Endpoint (ACE) which can be used to directly access the Kubernetes API server, without requiring communication through Rancher. For more information, please refer to [Rancher Documentation](https://ranchermanager.docs.rancher.com/how-to-guides/new-user-guides/kubernetes-clusters-in-rancher-setup/register-existing-clusters#authorized-cluster-endpoint-support-for-rke2-and-k3s-clusters).
        /// </summary>
        public readonly Outputs.ClusterV2RkeConfigLocalAuthEndpoint? LocalAuthEndpoint;
        /// <summary>
        /// Cluster V2 machine global config
        /// </summary>
        public readonly string? MachineGlobalConfig;
        /// <summary>
        /// Default values for machine pool configurations if unset
        /// </summary>
        public readonly ImmutableArray<Outputs.ClusterV2RkeConfigMachinePoolDefault> MachinePoolDefaults;
        /// <summary>
        /// Cluster V2 machine pools
        /// </summary>
        public readonly ImmutableArray<Outputs.ClusterV2RkeConfigMachinePool> MachinePools;
        /// <summary>
        /// Cluster V2 machine selector config
        /// </summary>
        public readonly ImmutableArray<Outputs.ClusterV2RkeConfigMachineSelectorConfig> MachineSelectorConfigs;
        /// <summary>
        /// Cluster V2 machine selector files
        /// </summary>
        public readonly ImmutableArray<Outputs.ClusterV2RkeConfigMachineSelectorFile> MachineSelectorFiles;
        /// <summary>
        /// Cluster V2 registries
        /// </summary>
        public readonly Outputs.ClusterV2RkeConfigRegistries? Registries;
        /// <summary>
        /// Cluster V2 certificate rotation
        /// </summary>
        public readonly Outputs.ClusterV2RkeConfigRotateCertificates? RotateCertificates;
        /// <summary>
        /// Cluster V2 upgrade strategy
        /// </summary>
        public readonly Outputs.ClusterV2RkeConfigUpgradeStrategy? UpgradeStrategy;

        [OutputConstructor]
        private ClusterV2RkeConfig(
            string? additionalManifest,

            string? chartValues,

            Outputs.ClusterV2RkeConfigEtcd? etcd,

            Outputs.ClusterV2RkeConfigEtcdSnapshotCreate? etcdSnapshotCreate,

            Outputs.ClusterV2RkeConfigEtcdSnapshotRestore? etcdSnapshotRestore,

            Outputs.ClusterV2RkeConfigLocalAuthEndpoint? localAuthEndpoint,

            string? machineGlobalConfig,

            ImmutableArray<Outputs.ClusterV2RkeConfigMachinePoolDefault> machinePoolDefaults,

            ImmutableArray<Outputs.ClusterV2RkeConfigMachinePool> machinePools,

            ImmutableArray<Outputs.ClusterV2RkeConfigMachineSelectorConfig> machineSelectorConfigs,

            ImmutableArray<Outputs.ClusterV2RkeConfigMachineSelectorFile> machineSelectorFiles,

            Outputs.ClusterV2RkeConfigRegistries? registries,

            Outputs.ClusterV2RkeConfigRotateCertificates? rotateCertificates,

            Outputs.ClusterV2RkeConfigUpgradeStrategy? upgradeStrategy)
        {
            AdditionalManifest = additionalManifest;
            ChartValues = chartValues;
            Etcd = etcd;
            EtcdSnapshotCreate = etcdSnapshotCreate;
            EtcdSnapshotRestore = etcdSnapshotRestore;
            LocalAuthEndpoint = localAuthEndpoint;
            MachineGlobalConfig = machineGlobalConfig;
            MachinePoolDefaults = machinePoolDefaults;
            MachinePools = machinePools;
            MachineSelectorConfigs = machineSelectorConfigs;
            MachineSelectorFiles = machineSelectorFiles;
            Registries = registries;
            RotateCertificates = rotateCertificates;
            UpgradeStrategy = upgradeStrategy;
        }
    }
}
