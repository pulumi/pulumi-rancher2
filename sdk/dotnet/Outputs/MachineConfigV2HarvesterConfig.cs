// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2.Outputs
{

    [OutputType]
    public sealed class MachineConfigV2HarvesterConfig
    {
        /// <summary>
        /// vSphere CPU number for docker VM. Default `2` (string)
        /// </summary>
        public readonly string? CpuCount;
        /// <summary>
        /// (Deprecated) Use `disk_info` instead
        /// </summary>
        public readonly string? DiskBus;
        /// <summary>
        /// A JSON string specifying info for the disks e.g. `{\"disks\":[{\"imageName\":\"harvester-public/image-57hzg\",\"bootOrder\":1,\"size\":40},{\"storageClassName\":\"node-driver-test\",\"bootOrder\":2,\"size\":1}]}` (string)
        /// </summary>
        public readonly string? DiskInfo;
        /// <summary>
        /// vSphere size of disk for docker VM (in MB). Default `20480` (string)
        /// </summary>
        public readonly string? DiskSize;
        /// <summary>
        /// OpenStack image name to use for the instance. Conflicts with `image_id` (string)
        /// </summary>
        public readonly string? ImageName;
        /// <summary>
        /// vSphere size of memory for docker VM (in MB). Default `2048` (string)
        /// </summary>
        public readonly string? MemorySize;
        /// <summary>
        /// NetworkData content of cloud-init, base64 is supported (string)
        /// </summary>
        public readonly string? NetworkData;
        /// <summary>
        /// A JSON string specifying info for the networks e.g. `{\"interfaces\":[{\"networkName\":\"harvester-public/vlan1\"},{\"networkName\":\"harvester-public/vlan2\"}]}` (string)
        /// </summary>
        public readonly string? NetworkInfo;
        /// <summary>
        /// (Deprecated) Use `network_info` instead
        /// </summary>
        public readonly string? NetworkModel;
        /// <summary>
        /// (Deprecated) Use `network_info` instead
        /// </summary>
        public readonly string? NetworkName;
        /// <summary>
        /// If using a non-B2D image you can specify the ssh password. Default `tcuser` (string)
        /// </summary>
        public readonly string? SshPassword;
        /// <summary>
        /// If using a non-B2D image you can specify the ssh user. Default `docker`. (string)
        /// </summary>
        public readonly string SshUser;
        /// <summary>
        /// UserData content of cloud-init, base64 is supported. If the image does not contain the qemu-guest-agent package, you must install and start qemu-guest-agent using userdata (string)
        /// </summary>
        public readonly string? UserData;
        /// <summary>
        /// Virtual machine affinity, only base64 format is supported. For Rancher v2.6.7 and above (string)
        /// </summary>
        public readonly string? VmAffinity;
        /// <summary>
        /// Virtual machine namespace e.g. `default` (string)
        /// </summary>
        public readonly string VmNamespace;

        [OutputConstructor]
        private MachineConfigV2HarvesterConfig(
            string? cpuCount,

            string? diskBus,

            string? diskInfo,

            string? diskSize,

            string? imageName,

            string? memorySize,

            string? networkData,

            string? networkInfo,

            string? networkModel,

            string? networkName,

            string? sshPassword,

            string sshUser,

            string? userData,

            string? vmAffinity,

            string vmNamespace)
        {
            CpuCount = cpuCount;
            DiskBus = diskBus;
            DiskInfo = diskInfo;
            DiskSize = diskSize;
            ImageName = imageName;
            MemorySize = memorySize;
            NetworkData = networkData;
            NetworkInfo = networkInfo;
            NetworkModel = networkModel;
            NetworkName = networkName;
            SshPassword = sshPassword;
            SshUser = sshUser;
            UserData = userData;
            VmAffinity = vmAffinity;
            VmNamespace = vmNamespace;
        }
    }
}
