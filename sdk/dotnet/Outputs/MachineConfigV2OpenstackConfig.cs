// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2.Outputs
{

    [OutputType]
    public sealed class MachineConfigV2OpenstackConfig
    {
        public readonly string? ActiveTimeout;
        public readonly string? ApplicationCredentialId;
        public readonly string? ApplicationCredentialName;
        public readonly string? ApplicationCredentialSecret;
        public readonly string AuthUrl;
        public readonly string AvailabilityZone;
        public readonly bool? BootFromVolume;
        public readonly string? Cacert;
        public readonly bool? ConfigDrive;
        public readonly string? DomainId;
        public readonly string? DomainName;
        public readonly string? EndpointType;
        public readonly string? FlavorId;
        public readonly string? FlavorName;
        public readonly string? FloatingIpPool;
        public readonly string? ImageId;
        public readonly string? ImageName;
        public readonly bool? Insecure;
        public readonly string? IpVersion;
        public readonly string? KeypairName;
        public readonly string? NetId;
        public readonly string? NetName;
        public readonly bool? NovaNetwork;
        public readonly string? Password;
        public readonly string? PrivateKeyFile;
        public readonly string Region;
        public readonly string? SecGroups;
        public readonly string? SshPort;
        public readonly string? SshUser;
        public readonly string? TenantDomainId;
        public readonly string? TenantDomainName;
        public readonly string? TenantId;
        public readonly string? TenantName;
        public readonly string? UserDataFile;
        public readonly string? UserDomainId;
        public readonly string? UserDomainName;
        public readonly string? Username;
        public readonly string? VolumeDevicePath;
        public readonly string? VolumeId;
        public readonly string? VolumeName;
        public readonly string? VolumeSize;
        public readonly string? VolumeType;

        [OutputConstructor]
        private MachineConfigV2OpenstackConfig(
            string? activeTimeout,

            string? applicationCredentialId,

            string? applicationCredentialName,

            string? applicationCredentialSecret,

            string authUrl,

            string availabilityZone,

            bool? bootFromVolume,

            string? cacert,

            bool? configDrive,

            string? domainId,

            string? domainName,

            string? endpointType,

            string? flavorId,

            string? flavorName,

            string? floatingIpPool,

            string? imageId,

            string? imageName,

            bool? insecure,

            string? ipVersion,

            string? keypairName,

            string? netId,

            string? netName,

            bool? novaNetwork,

            string? password,

            string? privateKeyFile,

            string region,

            string? secGroups,

            string? sshPort,

            string? sshUser,

            string? tenantDomainId,

            string? tenantDomainName,

            string? tenantId,

            string? tenantName,

            string? userDataFile,

            string? userDomainId,

            string? userDomainName,

            string? username,

            string? volumeDevicePath,

            string? volumeId,

            string? volumeName,

            string? volumeSize,

            string? volumeType)
        {
            ActiveTimeout = activeTimeout;
            ApplicationCredentialId = applicationCredentialId;
            ApplicationCredentialName = applicationCredentialName;
            ApplicationCredentialSecret = applicationCredentialSecret;
            AuthUrl = authUrl;
            AvailabilityZone = availabilityZone;
            BootFromVolume = bootFromVolume;
            Cacert = cacert;
            ConfigDrive = configDrive;
            DomainId = domainId;
            DomainName = domainName;
            EndpointType = endpointType;
            FlavorId = flavorId;
            FlavorName = flavorName;
            FloatingIpPool = floatingIpPool;
            ImageId = imageId;
            ImageName = imageName;
            Insecure = insecure;
            IpVersion = ipVersion;
            KeypairName = keypairName;
            NetId = netId;
            NetName = netName;
            NovaNetwork = novaNetwork;
            Password = password;
            PrivateKeyFile = privateKeyFile;
            Region = region;
            SecGroups = secGroups;
            SshPort = sshPort;
            SshUser = sshUser;
            TenantDomainId = tenantDomainId;
            TenantDomainName = tenantDomainName;
            TenantId = tenantId;
            TenantName = tenantName;
            UserDataFile = userDataFile;
            UserDomainId = userDomainId;
            UserDomainName = userDomainName;
            Username = username;
            VolumeDevicePath = volumeDevicePath;
            VolumeId = volumeId;
            VolumeName = volumeName;
            VolumeSize = volumeSize;
            VolumeType = volumeType;
        }
    }
}
