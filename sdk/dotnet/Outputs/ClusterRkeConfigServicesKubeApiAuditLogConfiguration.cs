// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2.Outputs
{

    [OutputType]
    public sealed class ClusterRkeConfigServicesKubeApiAuditLogConfiguration
    {
        /// <summary>
        /// Audit log format. Default: 'json' (string)
        /// </summary>
        public readonly string? Format;
        /// <summary>
        /// Audit log max age. Default: `30` (int)
        /// </summary>
        public readonly int? MaxAge;
        /// <summary>
        /// Audit log max backup. Default: `10` (int)
        /// </summary>
        public readonly int? MaxBackup;
        /// <summary>
        /// The EKS node group maximum size. Default `2` (int)
        /// </summary>
        public readonly int? MaxSize;
        /// <summary>
        /// (Optional) Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)
        /// </summary>
        public readonly string? Path;
        /// <summary>
        /// Audit policy yaml encoded definition. `apiVersion` and `kind: Policy\nrules:"` fields are required in the yaml. [More info](https://rancher.com/docs/rke/latest/en/config-options/audit-log/) (string) Ex:
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public readonly string? Policy;

        [OutputConstructor]
        private ClusterRkeConfigServicesKubeApiAuditLogConfiguration(
            string? format,

            int? maxAge,

            int? maxBackup,

            int? maxSize,

            string? path,

            string? policy)
        {
            Format = format;
            MaxAge = maxAge;
            MaxBackup = maxBackup;
            MaxSize = maxSize;
            Path = path;
            Policy = policy;
        }
    }
}
