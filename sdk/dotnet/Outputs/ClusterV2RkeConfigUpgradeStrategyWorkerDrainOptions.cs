// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2.Outputs
{

    [OutputType]
    public sealed class ClusterV2RkeConfigUpgradeStrategyWorkerDrainOptions
    {
        /// <summary>
        /// if `delete_empty_dir_data` is set to true, continue draining even if there are pods using emptyDir (local storage).
        /// </summary>
        public readonly bool? DeleteEmptyDirData;
        /// <summary>
        /// If `disable_eviction` is set to true, force drain to use delete rather than evict.
        /// </summary>
        public readonly bool? DisableEviction;
        /// <summary>
        /// If `enabled` is set to true, nodes will be drained before upgrade.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// If `force` is set to true, drain nodes even if there are standalone pods that are not managed by a ReplicationController, Job, or DaemonSet. Drain will not proceed without `force` set to true if there are such pods.
        /// </summary>
        public readonly bool? Force;
        /// <summary>
        /// Time in seconds given to each pod to terminate gracefully. If negative, the default value specified in the pod will be used.
        /// </summary>
        public readonly int? GracePeriod;
        /// <summary>
        /// If `ignore_daemon_sets` is set to false, drain will not proceed if there are DaemonSet-managed pods.
        /// </summary>
        public readonly bool? IgnoreDaemonSets;
        /// <summary>
        /// If `ignore_errors` is set to true,  errors that occurred between drain nodes in group are ignored.
        /// </summary>
        public readonly bool? IgnoreErrors;
        /// <summary>
        /// Skip waiting for the pods that have a DeletionTimeStamp &gt; N seconds to be deleted. Seconds must be greater than 0 to skip. Such pods will be force deleted.
        /// </summary>
        public readonly int? SkipWaitForDeleteTimeoutSeconds;
        /// <summary>
        /// Time to wait (in seconds) before giving up for one try.
        /// </summary>
        public readonly int? Timeout;

        [OutputConstructor]
        private ClusterV2RkeConfigUpgradeStrategyWorkerDrainOptions(
            bool? deleteEmptyDirData,

            bool? disableEviction,

            bool? enabled,

            bool? force,

            int? gracePeriod,

            bool? ignoreDaemonSets,

            bool? ignoreErrors,

            int? skipWaitForDeleteTimeoutSeconds,

            int? timeout)
        {
            DeleteEmptyDirData = deleteEmptyDirData;
            DisableEviction = disableEviction;
            Enabled = enabled;
            Force = force;
            GracePeriod = gracePeriod;
            IgnoreDaemonSets = ignoreDaemonSets;
            IgnoreErrors = ignoreErrors;
            SkipWaitForDeleteTimeoutSeconds = skipWaitForDeleteTimeoutSeconds;
            Timeout = timeout;
        }
    }
}
