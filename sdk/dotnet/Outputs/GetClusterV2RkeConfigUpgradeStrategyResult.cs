// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2.Outputs
{

    [OutputType]
    public sealed class GetClusterV2RkeConfigUpgradeStrategyResult
    {
        /// <summary>
        /// How many controlplane nodes should be upgrade at time, 0 is infinite. Percentages are also accepted
        /// </summary>
        public readonly string? ControlPlaneConcurrency;
        /// <summary>
        /// Controlplane nodes drain options
        /// </summary>
        public readonly Outputs.GetClusterV2RkeConfigUpgradeStrategyControlPlaneDrainOptionsResult? ControlPlaneDrainOptions;
        /// <summary>
        /// How many worker nodes should be upgrade at time
        /// </summary>
        public readonly string? WorkerConcurrency;
        /// <summary>
        /// Worker nodes drain options
        /// </summary>
        public readonly Outputs.GetClusterV2RkeConfigUpgradeStrategyWorkerDrainOptionsResult? WorkerDrainOptions;

        [OutputConstructor]
        private GetClusterV2RkeConfigUpgradeStrategyResult(
            string? controlPlaneConcurrency,

            Outputs.GetClusterV2RkeConfigUpgradeStrategyControlPlaneDrainOptionsResult? controlPlaneDrainOptions,

            string? workerConcurrency,

            Outputs.GetClusterV2RkeConfigUpgradeStrategyWorkerDrainOptionsResult? workerDrainOptions)
        {
            ControlPlaneConcurrency = controlPlaneConcurrency;
            ControlPlaneDrainOptions = controlPlaneDrainOptions;
            WorkerConcurrency = workerConcurrency;
            WorkerDrainOptions = workerDrainOptions;
        }
    }
}
