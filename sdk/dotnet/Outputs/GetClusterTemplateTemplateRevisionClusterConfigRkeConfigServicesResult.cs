// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2.Outputs
{

    [OutputType]
    public sealed class GetClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesResult
    {
        public readonly Outputs.GetClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesEtcdResult Etcd;
        public readonly Outputs.GetClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesKubeApiResult KubeApi;
        public readonly Outputs.GetClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesKubeControllerResult KubeController;
        public readonly Outputs.GetClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesKubeletResult Kubelet;
        public readonly Outputs.GetClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesKubeproxyResult Kubeproxy;
        public readonly Outputs.GetClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesSchedulerResult Scheduler;

        [OutputConstructor]
        private GetClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesResult(
            Outputs.GetClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesEtcdResult etcd,

            Outputs.GetClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesKubeApiResult kubeApi,

            Outputs.GetClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesKubeControllerResult kubeController,

            Outputs.GetClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesKubeletResult kubelet,

            Outputs.GetClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesKubeproxyResult kubeproxy,

            Outputs.GetClusterTemplateTemplateRevisionClusterConfigRkeConfigServicesSchedulerResult scheduler)
        {
            Etcd = etcd;
            KubeApi = kubeApi;
            KubeController = kubeController;
            Kubelet = kubelet;
            Kubeproxy = kubeproxy;
            Scheduler = scheduler;
        }
    }
}
