// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2.Outputs
{

    [OutputType]
    public sealed class ClusterRkeConfigCloudProviderAwsCloudProviderGlobal
    {
        /// <summary>
        /// Default `false` (bool)
        /// </summary>
        public readonly bool? DisableSecurityGroupIngress;
        /// <summary>
        /// Default `false` (bool)
        /// </summary>
        public readonly bool? DisableStrictZoneCheck;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? ElbSecurityGroup;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? KubernetesClusterId;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? KubernetesClusterTag;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? RoleArn;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? RouteTableId;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? SubnetId;
        /// <summary>
        /// (string)
        /// </summary>
        public readonly string? Vpc;
        /// <summary>
        /// Zone GKE cluster (string)
        /// </summary>
        public readonly string? Zone;

        [OutputConstructor]
        private ClusterRkeConfigCloudProviderAwsCloudProviderGlobal(
            bool? disableSecurityGroupIngress,

            bool? disableStrictZoneCheck,

            string? elbSecurityGroup,

            string? kubernetesClusterId,

            string? kubernetesClusterTag,

            string? roleArn,

            string? routeTableId,

            string? subnetId,

            string? vpc,

            string? zone)
        {
            DisableSecurityGroupIngress = disableSecurityGroupIngress;
            DisableStrictZoneCheck = disableStrictZoneCheck;
            ElbSecurityGroup = elbSecurityGroup;
            KubernetesClusterId = kubernetesClusterId;
            KubernetesClusterTag = kubernetesClusterTag;
            RoleArn = roleArn;
            RouteTableId = routeTableId;
            SubnetId = subnetId;
            Vpc = vpc;
            Zone = zone;
        }
    }
}
