// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2.Outputs
{

    [OutputType]
    public sealed class ClusterAksConfig
    {
        /// <summary>
        /// The secret of an Azure Active Directory server application (string)
        /// </summary>
        public readonly string? AadServerAppSecret;
        /// <summary>
        /// The ID of an Azure Active Directory tenant (string)
        /// </summary>
        public readonly string? AadTenantId;
        /// <summary>
        /// The ID of an Azure Active Directory client application of type \"Native\". This application is for user login via kubectl (string)
        /// </summary>
        public readonly string? AddClientAppId;
        /// <summary>
        /// The ID of an Azure Active Directory server application of type \"Web app/API\". This application represents the managed cluster's apiserver (Server application) (string)
        /// </summary>
        public readonly string? AddServerAppId;
        /// <summary>
        /// The administrator username to use for Linux hosts. Default `azureuser` (string)
        /// </summary>
        public readonly string? AdminUsername;
        /// <summary>
        /// DNS prefix to be used to create the FQDN for the agent pool (string)
        /// </summary>
        public readonly string AgentDnsPrefix;
        /// <summary>
        /// GB size to be used to specify the disk for every machine in the agent pool. If you specify 0, it will apply the default according to the \"agent vm size\" specified. Default `0` (int)
        /// </summary>
        public readonly int? AgentOsDiskSize;
        /// <summary>
        /// Name for the agent pool, upto 12 alphanumeric characters. Default `agentpool0` (string)
        /// </summary>
        public readonly string? AgentPoolName;
        /// <summary>
        /// Storage profile specifies what kind of storage used on machine in the agent pool. Chooses from [ManagedDisks StorageAccount]. Default `ManagedDisks` (string)
        /// </summary>
        public readonly string? AgentStorageProfile;
        /// <summary>
        /// Size of machine in the agent pool. Default `Standard_D1_v2` (string)
        /// </summary>
        public readonly string? AgentVmSize;
        /// <summary>
        /// The AKS auth base url (string)
        /// </summary>
        public readonly string? AuthBaseUrl;
        /// <summary>
        /// The AKS base url (string)
        /// </summary>
        public readonly string? BaseUrl;
        /// <summary>
        /// Azure client ID to use (string)
        /// </summary>
        public readonly string ClientId;
        /// <summary>
        /// Azure client secret associated with the \"client id\" (string)
        /// </summary>
        public readonly string ClientSecret;
        /// <summary>
        /// The AKS node pool count. Default: `1` (int)
        /// </summary>
        public readonly int? Count;
        /// <summary>
        /// An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes Service address range specified in \"service cidr\". Default `10.0.0.10` (string)
        /// </summary>
        public readonly string? DnsServiceIp;
        /// <summary>
        /// A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes Service address range specified in \"service cidr\". Default `172.17.0.1/16` (string)
        /// </summary>
        public readonly string? DockerBridgeCidr;
        /// <summary>
        /// Enable the Kubernetes ingress with automatic public DNS name creation. Default `false` (bool)
        /// </summary>
        public readonly bool? EnableHttpApplicationRouting;
        /// <summary>
        /// Turn on Azure Log Analytics monitoring. Uses the Log Analytics \"Default\" workspace if it exists, else creates one. if using an existing workspace, specifies \"log analytics workspace resource id\". Default `true` (bool)
        /// </summary>
        public readonly bool? EnableMonitoring;
        /// <summary>
        /// The Kubernetes version that will be used for your master *and* OKE worker nodes (string)
        /// </summary>
        public readonly string KubernetesVersion;
        /// <summary>
        /// The AKS load balancer sku (string)
        /// </summary>
        public readonly string? LoadBalancerSku;
        /// <summary>
        /// Azure Kubernetes cluster location. Default `eastus` (string)
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// The name of an existing Azure Log Analytics Workspace to use for storing monitoring data. If not specified, uses '{resource group}-{subscription id}-{location code}' (string)
        /// </summary>
        public readonly string? LogAnalyticsWorkspace;
        /// <summary>
        /// The resource group of an existing Azure Log Analytics Workspace to use for storing monitoring data. If not specified, uses the 'Cluster' resource group (string)
        /// </summary>
        public readonly string? LogAnalyticsWorkspaceResourceGroup;
        /// <summary>
        /// DNS prefix to use the Kubernetes cluster control pane (string)
        /// </summary>
        public readonly string MasterDnsPrefix;
        /// <summary>
        /// The AKS node pool max pods. Default: `110` (int)
        /// </summary>
        public readonly int? MaxPods;
        /// <summary>
        /// The AKS network plugin. Required if `imported=false` (string)
        /// </summary>
        public readonly string? NetworkPlugin;
        /// <summary>
        /// The AKS network policy (string)
        /// </summary>
        public readonly string? NetworkPolicy;
        /// <summary>
        /// A CIDR IP range from which to assign Kubernetes Pod IPs (string)
        /// </summary>
        public readonly string? PodCidr;
        /// <summary>
        /// The AKS resource group (string)
        /// </summary>
        public readonly string ResourceGroup;
        /// <summary>
        /// A CIDR IP range from which to assign Kubernetes Service IPs (string)
        /// </summary>
        public readonly string? ServiceCidr;
        /// <summary>
        /// Contents of the SSH public key used to authenticate with Linux hosts (string)
        /// </summary>
        public readonly string SshPublicKeyContents;
        /// <summary>
        /// The AKS subnet (string)
        /// </summary>
        public readonly string Subnet;
        /// <summary>
        /// Subscription credentials which uniquely identify Microsoft Azure subscription (string)
        /// </summary>
        public readonly string SubscriptionId;
        /// <summary>
        /// Use `tags` argument instead as []string
        /// </summary>
        public readonly ImmutableDictionary<string, object>? Tag;
        /// <summary>
        /// The GKE node config tags (List)
        /// </summary>
        public readonly ImmutableArray<string> Tags;
        /// <summary>
        /// Azure tenant ID to use (string)
        /// </summary>
        public readonly string TenantId;
        /// <summary>
        /// The name of the virtual network to use. If it's not specified Rancher will create a new VPC (string)
        /// </summary>
        public readonly string VirtualNetwork;
        /// <summary>
        /// The AKS virtual network resource group (string)
        /// </summary>
        public readonly string VirtualNetworkResourceGroup;

        [OutputConstructor]
        private ClusterAksConfig(
            string? aadServerAppSecret,

            string? aadTenantId,

            string? addClientAppId,

            string? addServerAppId,

            string? adminUsername,

            string agentDnsPrefix,

            int? agentOsDiskSize,

            string? agentPoolName,

            string? agentStorageProfile,

            string? agentVmSize,

            string? authBaseUrl,

            string? baseUrl,

            string clientId,

            string clientSecret,

            int? count,

            string? dnsServiceIp,

            string? dockerBridgeCidr,

            bool? enableHttpApplicationRouting,

            bool? enableMonitoring,

            string kubernetesVersion,

            string? loadBalancerSku,

            string? location,

            string? logAnalyticsWorkspace,

            string? logAnalyticsWorkspaceResourceGroup,

            string masterDnsPrefix,

            int? maxPods,

            string? networkPlugin,

            string? networkPolicy,

            string? podCidr,

            string resourceGroup,

            string? serviceCidr,

            string sshPublicKeyContents,

            string subnet,

            string subscriptionId,

            ImmutableDictionary<string, object>? tag,

            ImmutableArray<string> tags,

            string tenantId,

            string virtualNetwork,

            string virtualNetworkResourceGroup)
        {
            AadServerAppSecret = aadServerAppSecret;
            AadTenantId = aadTenantId;
            AddClientAppId = addClientAppId;
            AddServerAppId = addServerAppId;
            AdminUsername = adminUsername;
            AgentDnsPrefix = agentDnsPrefix;
            AgentOsDiskSize = agentOsDiskSize;
            AgentPoolName = agentPoolName;
            AgentStorageProfile = agentStorageProfile;
            AgentVmSize = agentVmSize;
            AuthBaseUrl = authBaseUrl;
            BaseUrl = baseUrl;
            ClientId = clientId;
            ClientSecret = clientSecret;
            Count = count;
            DnsServiceIp = dnsServiceIp;
            DockerBridgeCidr = dockerBridgeCidr;
            EnableHttpApplicationRouting = enableHttpApplicationRouting;
            EnableMonitoring = enableMonitoring;
            KubernetesVersion = kubernetesVersion;
            LoadBalancerSku = loadBalancerSku;
            Location = location;
            LogAnalyticsWorkspace = logAnalyticsWorkspace;
            LogAnalyticsWorkspaceResourceGroup = logAnalyticsWorkspaceResourceGroup;
            MasterDnsPrefix = masterDnsPrefix;
            MaxPods = maxPods;
            NetworkPlugin = networkPlugin;
            NetworkPolicy = networkPolicy;
            PodCidr = podCidr;
            ResourceGroup = resourceGroup;
            ServiceCidr = serviceCidr;
            SshPublicKeyContents = sshPublicKeyContents;
            Subnet = subnet;
            SubscriptionId = subscriptionId;
            Tag = tag;
            Tags = tags;
            TenantId = tenantId;
            VirtualNetwork = virtualNetwork;
            VirtualNetworkResourceGroup = virtualNetworkResourceGroup;
        }
    }
}
