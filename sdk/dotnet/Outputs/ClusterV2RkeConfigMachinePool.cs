// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2.Outputs
{

    [OutputType]
    public sealed class ClusterV2RkeConfigMachinePool
    {
        /// <summary>
        /// Annotations for cluster registration token object (map)
        /// </summary>
        public readonly ImmutableDictionary<string, object>? Annotations;
        /// <summary>
        /// Cluster V2 cloud credential secret name (string)
        /// </summary>
        public readonly string CloudCredentialSecretName;
        /// <summary>
        /// Machine pool control plane role? (bool)
        /// </summary>
        public readonly bool? ControlPlaneRole;
        public readonly bool? DrainBeforeDelete;
        /// <summary>
        /// Machine pool etcd role? (bool)
        /// </summary>
        public readonly bool? EtcdRole;
        /// <summary>
        /// Labels for cluster registration token object (map)
        /// </summary>
        public readonly ImmutableDictionary<string, object>? Labels;
        /// <summary>
        /// Machine pool node config (list)
        /// </summary>
        public readonly Outputs.ClusterV2RkeConfigMachinePoolMachineConfig MachineConfig;
        public readonly string? MaxUnhealthy;
        /// <summary>
        /// Name of cluster registration token (string)
        /// </summary>
        public readonly string Name;
        public readonly int? NodeStartupTimeoutSeconds;
        /// <summary>
        /// Machine pool paused? (bool)
        /// </summary>
        public readonly bool? Paused;
        /// <summary>
        /// Machine pool quantity (int)
        /// </summary>
        public readonly int? Quantity;
        /// <summary>
        /// Machine pool rolling update (List maxitems:1)
        /// </summary>
        public readonly Outputs.ClusterV2RkeConfigMachinePoolRollingUpdate? RollingUpdate;
        /// <summary>
        /// Machine pool taints (list)
        /// </summary>
        public readonly ImmutableArray<Outputs.ClusterV2RkeConfigMachinePoolTaint> Taints;
        public readonly int? UnhealthyNodeTimeoutSeconds;
        public readonly string? UnhealthyRange;
        /// <summary>
        /// Machine pool worker role? (bool)
        /// </summary>
        public readonly bool? WorkerRole;

        [OutputConstructor]
        private ClusterV2RkeConfigMachinePool(
            ImmutableDictionary<string, object>? annotations,

            string cloudCredentialSecretName,

            bool? controlPlaneRole,

            bool? drainBeforeDelete,

            bool? etcdRole,

            ImmutableDictionary<string, object>? labels,

            Outputs.ClusterV2RkeConfigMachinePoolMachineConfig machineConfig,

            string? maxUnhealthy,

            string name,

            int? nodeStartupTimeoutSeconds,

            bool? paused,

            int? quantity,

            Outputs.ClusterV2RkeConfigMachinePoolRollingUpdate? rollingUpdate,

            ImmutableArray<Outputs.ClusterV2RkeConfigMachinePoolTaint> taints,

            int? unhealthyNodeTimeoutSeconds,

            string? unhealthyRange,

            bool? workerRole)
        {
            Annotations = annotations;
            CloudCredentialSecretName = cloudCredentialSecretName;
            ControlPlaneRole = controlPlaneRole;
            DrainBeforeDelete = drainBeforeDelete;
            EtcdRole = etcdRole;
            Labels = labels;
            MachineConfig = machineConfig;
            MaxUnhealthy = maxUnhealthy;
            Name = name;
            NodeStartupTimeoutSeconds = nodeStartupTimeoutSeconds;
            Paused = paused;
            Quantity = quantity;
            RollingUpdate = rollingUpdate;
            Taints = taints;
            UnhealthyNodeTimeoutSeconds = unhealthyNodeTimeoutSeconds;
            UnhealthyRange = unhealthyRange;
            WorkerRole = workerRole;
        }
    }
}
