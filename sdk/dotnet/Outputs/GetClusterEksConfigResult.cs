// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2.Outputs
{

    [OutputType]
    public sealed class GetClusterEksConfigResult
    {
        public readonly string AccessKey;
        public readonly string? Ami;
        public readonly bool? AssociateWorkerNodePublicIp;
        public readonly int? DesiredNodes;
        public readonly string? InstanceType;
        public readonly string? KeyPairName;
        public readonly string KubernetesVersion;
        public readonly int? MaximumNodes;
        public readonly int? MinimumNodes;
        public readonly int? NodeVolumeSize;
        public readonly string? Region;
        public readonly string SecretKey;
        public readonly ImmutableArray<string> SecurityGroups;
        public readonly string? ServiceRole;
        public readonly string? SessionToken;
        public readonly ImmutableArray<string> Subnets;
        public readonly string UserData;
        public readonly string? VirtualNetwork;

        [OutputConstructor]
        private GetClusterEksConfigResult(
            string accessKey,

            string? ami,

            bool? associateWorkerNodePublicIp,

            int? desiredNodes,

            string? instanceType,

            string? keyPairName,

            string kubernetesVersion,

            int? maximumNodes,

            int? minimumNodes,

            int? nodeVolumeSize,

            string? region,

            string secretKey,

            ImmutableArray<string> securityGroups,

            string? serviceRole,

            string? sessionToken,

            ImmutableArray<string> subnets,

            string userData,

            string? virtualNetwork)
        {
            AccessKey = accessKey;
            Ami = ami;
            AssociateWorkerNodePublicIp = associateWorkerNodePublicIp;
            DesiredNodes = desiredNodes;
            InstanceType = instanceType;
            KeyPairName = keyPairName;
            KubernetesVersion = kubernetesVersion;
            MaximumNodes = maximumNodes;
            MinimumNodes = minimumNodes;
            NodeVolumeSize = nodeVolumeSize;
            Region = region;
            SecretKey = secretKey;
            SecurityGroups = securityGroups;
            ServiceRole = serviceRole;
            SessionToken = sessionToken;
            Subnets = subnets;
            UserData = userData;
            VirtualNetwork = virtualNetwork;
        }
    }
}
