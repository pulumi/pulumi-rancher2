// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rancher2.Outputs
{

    [OutputType]
    public sealed class GetClusterRkeConfigIngressResult
    {
        public readonly bool? DefaultBackend;
        public readonly string DnsPolicy;
        public readonly ImmutableDictionary<string, object> ExtraArgs;
        public readonly int HttpPort;
        public readonly int HttpsPort;
        public readonly string NetworkMode;
        public readonly ImmutableDictionary<string, object> NodeSelector;
        public readonly ImmutableDictionary<string, object> Options;
        public readonly string Provider;
        /// <summary>
        /// Ingress add-on tolerations
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterRkeConfigIngressTolerationResult> Tolerations;
        /// <summary>
        /// Update daemon set strategy
        /// </summary>
        public readonly Outputs.GetClusterRkeConfigIngressUpdateStrategyResult? UpdateStrategy;

        [OutputConstructor]
        private GetClusterRkeConfigIngressResult(
            bool? defaultBackend,

            string dnsPolicy,

            ImmutableDictionary<string, object> extraArgs,

            int httpPort,

            int httpsPort,

            string networkMode,

            ImmutableDictionary<string, object> nodeSelector,

            ImmutableDictionary<string, object> options,

            string provider,

            ImmutableArray<Outputs.GetClusterRkeConfigIngressTolerationResult> tolerations,

            Outputs.GetClusterRkeConfigIngressUpdateStrategyResult? updateStrategy)
        {
            DefaultBackend = defaultBackend;
            DnsPolicy = dnsPolicy;
            ExtraArgs = extraArgs;
            HttpPort = httpPort;
            HttpsPort = httpsPort;
            NetworkMode = networkMode;
            NodeSelector = nodeSelector;
            Options = options;
            Provider = provider;
            Tolerations = tolerations;
            UpdateStrategy = updateStrategy;
        }
    }
}
